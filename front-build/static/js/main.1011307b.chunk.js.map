{"version":3,"sources":["app-styled-components.ts","services/cookies_functions.ts","api/main-api.ts","store/auth-reducer.ts","HOC/private-route.tsx","components/common-components/choose-category/style.js","components/common-components/choose-category/choose-category.tsx","store/categories-reducer.ts","components/common-components/choose-category/choose-category-container.tsx","components/main-page/style.js","images/navigation-box.svg","components/common-components/navigation/style.js","components/common-components/navigation/navigation.tsx","components/common-components/small-ad-card/style.js","services/paste_small_plug.ts","images/plugs/plug1.jpg","images/plugs/plug2.jpg","images/plugs/plug3.jpg","images/plugs/plug4.jpg","images/plugs/plug5.jpg","images/plugs/plug6.jpg","images/plugs/plug7.jpg","images/like.svg","components/common-components/small-ad-card/small-ad-card.tsx","components/main-page/main.tsx","services/scroll_listener.ts","store/main-reducer.ts","components/main-page/main-container.tsx","components/auth-page/style.js","components/common-components/fields/input-field.tsx","services/validations.ts","images/preloader.svg","components/common-components/preloader/preloader.tsx","images/avatar.png","components/common-components/fields/upload-avatar.tsx","components/auth-page/auth.tsx","components/auth-page/auth-container.tsx","services/generator_id.ts","components/instruction-page/instruction.tsx","App.tsx","services/developer_functions.ts","reportWebVitals.js","config.ts","store/localization-reducer.ts","store/store.ts","index.tsx"],"names":["Container","styled","div","props","height","FullScreenBlock","Page","DefaultButtonStyles","getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","setCookie","value","options","path","expires","Date","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue","deleteCookie","AddUserDataCookie","userData","idUser","phone","avatar","console","log","isRegistered","instance","axios","create","baseURL","MainApi","AddNewUser","post","GetAds","get","headers","SET_AUTH_USER_DATA","SET_AUTH_USER_DATA_AND_REDIRECT","TOGGLE_LOADER_SUBMIT","CLEAN_STATE","initialState","isLoadNewUser","isRedirectToMainPage","SetUserAndRedirect","type","AuthReducer","state","action","newValue","PrivateRoute","Component","component","auth","to","Categories","active","CategoriesLine","MarginBlock","p","DefaultButton","Button","YellowButton","GreenButton","PurpleButton","RedButton","ChooseCategory","showCategories","mainCategoriesState","secondCategoriesState","SelectAllMainCategories","ChangeMainCategory","local","SelectAllSecondCategories","ChangeSecondCategory","onClick","SET_SHOW_CATEGORIES","SELECT_ALL_MAIN_CATEGORIES","SELECT_ALL_SECOND_CATEGORIES","CHANGE_MAIN_CATEGORY","CHANGE_SECOND_CATEGORY","CategoriesReducer","newCategories","categoryId","includes","connect","LocalizationReducer","langData","categories","SetShowCategories","upOrDownScroll","useEffect","PropsCategories","Ads","navBack","Navigation","Card","Like","img","Image","Info","HeadlineContainer","Label","color","TextInfo","plugs","colors","undefined","small_ad_card","ad","headline","adId","image","isLike","userName","date","time","useState","Math","floor","random","length","imageCard","min","max","rand","round","randomInteger","category","imageAd","src","alt","likeIcon","Main","adsArray","ads","scrollPosition","setScrollPosition","setScrollState","map","i","onScroll","e","target","scrollTop","IsScroll","GET_ADS","MainReducer","connector","GetAdsThunk","dispatch","a","response","status","data","PropsMain","FormBox","form","InputText","Field","SubmitButton","button","LoadButton","InputField","input","meta","hasError","touched","error","FieldContainer","ErrorSpan","span","required","composeValidators","validators","reduce","validator","PreloaderContainer","BackgroundPreloader","Preloader","full","preloader","auth_page","files","stateImg","setStateImg","fileInput","useRef","ImgFieldContainer","ImgField","onChange","ref","imgArray","push","URL","createObjectURL","ImageContainer","Photo","avatarIcon","DownloadPhotoButton","current","click","Auth","onSubmit","render","handleSubmit","validate","placeholder","AddNewUserThunk","formData","userId","c","crypto","getRandomValues","Uint8Array","toString","payload","FormData","append","ToggleLoadSubmit","CleanState","AuthProps","Instruction","common","SetUser","addEventListener","event","ctrlKey","altKey","window","store","getState","innerHeight","setHeight","handleResize","_","removeEventListener","exact","MainContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Localization","UA","langId","currentLangId","redusers","combineReducers","createStore","applyMiddleware","thunkMiddleware","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.1011307b.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport let Container = styled.div`\r\nheight: ${(props: any) => {\r\n    return props.height + 'px'\r\n}};\r\nbackground: linear-gradient(90deg, #6D4BCE 0%, #4398B6 100%);\r\nmax-width: 586px;\r\nwidth: 100%;\r\ndisplay: inline-block;\r\n\r\n@media (min-width: 586px) {\r\ndisplay: none;\r\n}\r\n`\r\n\r\nexport let FullScreenBlock = styled.div`\r\nheight: ${(props: any) => {\r\n    return props.height + 'px'\r\n}};\r\nbackground: linear-gradient(90deg, #6D4BCE 0%, #4398B6 100%);\r\nwidth: 100%;\r\ndisplay: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\nh2 {\r\n\r\n}\r\n\r\n@media (max-width: 586px) {\r\ndisplay: none;\r\n}\r\n`\r\n\r\nexport let Page = styled.div`\r\n    display: flex;\r\n    height: 100%;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n        overflow-y: overlay;\r\n`\r\n\r\nexport let DefaultButtonStyles = `\r\nwidth: calc(100% - 83px);\r\nmin-width: 250px;\r\nheight: 66px;\r\nbackground: #000000;\r\nborder-radius: 49px;\r\ncolor: #FFFFFF;\r\nfont-weight: 800;\r\nfont-size: 20px;\r\ntext-transform: uppercase;\r\ncursor: pointer;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\noutline: none;\r\nborder: none;\r\n`\r\n\r\nexport let TextInputStyle = `\r\nbackground: none;\r\n    outline: none;\r\n    border: 3px solid rgba(0, 0, 0, 0.8);\r\n    border-radius: 49px;\r\n    height: 66px;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 84px);\r\n    min-width: 250px;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    font-style: normal;\r\nfont-weight: normal;\r\nfont-size: 20px;\r\nline-height: 52px;\r\ncolor: rgba(255, 255, 255, 0.7);\r\n    \r\n    ::placeholder {\r\nfont-style: normal;\r\nfont-weight: normal;\r\nfont-size: 20px;\r\nline-height: 52px;\r\ncolor: rgba(255, 255, 255, 0.7);\r\ntext-transform: uppercase;\r\ntransition: 0.25s;\r\n    }\r\n   \r\n:focus::placeholder {\r\ncolor: rgba(255, 255, 255, 0.0);\r\n}\r\n`","export let getCookie = (name: string): string | null => {\r\n    let matches: any = document.cookie.match(new RegExp(\r\n        \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n    ))\r\n    return matches ? decodeURIComponent(matches[1]) : null\r\n}\r\n\r\nexport let setCookie = (name: string, value: string | boolean, options: any = {}): void => {\r\n\r\n    options = {\r\n        path: '/',\r\n        'max-age': 3600 * 24 * 365,\r\n        // secure: true,\r\n        // httpOnly: true,\r\n        ...options\r\n    }\r\n\r\n    if (options.expires instanceof Date) {\r\n        options.expires = options.expires.toUTCString()\r\n    }\r\n\r\n    let updatedCookie = encodeURIComponent(name) + \"=\" + encodeURIComponent(value)\r\n\r\n    for (let optionKey in options) {\r\n        updatedCookie += \"; \" + optionKey\r\n        let optionValue = options[optionKey]\r\n        if (optionValue !== true) {\r\n            updatedCookie += \"=\" + optionValue\r\n        }\r\n    }\r\n\r\n    document.cookie = updatedCookie\r\n}\r\n\r\nexport let deleteCookie = (name: string): void => {\r\n    setCookie(name, \"\", {\r\n      'max-age': -1\r\n    })\r\n  }\r\n\r\nexport let AddUserDataCookie = (userData: any) => {\r\n    if (userData.name != null && userData.idUser != null) {\r\n        \r\n        setCookie('user', userData.name)\r\n        setCookie('idUser', userData.idUser)\r\n        setCookie('phone', userData.phone)\r\n        setCookie('avatar', userData.avatar)\r\n    \r\n    }\r\n    else {\r\n        console.log('Error: Cookies not added.')\r\n    }\r\n    \r\n\r\n    if (userData.isRegistered) {\r\n        setCookie('registered', 'true')\r\n    }\r\n    else {\r\n        setCookie('registered', 'false')\r\n    }\r\n  }","import axios from 'axios'\r\nimport {getCookie} from '../services/cookies_functions'\r\n\r\nconst instance = axios.create({ baseURL: 'https://60abde1c5a4de40017ccb188.mockapi.io/' })\r\n// https://60abde1c5a4de40017ccb188.mockapi.io/\r\n// http://localhost:2000/\r\n// https://gebo-app.herokuapp.com/\r\n\r\n\r\nconst FreshToken = () => {\r\n    return {\r\n        headers: {\r\n            'Authorization':  `Bearer ${getCookie('idUser')}`\r\n        }\r\n    }\r\n}\r\n\r\nconst MainApi = {\r\n    AddNewUser(userData: FormData) {\r\n        return instance.post(`add-new-user`, userData )\r\n    },\r\n    GetAds() {\r\n        return instance.get(`get-ads`, FreshToken())\r\n    }\r\n}\r\n\r\nexport default MainApi","import {AxiosResponse} from 'axios'\r\nimport {ThunkAction} from 'redux-thunk'\r\nimport {AppStateType} from './store'\r\nimport MainApi from '../api/main-api'\r\nimport {AddUserDataCookie} from '../services/cookies_functions'\r\nimport {AuthDataType, InitialStateAndUserDataType} from '../types/types'\r\nimport {generatorId} from '../services/generator_id'\r\n\r\n///////////// Const for actioncreators\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA'\r\nconst SET_AUTH_USER_DATA_AND_REDIRECT = 'SET_AUTH_USER_DATA_AND_REDIRECT'\r\nconst TOGGLE_LOADER_SUBMIT = 'TOGGLE_LOADER_SUBMIT'\r\nconst CLEAN_STATE = 'CLEAN_STATE'\r\n\r\n///////////// Initial state\r\nlet initialState: InitialStateAndUserDataType = {\r\n    isRegistered: null,\r\n    name: null,\r\n    phone: null,\r\n    avatar: null,\r\n    idUser: null,\r\n    isLoadNewUser: false,\r\n    isRedirectToMainPage: false\r\n}\r\n\r\n///////////// Reducer\r\nconst AuthReducer = (state = initialState, action: ActionsTypes): InitialStateAndUserDataType => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                isRegistered: action.userData.isRegistered,\r\n                name: action.userData.name,\r\n                idUser: action.userData.idUser,\r\n                phone: action.userData.phone,\r\n                avatar: action.userData.avatar\r\n            }\r\n        }\r\n        case TOGGLE_LOADER_SUBMIT:{\r\n            \r\n            let newValue = true\r\n            if (state.isLoadNewUser) {\r\n                newValue = false\r\n            }\r\n            \r\n            return {\r\n                ...state,\r\n                isLoadNewUser: newValue\r\n            }\r\n        }\r\n        case SET_AUTH_USER_DATA_AND_REDIRECT: {\r\n            return {\r\n                ...state,\r\n                isRegistered: action.userData.isRegistered,\r\n                name: action.userData.name,\r\n                idUser: action.userData.idUser,\r\n                phone: action.userData.phone,\r\n                avatar: action.userData.avatar,\r\n                isLoadNewUser: false,\r\n                isRedirectToMainPage: true\r\n            }\r\n        }\r\n        case CLEAN_STATE: {\r\n            \r\n            return {\r\n                ...state,\r\n                isLoadNewUser: false,\r\n                isRedirectToMainPage: false\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n}\r\n\r\n///////////// Action creators\r\n// actions types\r\ntype ActionsTypes = \r\n    SetUserType |\r\n    ToggleLoadSubmitType |\r\n    SetUserAndRedirectType |\r\n    CleanStateType\r\n//\r\n\r\ntype CleanStateType = {\r\n    type: typeof CLEAN_STATE\r\n}\r\n\r\nexport let CleanState = ():CleanStateType => ({type: CLEAN_STATE})\r\n\r\ntype ToggleLoadSubmitType = {\r\n    type: typeof TOGGLE_LOADER_SUBMIT\r\n}\r\n\r\nexport let ToggleLoadSubmit = (): ToggleLoadSubmitType => ({type: TOGGLE_LOADER_SUBMIT})\r\n\r\n\r\ntype SetUserType = {\r\n    type: typeof SET_AUTH_USER_DATA\r\n    userData: UserDataType\r\n}\r\ntype UserDataType = {\r\n    isRegistered: boolean\r\n    name: string | null\r\n    idUser: string | null\r\n    phone: string | null\r\n    avatar: string | null\r\n}\r\nexport let SetUser = (userData: UserDataType): SetUserType => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    userData: userData\r\n})\r\n\r\ntype SetUserAndRedirectType = {\r\n    type: typeof SET_AUTH_USER_DATA_AND_REDIRECT\r\n    userData: UserDataType\r\n}\r\nlet SetUserAndRedirect = (userData: UserDataType): SetUserAndRedirectType => ({type: SET_AUTH_USER_DATA_AND_REDIRECT, userData})\r\n\r\n///////////// Thanks\r\n// types for thunks\r\ntype ThunkActions = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>\r\n//\r\nexport let AddNewUserThunk = (formData: AuthDataType): ThunkActions => async (dispatch) => {\r\n    \r\n    const userId: string = generatorId()\r\n    type UserDataType = {\r\n        isRegistered: boolean\r\n        name: string\r\n        avatar: string | null\r\n        phone: string | null\r\n        idUser: string\r\n    }\r\n    \r\n    let payload = new FormData()\r\n    let userData: UserDataType = {\r\n        isRegistered: true,\r\n        name: formData.name,\r\n        avatar: null,\r\n        phone: null,\r\n        idUser: userId\r\n    }\r\n\r\n    payload.append('name', formData.name)\r\n    if (formData.avatar) {\r\n        payload.append('avatar', formData.avatar[0])\r\n    }\r\n    if (formData.phone && formData.phone !== '') {\r\n        payload.append('phone', formData.phone)\r\n        userData.phone = formData.phone\r\n    }\r\n    payload.append('idUser', userId)\r\n    \r\n\r\n    let response: AxiosResponse<any> = await MainApi.AddNewUser(payload)\r\n\r\n    if (response.status === 201) {\r\n        userData.avatar = response.data.avatar\r\n        AddUserDataCookie(userData)\r\n        dispatch(SetUserAndRedirect(userData))\r\n    }\r\n    else {\r\n        console.log('AddNewUserThunk error.')\r\n    }\r\n}\r\n/////////////\r\n\r\nexport default AuthReducer","import React, {FC} from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\ntype PropsType = {\r\n    component: FC\r\n    auth: boolean | null\r\n}\r\nconst PrivateRoute: FC<PropsType> = ({ component: Component, auth}) => {\r\n\r\n    return <>\r\n        {auth\r\n            ? <Component />\r\n            : <Redirect to=\"/login\" />}\r\n    </>\r\n\r\n}\r\n\r\nexport default PrivateRoute","import styled from 'styled-components'\r\n\r\nexport let Categories = styled.div`\r\n    position: fixed;\r\n    width: 100%;\r\n    z-index: 10;\r\n    background: linear-gradient(90deg, #6D4BCE 0%, #4398B6 100%);\r\n    height:  ${props => props.active ? '0' : '118px'};\r\n    padding: ${props => props.active ? '0' : '8px 0'};\r\n    transition: 0.5s;\r\n`\r\n\r\nexport let CategoriesLine = styled.div`\r\n    height:  ${props => props.active ? '0' : '59px'};\r\n    opacity:  ${props => props.active ? '0' : '1'};\r\n    display: flex;\r\n    overflow-x: scroll;\r\n    overflow-y: hidden;\r\n    padding: 0 22px;\r\n    transition: 0.25s;\r\n    \r\n   ::-webkit-scrollbar {\r\n    height: 0px;\r\n    }\r\n\r\n`\r\n\r\nexport let MarginBlock = styled.p`\r\nwidth: 8px;\r\nheight: 8px;\r\np {\r\nwidth: 8px;\r\nheight: 8px;\r\n}\r\n`\r\n\r\nexport let DefaultButton = styled.div`\r\nheight: 43px;\r\nbackground: radial-gradient(97.57% 210.75% at 0.9% 2.98%, rgba(0, 0, 0, 0.4) 0%, rgba(0, 0, 0, 0.4) 99.99%);\r\nbox-shadow: 0px 0px 8px rgba(0, 0, 0, 0.2);\r\nborder-radius: 47px;\r\nfont-style: normal;\r\nfont-weight: 800;\r\nfont-size: 14px;\r\nline-height: 52px;\r\nletter-spacing: -0.32px;\r\ntext-transform: uppercase;\r\ncolor: white;\r\ncursor: pointer;\r\nwidth: min-content;\r\npadding: 0 14px;\r\ndisplay: flex;\r\nalign-items: center;\r\nmargin: 8px 14px 8px 0;\r\nuser-select:none;\r\ntransition: 0.25s;\r\n -webkit-tap-highlight-color: rgba(0,0,0,0); \r\n -webkit-tap-highlight-color: transparent;\r\n`\r\nexport let Button = styled(DefaultButton)`\r\ncolor: ${props => props.active ? 'rgba(0, 0, 0, 0.8)' : 'white'};\r\nbackground: ${props => props.active ? 'white' : 'radial-gradient(97.57% 210.75% at 0.9% 2.98%, rgba(0, 0, 0, 0.4) 0%, rgba(0, 0, 0, 0.4) 99.99%)'};\r\n`\r\n\r\nexport let YellowButton = styled(DefaultButton)`\r\nbackground: ${props => props.active ? '#BFB439' : 'radial-gradient(97.57% 210.75% at 0.9% 2.98%, rgba(0, 0, 0, 0.4) 0%, rgba(0, 0, 0, 0.4) 99.99%)'};\r\n`\r\n\r\nexport let GreenButton = styled(DefaultButton)`\r\nbackground: ${props => props.active ? '#36B782' : 'radial-gradient(97.57% 210.75% at 0.9% 2.98%, rgba(0, 0, 0, 0.4) 0%, rgba(0, 0, 0, 0.4) 99.99%)'};\r\n`\r\n\r\nexport let PurpleButton = styled(DefaultButton)`\r\nbackground: ${props => props.active ? '#8B3BBE' : 'radial-gradient(97.57% 210.75% at 0.9% 2.98%, rgba(0, 0, 0, 0.4) 0%, rgba(0, 0, 0, 0.4) 99.99%)'};\r\n`\r\n\r\nexport let RedButton = styled(DefaultButton)`\r\nbackground: ${props => props.active ? '#BF3339' : 'radial-gradient(97.57% 210.75% at 0.9% 2.98%, rgba(0, 0, 0, 0.4) 0%, rgba(0, 0, 0, 0.4) 99.99%)'};\r\n`","import React, {FC} from 'react'\r\nimport {\r\n    Button,\r\n    Categories,\r\n    CategoriesLine,\r\n    GreenButton,\r\n    MarginBlock,\r\n    PurpleButton,\r\n    RedButton,\r\n    YellowButton\r\n} from './style'\r\n\r\n///////////// types for props\r\ntype PropsType = {\r\n    SelectAllMainCategories: () => void\r\n    SelectAllSecondCategories: () => void\r\n    ChangeMainCategory: (categoryId: number) => void\r\n    ChangeSecondCategory: (categoryId: number) => void\r\n    \r\n    showCategories: boolean\r\n    mainCategoriesState: Array<boolean>\r\n    secondCategoriesState: Array<boolean>\r\n    local: Array<string>\r\n}\r\n\r\n\r\nlet ChooseCategory: FC<PropsType> = ({\r\n                                         showCategories,\r\n                                         mainCategoriesState,\r\n                                         secondCategoriesState,\r\n                                         SelectAllMainCategories,\r\n                                         ChangeMainCategory,\r\n                                         local,\r\n                                         SelectAllSecondCategories,\r\n                                         ChangeSecondCategory\r\n}) => {\r\n\r\n\r\n    {/*@ts-ignore*/}\r\n    return <Categories active={showCategories}>\r\n            {/*@ts-ignore*/}\r\n        <CategoriesLine active={showCategories}>\r\n            {/*@ts-ignore*/}\r\n            <Button onClick={()=>{SelectAllMainCategories()}} active={mainCategoriesState[0]}>{local[0]}</Button>\r\n            {/*@ts-ignore*/}\r\n            <YellowButton onClick={()=>{ChangeMainCategory(1)}} active={mainCategoriesState[1]}>{local[1]}</YellowButton>\r\n            {/*@ts-ignore*/}\r\n            <GreenButton onClick={()=>{ChangeMainCategory(2)}} active={mainCategoriesState[2]}>{local[2]}</GreenButton>\r\n            {/*@ts-ignore*/}\r\n            <PurpleButton onClick={()=>{ChangeMainCategory(3)}} active={mainCategoriesState[3]}>{local[3]}</PurpleButton>\r\n            {/*@ts-ignore*/}\r\n            <RedButton onClick={()=>{ChangeMainCategory(4)}} active={mainCategoriesState[4]}>{local[4]}</RedButton>\r\n            <MarginBlock><p/></MarginBlock>\r\n        </CategoriesLine>\r\n            {/*@ts-ignore*/}\r\n        <CategoriesLine active={showCategories}>\r\n            {/*@ts-ignore*/}\r\n            <Button onClick={()=>{SelectAllSecondCategories()}} active={secondCategoriesState[0]}>{local[0]}</Button>\r\n            {/*@ts-ignore*/}\r\n            <Button onClick={()=>{ChangeSecondCategory(1)}} active={secondCategoriesState[1]}>{local[5]}</Button>\r\n            {/*@ts-ignore*/}\r\n            <Button onClick={()=>{ChangeSecondCategory(2)}} active={secondCategoriesState[2]}>{local[6]}</Button>\r\n            {/*@ts-ignore*/}\r\n            <Button onClick={()=>{ChangeSecondCategory(3)}} active={secondCategoriesState[3]}>{local[7]}</Button>\r\n            {/*@ts-ignore*/}\r\n            <Button onClick={()=>{ChangeSecondCategory(4)}} active={secondCategoriesState[4]}>{local[8]}</Button>\r\n            <MarginBlock><p/></MarginBlock>\r\n        </CategoriesLine>\r\n    </Categories>\r\n}\r\n\r\n\r\nexport default ChooseCategory","///////////// Const for action creators\r\nconst SET_SHOW_CATEGORIES = 'SET_SHOW_CATEGORIES'\r\nconst SELECT_ALL_MAIN_CATEGORIES = 'SELECT_ALL_MAIN_CATEGORIES'\r\nconst SELECT_ALL_SECOND_CATEGORIES = 'SELECT_ALL_SECOND_CATEGORIES'\r\nconst CHANGE_MAIN_CATEGORY = 'CHANGE_MAIN_CATEGORY'\r\nconst CHANGE_SECOND_CATEGORY = 'CHANGE_SECOND_CATEGORY'\r\n\r\n///////////// Initial state\r\ntype CategoriesInitStateType = {\r\n    showCategories: boolean\r\n    mainCategoriesState: Array<boolean>\r\n    secondCategoriesState: Array<boolean>\r\n}\r\n\r\nlet initialState: CategoriesInitStateType = {\r\n    showCategories: true,\r\n    mainCategoriesState: [true, false, false, false, false],\r\n    secondCategoriesState: [true, false, false, false, false]\r\n}\r\n\r\n///////////// Reduser\r\nconst CategoriesReducer = (state = initialState, action: ActionsTypes): CategoriesInitStateType => {\r\n    switch (action.type) {\r\n        \r\n        case SET_SHOW_CATEGORIES: {\r\n            return {\r\n                ...state,\r\n                showCategories: !state.showCategories\r\n            }\r\n        }\r\n        case SELECT_ALL_MAIN_CATEGORIES : {\r\n            return {\r\n                ...state,\r\n                mainCategoriesState: [true, false, false, false, false]\r\n            }\r\n        }\r\n        case SELECT_ALL_SECOND_CATEGORIES : {\r\n            return {\r\n                ...state,\r\n                secondCategoriesState: [true, false, false, false, false]\r\n            }\r\n        }\r\n        case CHANGE_MAIN_CATEGORY: {\r\n            \r\n            ///// set category\r\n            let newCategories = [...state.mainCategoriesState]\r\n            newCategories[action.categoryId] = !newCategories[action.categoryId]\r\n            \r\n            ///// if category is true - set false \"all\" button\r\n            if (newCategories[action.categoryId]) {\r\n                newCategories[0] = false\r\n            }\r\n            \r\n            ///// if category not choose - set true \"all\" button\r\n            if (!newCategories.includes(true)) {\r\n                newCategories[0] = true\r\n            }\r\n            \r\n            return {\r\n                ...state,\r\n                mainCategoriesState: newCategories\r\n            }\r\n        }\r\n        case CHANGE_SECOND_CATEGORY: {\r\n\r\n            ///// set category\r\n            let newCategories = [...state.secondCategoriesState]\r\n            newCategories[action.categoryId] = !newCategories[action.categoryId]\r\n\r\n            ///// if category is true - set false \"all\" button\r\n            if (newCategories[action.categoryId]) {\r\n                newCategories[0] = false\r\n            }\r\n\r\n            ///// if category not choose - set true \"all\" button\r\n            if (!newCategories.includes(true)) {\r\n                newCategories[0] = true\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                secondCategoriesState: newCategories\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n}\r\n\r\n///////////// Action creators\r\ntype ActionsTypes =\r\n    SetShowCategoriesType |\r\n    SelectAllMainCategoriesType |\r\n    ChangeMainCategoryType |\r\n    SelectAllSecondCategoriesType |\r\n    ChangeSecondCategoryType\r\n\r\ntype SetShowCategoriesType = {\r\n    type: typeof SET_SHOW_CATEGORIES\r\n}\r\nexport let SetShowCategories = (): SetShowCategoriesType => ({type: SET_SHOW_CATEGORIES})\r\n\r\n\r\ntype SelectAllMainCategoriesType = {\r\n    type: typeof SELECT_ALL_MAIN_CATEGORIES\r\n}\r\nexport let SelectAllMainCategories = (): SelectAllMainCategoriesType => ({type: SELECT_ALL_MAIN_CATEGORIES})\r\n\r\ntype SelectAllSecondCategoriesType = {\r\n    type: typeof SELECT_ALL_SECOND_CATEGORIES\r\n}\r\nexport let SelectAllSecondCategories = (): SelectAllSecondCategoriesType => ({type: SELECT_ALL_SECOND_CATEGORIES})\r\n\r\n\r\ntype ChangeMainCategoryType = {\r\n    type: typeof CHANGE_MAIN_CATEGORY\r\n    categoryId: number\r\n}\r\nexport let ChangeMainCategory = (categoryId: number): ChangeMainCategoryType => ({type: CHANGE_MAIN_CATEGORY, categoryId})\r\n\r\ntype ChangeSecondCategoryType = {\r\n    type: typeof CHANGE_SECOND_CATEGORY\r\n    categoryId: number\r\n}\r\nexport let ChangeSecondCategory = (categoryId: number): ChangeSecondCategoryType => ({type: CHANGE_SECOND_CATEGORY, categoryId})\r\n\r\n\r\n/////////////\r\n\r\nexport default CategoriesReducer","import React, {FC, useEffect} from 'react'\r\nimport {AppStateType} from '../../../store/store'\r\nimport {connect} from 'react-redux'\r\nimport ChooseCategory from './choose-category'\r\nimport {\r\n    ChangeMainCategory, ChangeSecondCategory,\r\n    SelectAllMainCategories,\r\n    SelectAllSecondCategories,\r\n    SetShowCategories\r\n} from '../../../store/categories-reducer'\r\n\r\ntype PropsType = {\r\n    SetShowCategories: () => void\r\n    SelectAllMainCategories: () => void\r\n    SelectAllSecondCategories: () => void\r\n    ChangeMainCategory: (categoryId: number) => void\r\n    ChangeSecondCategory: (categoryId: number) => void\r\n\r\n    showCategories: boolean\r\n    mainCategoriesState: Array<boolean>\r\n    secondCategoriesState: Array<boolean>\r\n    local: Array<string>\r\n    upOrDownScroll: Array<boolean>\r\n}\r\n\r\nlet ChooseCategoryContainer: FC<PropsType> = ({\r\n                                                  showCategories,\r\n                                                  SetShowCategories,\r\n                                                  mainCategoriesState,\r\n                                                  SelectAllMainCategories,\r\n                                                  ChangeMainCategory,\r\n                                                  local,\r\n                                                  upOrDownScroll,\r\n                                                  SelectAllSecondCategories,\r\n                                                  ChangeSecondCategory,\r\n                                                  secondCategoriesState\r\n                                              }) => {\r\n    \r\n    ///// trigger when user scroll page\r\n    useEffect(()=>{\r\n            SetShowCategories()\r\n    },[upOrDownScroll])\r\n\r\n    \r\n    let PropsCategories = {\r\n        showCategories,\r\n        mainCategoriesState,\r\n        SelectAllMainCategories,\r\n        ChangeMainCategory,\r\n        local,\r\n        SelectAllSecondCategories,\r\n        ChangeSecondCategory,\r\n        secondCategoriesState\r\n    }\r\n    \r\n        return <ChooseCategory {...PropsCategories} />\r\n    \r\n}\r\n\r\n///////////// create props for component\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        local: state.LocalizationReducer.langData.categories,\r\n        showCategories: state.CategoriesReducer.showCategories,\r\n        mainCategoriesState: state.CategoriesReducer.mainCategoriesState,\r\n        secondCategoriesState: state.CategoriesReducer.secondCategoriesState\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    SetShowCategories,\r\n    SelectAllMainCategories,\r\n    ChangeMainCategory,\r\n    SelectAllSecondCategories,\r\n    ChangeSecondCategory\r\n})(ChooseCategoryContainer)\r\n","import styled from 'styled-components'\r\n\r\nexport let Container = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nheight: 100%;\r\noverflow-y: scroll;\r\n`\r\n\r\nexport let Ads = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nmargin-top: 135px;\r\n`","export default __webpack_public_path__ + \"static/media/navigation-box.953b6f51.svg\";","import styled from 'styled-components'\r\nimport navBack from '../../../images/navigation-box.svg'\r\n\r\nexport let Container = styled.div`\r\n    width: 317px;\r\n    position: fixed;\r\n    bottom: 39px;\r\n    background-image:  url(${navBack});\r\n    background-repeat: no-repeat;\r\n`","import React, {FC} from 'react'\r\nimport {Container} from './style'\r\n\r\n///////////// types for props\r\ntype PropsType = {\r\n}\r\n\r\n\r\nlet Navigation: FC<PropsType> = ({}) => {\r\n\r\n    return <Container>\r\n    </Container>\r\n}\r\n\r\n\r\nexport default Navigation","import styled from 'styled-components'\r\n\r\nexport let Card = styled.div`\r\nwidth: calc(100% - 44px);\r\nheight: 152px;\r\nbackground: radial-gradient(97.57% 210.75% at 0.9% 2.98%,rgba(0,0,0,0.4) 0%,rgba(0,0,0,0.4) 99.99%);\r\nborder-radius: 47px;\r\nalign-self: center;\r\nmargin-bottom: 14px;\r\nposition: relative;\r\ndisplay: flex;\r\nmin-width: 329px;\r\n`\r\nexport let Like = styled.img`\r\n    position: absolute;\r\n    right: 20px;\r\n    top: 20px;\r\n    cursor: pointer;\r\n     -webkit-tap-highlight-color: rgba(0,0,0,0); \r\n -webkit-tap-highlight-color: transparent;\r\n`\r\n\r\nexport let Image = styled.div`\r\nheight: 152px;\r\nwidth: 152px;\r\n\r\nimg {\r\nwidth: inherit;\r\nheight: inherit;\r\nborder-radius: 47px 0 0 47px;\r\nobject-fit: cover;\r\n}\r\n`\r\n\r\nexport let Info = styled.div`\r\nwidth: 100%;\r\n`\r\n\r\nexport let HeadlineContainer = styled.div`\r\nwidth: calc(100% - 80px);\r\nmin-width: 100px;\r\noverflow-y: hidden;\r\nheight: 36px;\r\nmargin-left: 15px;\r\nmargin-top: 19px;\r\ndisplay: flex;\r\nalign-items: flex-start;\r\n\r\np {\r\nfont-style: normal;\r\nfont-weight: 800;\r\nfont-size: 14px;\r\nline-height: 18px;\r\nletter-spacing: 0.68px;\r\ntext-transform: uppercase;\r\ncolor: #FFFFFF;\r\n    margin: 0;\r\n}\r\n`\r\n\r\nexport let Label = styled.div`\r\nmargin-left: 15px;\r\nmargin-top: 12px;\r\nbackground: ${props => props.color};\r\nbox-shadow: 0px 0px 40px 1px rgba(0, 0, 0, 0.21);\r\nborder-radius: 49px;\r\nwidth: 132px;\r\nheight: 26px;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\ncolor: white;\r\nfont-style: normal;\r\nfont-weight: 800;\r\nfont-size: 13px;\r\nletter-spacing: -0.32px;\r\ntext-transform: uppercase;\r\n`\r\n\r\nexport let TextInfo = styled.p`\r\nmargin: 13px 0 0 15px;\r\nfont-style: normal;\r\nfont-weight: normal;\r\nfont-size: 14px;\r\nline-height: 13px;\r\nletter-spacing: -0.32px;\r\ntext-transform: capitalize;\r\n\r\ncolor: rgba(255, 255, 255, 0.7);\r\n\r\nspan {\r\nmargin-left: 5px;\r\n}\r\n`\r\n\r\n","import plug1 from '../images/plugs/plug1.jpg'\r\nimport plug2 from '../images/plugs/plug2.jpg'\r\nimport plug3 from '../images/plugs/plug3.jpg'\r\nimport plug4 from '../images/plugs/plug4.jpg'\r\nimport plug5 from '../images/plugs/plug5.jpg'\r\nimport plug6 from '../images/plugs/plug6.jpg'\r\nimport plug7 from '../images/plugs/plug7.jpg'\r\n\r\nlet plugs = [\r\n    plug1,\r\n    plug2,\r\n    plug3,\r\n    plug4,\r\n    plug5,\r\n    plug6,\r\n    plug7\r\n]\r\n\r\nexport let PasteSmallPlug = () => {\r\n    return plugs[Math.floor(Math.random() * plugs.length)]\r\n}","export default __webpack_public_path__ + \"static/media/plug1.61df315d.jpg\";","export default __webpack_public_path__ + \"static/media/plug2.f35610fd.jpg\";","export default __webpack_public_path__ + \"static/media/plug3.8831e297.jpg\";","export default __webpack_public_path__ + \"static/media/plug4.5fdf9bf6.jpg\";","export default __webpack_public_path__ + \"static/media/plug5.f6790e4c.jpg\";","export default __webpack_public_path__ + \"static/media/plug6.971e3f36.jpg\";","export default __webpack_public_path__ + \"static/media/plug7.a2238561.jpg\";","export default __webpack_public_path__ + \"static/media/like.04652187.svg\";","import React, {FC, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {AppStateType} from '../../../store/store'\r\nimport {Card, HeadlineContainer, Image, Info, Label, Like, TextInfo} from './style'\r\nimport {PasteSmallPlug} from '../../../services/paste_small_plug'\r\nimport likeIcon from '../../../images/like.svg'\r\n\r\n\r\n\r\n///////////// types for props\r\ntype PropsType = {\r\n    local: string[],\r\n    ad: any\r\n}\r\n\r\n///// for mock\r\nfunction randomInteger(min: number, max: number) {\r\n    let rand = min - 0.5 + Math.random() * (max - min + 1)\r\n    return Math.round(rand)\r\n}\r\nlet colors = [undefined, '#BFB439', '#35B881', '#8B3BBE', '#BF3339']\r\n/////\r\n\r\n\r\n\r\nlet SmallAdCard: FC<PropsType> = ({\r\n                                      local,\r\n                                      ad\r\n    }) => {\r\n\r\n    let {\r\n        adId,\r\n        headline,\r\n        isLike,\r\n        image,\r\n        categoryId,\r\n        userName,\r\n        date,\r\n        time\r\n    } = ad\r\n    \r\n    ///// for save plug image\r\n    const [imageCard] = useState(PasteSmallPlug())\r\n    const [category] = useState(randomInteger(1, 4))\r\n    \r\n  \r\n    let imageAd = imageCard\r\n    if (image !== null) {\r\n        imageAd = image\r\n    }\r\n\r\n    return <Card>\r\n        <Image>\r\n            <img src={imageAd} alt={local[0]}/>\r\n        </Image>\r\n        <Info>\r\n            <HeadlineContainer>\r\n                <p>{headline}</p>\r\n            </HeadlineContainer>\r\n            <Label color={colors[category]}>{local[category]}</Label>\r\n            <TextInfo>{userName}<br/>{date}<span>{time}</span></TextInfo>\r\n        </Info>\r\n        {isLike\r\n        ? <Like src={likeIcon} />\r\n        : <Like src={likeIcon} />}\r\n        \r\n    </Card>\r\n}\r\n\r\n///////////// create props for component\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        local: state.LocalizationReducer.langData.small_ad_card\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {})(SmallAdCard)\r\n","import React, {FC, useEffect, useState} from 'react'\r\nimport ChooseCategoryContainer from '../common-components/choose-category/choose-category-container'\r\nimport {Ads, Container} from './style'\r\nimport {IsScroll} from '../../services/scroll_listener'\r\nimport Navigation from '../common-components/navigation/navigation'\r\nimport SmallAdCard from '../common-components/small-ad-card/small-ad-card'\r\n\r\n\r\n///////////// types for props\r\ntype PropsType = {\r\n    ads: any[] | null\r\n}\r\n\r\nlet Main: FC<PropsType> = ({ads}) => {\r\n    \r\n    ///// state for listen scroll up or down\r\n    const [scrollPosition, setScrollPosition] = useState([0,0])\r\n    const [upOrDownScroll, setScrollState] = useState([false, false])\r\n    \r\n    \r\n    let adsArray\r\n    if (ads !== null) {\r\n         adsArray = ads.map((i: any) => {\r\n            return <SmallAdCard ad={i} />\r\n        })\r\n    }\r\n\r\n    return <Container onScroll={(e: any)=>{IsScroll(e, upOrDownScroll, setScrollState, scrollPosition, setScrollPosition)}}>\r\n    <ChooseCategoryContainer upOrDownScroll={upOrDownScroll} />\r\n    <Ads>\r\n        {adsArray}\r\n    </Ads>\r\n        <Navigation />\r\n    </Container>\r\n}\r\n\r\n\r\nexport default Main","export let IsScroll = (\r\n    e: any, \r\n    upOrDownScroll: Array<boolean>, \r\n    setScrollState: (value: Array<boolean>) => void, \r\n    scrollPosition: Array<number>,\r\n    setScrollPosition: (value: Array<number>) => void,\r\n) => {\r\n\r\n    if (!upOrDownScroll[0] && !upOrDownScroll[1]) {\r\n\r\n        ///// set state when user first time scroll to down\r\n        if (scrollPosition[1] < e.target.scrollTop) {\r\n            setScrollPosition([scrollPosition[1], e.target.scrollTop])\r\n            setScrollState([true, false])\r\n        }\r\n\r\n    } else if (upOrDownScroll[0]) {\r\n\r\n        ///// set state when user scroll to up\r\n        if (scrollPosition[1] > e.target.scrollTop) {\r\n            setScrollPosition([scrollPosition[1], e.target.scrollTop])\r\n            setScrollState([false, true])\r\n        } else {\r\n            setScrollPosition([scrollPosition[1], e.target.scrollTop])\r\n        }\r\n\r\n    } else if (upOrDownScroll[1]) {\r\n\r\n        ///// set state when user scroll to down\r\n        if (scrollPosition[1] < e.target.scrollTop) {\r\n            setScrollPosition([scrollPosition[1], e.target.scrollTop])\r\n            setScrollState([true, false])\r\n        } else {\r\n            setScrollPosition([scrollPosition[1], e.target.scrollTop])\r\n        }\r\n\r\n    }\r\n\r\n}","import {AxiosResponse} from 'axios'\r\nimport {ThunkAction} from 'redux-thunk'\r\nimport {AppStateType} from './store'\r\nimport MainApi from '../api/main-api'\r\n\r\n///////////// Const for actioncreators\r\nconst GET_ADS = 'GET_ADS'\r\n\r\ntype InitialStateMainPageDataType = {\r\n    ads: Array<any> | null\r\n}\r\n\r\n///////////// Initial state\r\nlet initialState: InitialStateMainPageDataType = {\r\n  ads: null\r\n}\r\n\r\n///////////// Reducer\r\nconst MainReducer = (state = initialState, action: ActionsTypes): InitialStateMainPageDataType => {\r\n    switch (action.type) {\r\n        case GET_ADS: {\r\n            return {\r\n                ...state,\r\n                ads: action.ads\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n}\r\n\r\n///////////// Action creators\r\n// actions types\r\ntype ActionsTypes = |\r\n    GetAdsType\r\n\r\n//\r\n    \r\n///////////// Thanks\r\n// types for thunks\r\ntype ThunkActions = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>\r\n//\r\n\r\ntype GetAdsType = {\r\n    type: typeof GET_ADS\r\n    ads: Array<any>\r\n}\r\n\r\nlet GetAds = (ads: Array<any>): GetAdsType => ({type: GET_ADS, ads})\r\n\r\n\r\nexport let  GetAdsThunk = (): ThunkActions => async (dispatch) => {\r\n\r\n    const response: AxiosResponse<any> = await MainApi.GetAds()\r\n    \r\n    if (response.status === 200) {\r\n        dispatch(GetAds(response.data))\r\n    }\r\n}\r\n/////////////\r\n\r\nexport default MainReducer","import React, {FC, useEffect} from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {AppStateType} from '../../store/store'\r\nimport {connect, ConnectedProps} from 'react-redux'\r\nimport Main from './main'\r\nimport {getCookie} from '../../services/cookies_functions'\r\nimport {GetAdsThunk} from '../../store/main-reducer'\r\n\r\ntype PropsType = ConnectedProps<typeof connector>\r\n\r\nlet MainContainer: FC<PropsType> = ({\r\n                                        GetAdsThunk,\r\n                                        ads\r\n}) => {\r\n    \r\n    useEffect(()=>{\r\n        GetAdsThunk()\r\n    },[])\r\n    \r\n    let PropsMain = {\r\n        ads\r\n    }\r\n\r\n    if (getCookie('isReadInstruction') !== 'true') {\r\n        return <Main {...PropsMain}/>\r\n    } else {\r\n        return <Redirect to={'/instruction'} />\r\n    }\r\n    \r\n}\r\n\r\n///////////// create props for App component\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        ads: state.MainReducer.ads\r\n    }\r\n}\r\n\r\nconst connector = connect(mapStateToProps, {\r\n    GetAdsThunk\r\n})\r\nexport default connector(MainContainer)\r\n","import styled from 'styled-components'\r\nimport {DefaultButtonStyles, TextInputStyle} from '../../app-styled-components'\r\nimport {Field} from 'react-final-form'\r\n\r\nexport let FormBox = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n`\r\n\r\nexport let InputText = styled(Field)`\r\n${TextInputStyle}\r\nmargin-top: 30px;\r\n`\r\n\r\nexport let SubmitButton = styled.button`\r\n${DefaultButtonStyles}\r\nmargin-top: 60px;\r\nmargin-bottom: 60px;\r\n`\r\n\r\nexport let LoadButton = styled.div`\r\n${DefaultButtonStyles}\r\nmargin-top: 60px;\r\nmargin-bottom: 60px;\r\n`\r\n\r\nexport {}","// @ts-ignore\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\n// @ts-ignore\r\nconst InputField = ({input, meta, ...props}) => {\r\n\r\n    let hasError = meta.touched && meta.error\r\n\r\n    return <FieldContainer>\r\n        <input\r\n            {...input}\r\n            {...props}\r\n        />\r\n        {hasError && <ErrorSpan>{meta.error}</ErrorSpan>}\r\n    </FieldContainer>\r\n}\r\n\r\nexport default InputField\r\n\r\n\r\nlet FieldContainer = styled.div`\r\n    width: inherit;\r\n    height: inherit;\r\n    position: relative;\r\n   display: flex;\r\n    justify-content: center;\r\n`\r\n\r\nlet ErrorSpan = styled.span`\r\nposition: absolute;\r\n    color: red;\r\n    bottom: -20px;\r\n`","/*\r\nFile contains functions for validation fields in forms.\r\n */\r\n\r\nexport const required = (value: any) => (value ? undefined : \"Обов'язкове поле\")\r\nexport const numberQuantity = (number: any) => (value: any) => (\r\n    value.length === number ? undefined : `Не верный формат`\r\n)\r\n\r\n\r\nexport const minLength = (number: any) => (value: any) => {\r\n    if (value) {\r\n        return value.length >= number ? undefined : `Минимальное количество символов ${number}`\r\n    }\r\n}\r\n    \r\n\r\n\r\nexport const maxLength = (number: any) => (value: any) => {\r\n    if (value) {\r\n       return  value.length <= number ? undefined : `Максимальное количество символов ${number}`\r\n    }\r\n}\r\n\r\n\r\nexport const composeValidators = (...validators: any) => (value: any) =>\r\n    validators.reduce((error: any, validator: any) => error || validator(value), undefined)","export default __webpack_public_path__ + \"static/media/preloader.d8588b2b.svg\";","import React, {FC} from 'react'\r\nimport styled from 'styled-components'\r\nimport preloader from '../../../images/preloader.svg'\r\n\r\ntype PropsType = {\r\n    full: boolean\r\n    height?: number\r\n}\r\n\r\nlet Preloader: FC<PropsType> = ({full, height = '150' }) => {\r\n\r\nif (full) {\r\n    return <BackgroundPreloader>\r\n        {/*// @ts-ignore*/}\r\n        <PreloaderContainer height={height}>\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </PreloaderContainer>\r\n    </BackgroundPreloader>\r\n} else {\r\n    // @ts-ignore\r\n    return <PreloaderContainer height={height}>\r\n        <img src={preloader} alt=\"preloader\"/>\r\n    </PreloaderContainer>\r\n}}\r\n\r\nlet PreloaderContainer = styled.div`\r\n\r\nheight: ${(props: any) => {return props.height + 'px'}};\r\nimg {\r\nwidth: inherit;\r\nheight: inherit;\r\nborder-radius: 100%;\r\n}\r\n`\r\n\r\nlet BackgroundPreloader = styled.div`\r\nheight: 100%;\r\nwidth: 100%;\r\njustify-content: center;\r\nalign-items: center;\r\ndisplay: flex;\r\nbackground: linear-gradient(90deg, #6D4BCE 0%, #4398B6 100%);\r\n`\r\n\r\nexport default Preloader\r\n","export default __webpack_public_path__ + \"static/media/avatar.80455780.png\";","import {Field} from 'react-final-form'\r\nimport React, {FC, useRef, useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport avatarIcon from '../../../images/avatar.png'\r\nimport {DefaultButtonStyles} from '../../../app-styled-components'\r\nimport {AppStateType} from '../../../store/store'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\ntype PropsType = {\r\n    local: Array<string>\r\n}\r\n\r\nconst UploadAvatar: FC<PropsType> = ({local}) => {\r\n    \r\n    ///// uploads images\r\n    const [stateImg, setStateImg]: any = useState({\r\n        files: []\r\n    })\r\n\r\n    ///// ref for upload input\r\n    const fileInput: any = useRef(null)\r\n    ///// function make click to input when upload button clicked\r\n    const clickToUpload = () => {\r\n        fileInput.current.click()\r\n    }\r\n\r\n    return <ImgFieldContainer>\r\n        <ImgField>\r\n        <Field name='avatar'>\r\n            {({input: {value, onChange, ...input}}) => {\r\n                const handleChange = ({target}: React.ChangeEvent<HTMLInputElement>) => {\r\n                    onChange(target.files)\r\n                    let imgArray = []\r\n                    if (target.files !== null) {\r\n                        for (let i = 0; i < target.files.length; i++) {\r\n                            imgArray.push(URL.createObjectURL(target.files[i]))\r\n                        }\r\n                    }\r\n                    \r\n                    setStateImg({\r\n                        files: imgArray\r\n                    })\r\n                }\r\n                return <input {...input} type=\"file\" ref={fileInput} onChange={handleChange}/>\r\n            }}\r\n        </Field>\r\n        </ImgField>\r\n        <ImageContainer>\r\n            {stateImg.files.length === 0\r\n            ? <Photo src={avatarIcon} alt={local[0]} />\r\n            : <Photo src={stateImg.files?.[0]} alt={local[0]} />}\r\n            <DownloadPhotoButton onClick={()=> {clickToUpload()}}>{local[1]}</DownloadPhotoButton>\r\n        </ImageContainer>\r\n    </ImgFieldContainer>\r\n}\r\n\r\n\r\n///////////// create props for App component\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        local: state.LocalizationReducer.langData.auth_page,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(UploadAvatar)\r\n\r\n\r\nlet DownloadPhotoButton = styled.div`\r\n${DefaultButtonStyles}\r\nmargin-top: 67px;\r\n`\r\n\r\nlet Photo = styled.img`\r\nheight: 127px;\r\nwidth: 127px;\r\nbox-shadow: 0px 0px 40px 1px rgba(0, 0, 0, 0.21);\r\nborder-radius: 100%;\r\nmargin-top: 86px;\r\n`\r\n\r\nlet ImgFieldContainer = styled.div`\r\nwidth: 100%;\r\n`\r\n\r\nlet ImgField = styled.div`\r\ndisplay: none;\r\n`\r\n\r\nlet ImageContainer = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\n`","import React, {FC} from 'react'\r\nimport {Page} from '../../app-styled-components'\r\nimport {FormBox, InputText, LoadButton, SubmitButton} from './style'\r\nimport {Form} from 'react-final-form'\r\nimport InputField from '../common-components/fields/input-field'\r\nimport {composeValidators, required} from '../../services/validations'\r\nimport {AuthDataType} from '../../types/types'\r\nimport Preloader from '../common-components/preloader/preloader'\r\nimport UploadAvatar from '../common-components/fields/upload-avatar'\r\n\r\n///////////// types for props\r\ntype PropsType = {\r\n    onSubmit: (formData: AuthDataType) => void\r\n    \r\n    isLoadNewUser: boolean\r\n    local: Array<string>\r\n}\r\n\r\n\r\nlet Auth: FC<PropsType> = ({\r\n                               local,\r\n                               onSubmit, \r\n                               isLoadNewUser\r\n}) => {\r\n\r\n    return <Page>\r\n        <Form onSubmit={onSubmit}\r\n              render={({handleSubmit}) => (\r\n                  <FormBox onSubmit={handleSubmit}>\r\n                      <UploadAvatar/>\r\n                      <InputText\r\n                          validate={composeValidators(required)} \r\n                          name='name'\r\n                          component={InputField}\r\n                          placeholder={local[2]}\r\n                      />\r\n                      <InputText\r\n                          name='phone'\r\n                          component={InputField}\r\n                          placeholder={local[3]}\r\n                      />\r\n                      \r\n                      {isLoadNewUser\r\n                      ? <LoadButton><Preloader full={false} height={40}/></LoadButton>\r\n                      : <SubmitButton type='submit'>{local[4]}</SubmitButton>}\r\n                  </FormBox>\r\n              )}\r\n        />\r\n    </Page>\r\n}\r\n\r\n\r\nexport default Auth","import React, {FC, useEffect} from 'react'\r\nimport {AppStateType} from '../../store/store'\r\nimport {connect, ConnectedProps} from 'react-redux'\r\nimport Auth from './auth'\r\nimport {AddNewUserThunk, CleanState, ToggleLoadSubmit} from '../../store/auth-reducer'\r\nimport {AuthDataType} from '../../types/types'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n///////////// types for props\r\ntype PropsType = PropsFromRedux\r\n// types takes from connect() where added mapStateToProps and mapDispatchToProps\r\ntype PropsFromRedux = ConnectedProps<typeof connector>\r\n\r\n\r\nlet AuthContainer: FC<PropsType> = ({\r\n                                        local,\r\n                                        AddNewUserThunk, \r\n                                        ToggleLoadSubmit, \r\n                                        isLoadNewUser, \r\n                                        CleanState,\r\n                                        isRedirectToMainPage\r\n}) => {\r\n    \r\n    useEffect(()=>{\r\n        return ()=>{CleanState()}\r\n    },[])\r\n    \r\n    const onSubmit = (formData: AuthDataType) => {\r\n        AddNewUserThunk(formData)\r\n        ToggleLoadSubmit()\r\n    }\r\n    \r\n    let AuthProps = {\r\n        isLoadNewUser,\r\n        onSubmit,\r\n        local\r\n    }\r\n    \r\n    if (isRedirectToMainPage) {\r\n        return <Redirect to='/' />\r\n    } else {\r\n        return <Auth {...AuthProps}/>\r\n    }\r\n    \r\n}\r\n\r\n///////////// create props for App component\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        local: state.LocalizationReducer.langData.auth_page,\r\n        isLoadNewUser: state.AuthReducer.isLoadNewUser,\r\n        isRedirectToMainPage: state.AuthReducer.isRedirectToMainPage\r\n    }\r\n}\r\n\r\nconst connector = connect(mapStateToProps, { AddNewUserThunk, ToggleLoadSubmit, CleanState })\r\nexport default connector(AuthContainer)\r\n","// @ts-ignore\r\nexport let generatorId = (): string => ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,c=>(c^crypto.getRandomValues(new Uint8Array(1))[0]&15 >> c/4).toString(16))","import React, {FC} from 'react'\r\n\r\n///////////// types for props\r\ntype PropsType = {\r\n}\r\n\r\n\r\nlet Instruction: FC<PropsType> = ({}) => {\r\n\r\n    return <>\r\n    <h1>Інструкція</h1>\r\n    </>\r\n}\r\n\r\n\r\nexport default Instruction","import './app-styles.css'\nimport {Container, FullScreenBlock} from './app-styled-components'\nimport React, {FC, useEffect, useState} from 'react'\nimport {developerFun} from './services/developer_functions'\nimport {getCookie} from './services/cookies_functions'\nimport {AppStateType} from './store/store'\nimport {connect, ConnectedProps} from 'react-redux'\nimport {SetUser} from './store/auth-reducer'\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport PrivateRoute from './HOC/private-route'\nimport MainContainer from './components/main-page/main-container'\nimport AuthContainer from './components/auth-page/auth-container'\nimport Instruction from './components/instruction-page/instruction'\nimport Preloader from './components/common-components/preloader/preloader'\n\ntype PropsType = ConnectedProps<typeof connector>\n\nlet App: FC<PropsType> = ({ isRegistered, SetUser, local }) => {\n    \n    useEffect(()=>{\n        ///// cookies\n        if (getCookie('registered') === 'true' && isRegistered === null) {\n            let userData = {\n                isRegistered: true,\n                name: getCookie('user'),\n                idUser: getCookie('idUser'),\n                phone: getCookie('phone'),\n                avatar: getCookie('avatar')\n            }\n            SetUser(userData)\n        } else {\n            let userData = {\n                isRegistered: false,\n                name: null,\n                idUser: null,\n                phone: null,\n                avatar: null\n            }\n            SetUser(userData)\n        }\n    },[])\n    \n    ///// developer delete cookies button CTRL and ALT get state\n    developerFun()\n    \n    ///// for dynamic height\n    const [height, setHeight] = useState(window.innerHeight)\n    // @ts-ignore\n    useEffect(() => {\n        function handleResize() {\n            setHeight(window.innerHeight)\n        }\n\n        window.addEventListener('resize', handleResize)\n        return (_: any) => {\n            window.removeEventListener('resize', handleResize)\n        }\n    })\n\n    // @ts-ignore\n    return <BrowserRouter><Container height={height}>\n        {isRegistered === null\n        ? <Preloader full />\n        : <>\n                <Route path='/login' exact render={() =><AuthContainer />}/>\n                <Route path='/instruction' exact render={() =><Instruction />}/>\n                <Route path='/' exact render={()=> <PrivateRoute component={MainContainer} auth={isRegistered}/>}/>\n            </>} \n            \n    </Container>\n        {/*@ts-ignore*/}\n        <FullScreenBlock height={height}>\n            <h2>{local[0]}<br/>{local[1]}</h2>\n        </FullScreenBlock>\n    </BrowserRouter>\n}\n\n///////////// create props for App component\nlet mapStateToProps = (state: AppStateType) => {\n    return {\n        isRegistered: state.AuthReducer.isRegistered,\n        local: state.LocalizationReducer.langData.common\n    }\n}\n\nconst connector = connect(mapStateToProps, { SetUser })\nexport default connector(App)\n","import { deleteCookie } from './cookies_functions'\r\n\r\nexport let developerFun = (): void => {\r\n    document.addEventListener('keydown', function (event) {\r\n        if (event.ctrlKey) {\r\n          deleteCookie('registered')\r\n          deleteCookie('user')\r\n          deleteCookie('idUser')\r\n        }\r\n      })\r\n      document.addEventListener('keydown', function (event) {\r\n        if (event.altKey) {\r\n    // @ts-ignore\r\n            console.log(window.store.getState())\r\n        }\r\n      })\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","///// localization object\r\nexport const Localization = {\r\n    UA: {\r\n        langId: 1,\r\n        langData: {\r\n            common: [\r\n                \"Підтримка широких екранів відсутня.\",\r\n                \"Користуйтесь телефоном або звузьте вікно браузера.\"\r\n            ],\r\n            auth_page: [\r\n                \"аватар\",\r\n                \"завантажити фото\",\r\n                \"ім’я (обов’язково*)\",\r\n                \"телефон\",\r\n                \"погнали!\"\r\n            ],\r\n            categories: [\r\n                \"всі\",\r\n                \"об'ява\",\r\n                \"куплю\",\r\n                \"продам\",\r\n                \"обміняю\",\r\n                \"їжа\",\r\n                \"напої\",\r\n                \"квитки\",\r\n                \"інше\"\r\n            ],\r\n            small_ad_card: [\r\n                \"картинка оголошення\",\r\n                \"об'ява\",\r\n                \"куплю\",\r\n                \"продам\",\r\n                \"обміняю\",\r\n            ]\r\n        }\r\n    }\r\n}","import {Localization} from '../config'\r\n\r\n///////////// Const for action creators\r\n\r\n\r\n///////////// Initial state\r\ntype LocalizationInitStateType = {\r\n    currentLangId: typeof Localization.UA.langId,\r\n    langData: typeof Localization.UA.langData\r\n}\r\n\r\nlet initialState: LocalizationInitStateType = {\r\n    currentLangId: Localization.UA.langId,\r\n    langData: Localization.UA.langData\r\n}\r\n\r\n///////////// Reduser\r\nconst LocalizationReducer = (state = initialState, action: ActionsTypes): LocalizationInitStateType => {\r\n    switch (action.type) {\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n}\r\n\r\n///////////// Action creators\r\ntype ActionsTypes = any\r\n\r\n/////////////\r\n\r\nexport default LocalizationReducer","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport AuthReducer from './auth-reducer'\r\nimport LocalizationReducer from './localization-reducer'\r\nimport CategoriesReducer from './categories-reducer'\r\nimport MainReducer from './main-reducer'\r\n\r\nlet redusers = combineReducers(\r\n    {\r\n        LocalizationReducer,\r\n        AuthReducer,\r\n        CategoriesReducer,\r\n        MainReducer\r\n    })\r\n\r\ntype ReducersType = typeof redusers\r\nexport type AppStateType = ReturnType<ReducersType>\r\n\r\n///// create store and added middleware for thanks\r\nconst store = createStore(redusers, applyMiddleware(thunkMiddleware))\r\n\r\n// @ts-ignore // for view info in devtools\r\nwindow.store = store\r\n\r\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport {Provider} from 'react-redux'\nimport store from './store/store'\n\nReactDOM.render(<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}