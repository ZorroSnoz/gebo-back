{"version":3,"sources":["services/cookies_functions.ts","api/main-api.ts","store/auth-reducer.ts","app-styled-components.ts","HOC/private-route.tsx","components/common-components/choose-category/style.js","components/common-components/choose-category/choose-category.tsx","store/categories-reducer.ts","components/common-components/choose-category/choose-category-container.tsx","services/scroll_listener.ts","components/main-page/style.js","images/navigation.svg","components/common-components/navigation/style.js","components/common-components/navigation/navigation.tsx","components/common-components/small-ad-card/style.js","services/paste_small_plug.ts","images/plugs/plug1.jpg","images/plugs/plug2.jpg","images/plugs/plug3.jpg","images/plugs/plug4.jpg","images/plugs/plug5.jpg","images/plugs/plug6.jpg","images/plugs/plug7.jpg","images/like.svg","components/common-components/small-ad-card/small-ad-card.tsx","images/preloader.svg","components/common-components/preloader/preloader.tsx","components/main-page/main.tsx","store/main-reducer.ts","components/main-page/main-container.tsx","components/auth-page/style.js","components/common-components/fields/input-field.tsx","services/validations.ts","images/avatar.png","components/common-components/fields/upload-avatar.tsx","components/auth-page/auth.tsx","components/auth-page/auth-container.tsx","services/generator_id.ts","components/chats-page/style.js","components/chats-page/chats.tsx","components/chats-page/chats-container.tsx","components/add-ad-page/style.js","components/add-ad-page/add-ad.tsx","components/add-ad-page/add-ad-container.tsx","components/info-page/style.js","components/info-page/info.tsx","components/info-page/info-container.tsx","components/profile-page/style.js","components/profile-page/profile.tsx","components/profile-page/profile-container.tsx","components/instruction-page/instruction.tsx","App.tsx","services/developer_functions.ts","reportWebVitals.js","config.ts","store/localization-reducer.ts","store/store.ts","index.tsx"],"names":["getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","setCookie","value","options","path","expires","Date","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue","deleteCookie","AddUserDataCookie","userData","idUser","phone","avatar","console","log","isRegistered","instance","axios","create","baseURL","MainApi","AddNewUser","post","GetAds","get","headers","SET_AUTH_USER_DATA","SET_AUTH_USER_DATA_AND_REDIRECT","TOGGLE_LOADER_SUBMIT","CLEAN_STATE","initialState","isLoadNewUser","isRedirectToMainPage","SetUserAndRedirect","type","AuthReducer","state","action","newValue","Container","styled","div","props","height","FullScreenBlock","Page","DefaultButtonStyles","PrivateRoute","Component","component","auth","to","Categories","active","CategoriesLine","MarginBlock","p","DefaultButton","Button","YellowButton","GreenButton","PurpleButton","RedButton","ChooseCategory","showCategories","mainCategoriesState","secondCategoriesState","SelectAllMainCategories","ChangeMainCategory","local","SelectAllSecondCategories","ChangeSecondCategory","onClick","SET_SHOW_CATEGORIES","SELECT_ALL_MAIN_CATEGORIES","SELECT_ALL_SECOND_CATEGORIES","CHANGE_MAIN_CATEGORY","CHANGE_SECOND_CATEGORY","CategoriesReducer","newCategories","categoryId","includes","connect","LocalizationReducer","langData","categories","SetShowCategories","upOrDownScroll","useEffect","func","PropsCategories","Ads","NavContainer","navBack","NavIcon","NavLink","AddAdIcon","navigation","xmlns","width","viewBox","fill","d","Card","Like","img","Image","Info","HeadlineContainer","Label","color","TextInfo","plugs","colors","undefined","small_ad_card","ad","headline","adId","image","isLike","userName","date","time","useState","Math","floor","random","length","imageCard","min","max","rand","round","randomInteger","category","imageAd","src","alt","likeIcon","PreloaderContainer","BackgroundPreloader","Preloader","full","preloader","Main","adsArray","ads","scrollPosition","setScrollPosition","setScrollState","snowPreloader","map","i","onScroll","e","target","scrollTop","IsScroll","GET_ADS","CLOSE_MAIN_PAGE","MainReducer","connector","GetAdsThunk","dispatch","a","response","status","data","CloseMainPage","PropsMain","FormBox","form","InputText","Field","SubmitButton","button","LoadButton","InputField","input","meta","hasError","touched","error","FieldContainer","ErrorSpan","span","required","composeValidators","validators","reduce","validator","auth_page","files","stateImg","setStateImg","fileInput","useRef","ImgFieldContainer","ImgField","onChange","ref","imgArray","push","URL","createObjectURL","ImageContainer","Photo","avatarIcon","DownloadPhotoButton","current","click","Auth","onSubmit","render","handleSubmit","validate","placeholder","AddNewUserThunk","formData","userId","c","crypto","getRandomValues","Uint8Array","toString","payload","FormData","append","ToggleLoadSubmit","CleanState","AuthProps","Chats","AddAd","Profile","Instruction","common","SetUser","addEventListener","event","ctrlKey","altKey","window","store","getState","innerHeight","setHeight","handleResize","_","removeEventListener","exact","MainContainer","ChatsContainer","AddAdContainer","InfoContainer","ProfileContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Localization","UA","langId","currentLangId","redusers","combineReducers","createStore","applyMiddleware","thunkMiddleware","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.5ca73235.chunk.js","sourcesContent":["export let getCookie = (name: string): string | null => {\r\n    let matches: any = document.cookie.match(new RegExp(\r\n        \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n    ))\r\n    return matches ? decodeURIComponent(matches[1]) : null\r\n}\r\n\r\nexport let setCookie = (name: string, value: string | boolean, options: any = {}): void => {\r\n\r\n    options = {\r\n        path: '/',\r\n        'max-age': 3600 * 24 * 365,\r\n        // secure: true,\r\n        // httpOnly: true,\r\n        ...options\r\n    }\r\n\r\n    if (options.expires instanceof Date) {\r\n        options.expires = options.expires.toUTCString()\r\n    }\r\n\r\n    let updatedCookie = encodeURIComponent(name) + \"=\" + encodeURIComponent(value)\r\n\r\n    for (let optionKey in options) {\r\n        updatedCookie += \"; \" + optionKey\r\n        let optionValue = options[optionKey]\r\n        if (optionValue !== true) {\r\n            updatedCookie += \"=\" + optionValue\r\n        }\r\n    }\r\n\r\n    document.cookie = updatedCookie\r\n}\r\n\r\nexport let deleteCookie = (name: string): void => {\r\n    setCookie(name, \"\", {\r\n      'max-age': -1\r\n    })\r\n  }\r\n\r\nexport let AddUserDataCookie = (userData: any) => {\r\n    if (userData.name != null && userData.idUser != null) {\r\n        \r\n        setCookie('user', userData.name)\r\n        setCookie('idUser', userData.idUser)\r\n        setCookie('phone', userData.phone)\r\n        setCookie('avatar', userData.avatar)\r\n    \r\n    }\r\n    else {\r\n        console.log('Error: Cookies not added.')\r\n    }\r\n    \r\n\r\n    if (userData.isRegistered) {\r\n        setCookie('registered', 'true')\r\n    }\r\n    else {\r\n        setCookie('registered', 'false')\r\n    }\r\n  }","import axios from 'axios'\r\nimport {getCookie} from '../services/cookies_functions'\r\n\r\nconst instance = axios.create({ baseURL: 'https://60abde1c5a4de40017ccb188.mockapi.io/' })\r\n// https://60abde1c5a4de40017ccb188.mockapi.io/\r\n// http://localhost:2000/\r\n// https://gebo-app.herokuapp.com/\r\n\r\n\r\nconst FreshToken = () => {\r\n    return {\r\n        headers: {\r\n            'Authorization':  `Bearer ${getCookie('idUser')}`\r\n        }\r\n    }\r\n}\r\n\r\nconst MainApi = {\r\n    AddNewUser(userData: FormData) {\r\n        return instance.post(`add-new-user`, userData )\r\n    },\r\n    GetAds() {\r\n        return instance.get(`get-ads`, FreshToken())\r\n    }\r\n}\r\n\r\nexport default MainApi","import {AxiosResponse} from 'axios'\r\nimport {ThunkAction} from 'redux-thunk'\r\nimport {AppStateType} from './store'\r\nimport MainApi from '../api/main-api'\r\nimport {AddUserDataCookie} from '../services/cookies_functions'\r\nimport {AuthDataType, InitialStateAndUserDataType} from '../types/types'\r\nimport {generatorId} from '../services/generator_id'\r\n\r\n///////////// Const for actioncreators\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA'\r\nconst SET_AUTH_USER_DATA_AND_REDIRECT = 'SET_AUTH_USER_DATA_AND_REDIRECT'\r\nconst TOGGLE_LOADER_SUBMIT = 'TOGGLE_LOADER_SUBMIT'\r\nconst CLEAN_STATE = 'CLEAN_STATE'\r\n\r\n///////////// Initial state\r\nlet initialState: InitialStateAndUserDataType = {\r\n    isRegistered: null,\r\n    name: null,\r\n    phone: null,\r\n    avatar: null,\r\n    idUser: null,\r\n    isLoadNewUser: false,\r\n    isRedirectToMainPage: false\r\n}\r\n\r\n///////////// Reducer\r\nconst AuthReducer = (state = initialState, action: ActionsTypes): InitialStateAndUserDataType => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                isRegistered: action.userData.isRegistered,\r\n                name: action.userData.name,\r\n                idUser: action.userData.idUser,\r\n                phone: action.userData.phone,\r\n                avatar: action.userData.avatar\r\n            }\r\n        }\r\n        case TOGGLE_LOADER_SUBMIT:{\r\n            \r\n            let newValue = true\r\n            if (state.isLoadNewUser) {\r\n                newValue = false\r\n            }\r\n            \r\n            return {\r\n                ...state,\r\n                isLoadNewUser: newValue\r\n            }\r\n        }\r\n        case SET_AUTH_USER_DATA_AND_REDIRECT: {\r\n            return {\r\n                ...state,\r\n                isRegistered: action.userData.isRegistered,\r\n                name: action.userData.name,\r\n                idUser: action.userData.idUser,\r\n                phone: action.userData.phone,\r\n                avatar: action.userData.avatar,\r\n                isLoadNewUser: false,\r\n                isRedirectToMainPage: true\r\n            }\r\n        }\r\n        case CLEAN_STATE: {\r\n            \r\n            return {\r\n                ...state,\r\n                isLoadNewUser: false,\r\n                isRedirectToMainPage: false\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n}\r\n\r\n///////////// Action creators\r\n// actions types\r\ntype ActionsTypes = \r\n    SetUserType |\r\n    ToggleLoadSubmitType |\r\n    SetUserAndRedirectType |\r\n    CleanStateType\r\n//\r\n\r\ntype CleanStateType = {\r\n    type: typeof CLEAN_STATE\r\n}\r\n\r\nexport let CleanState = ():CleanStateType => ({type: CLEAN_STATE})\r\n\r\ntype ToggleLoadSubmitType = {\r\n    type: typeof TOGGLE_LOADER_SUBMIT\r\n}\r\n\r\nexport let ToggleLoadSubmit = (): ToggleLoadSubmitType => ({type: TOGGLE_LOADER_SUBMIT})\r\n\r\n\r\ntype SetUserType = {\r\n    type: typeof SET_AUTH_USER_DATA\r\n    userData: UserDataType\r\n}\r\ntype UserDataType = {\r\n    isRegistered: boolean\r\n    name: string | null\r\n    idUser: string | null\r\n    phone: string | null\r\n    avatar: string | null\r\n}\r\nexport let SetUser = (userData: UserDataType): SetUserType => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    userData: userData\r\n})\r\n\r\ntype SetUserAndRedirectType = {\r\n    type: typeof SET_AUTH_USER_DATA_AND_REDIRECT\r\n    userData: UserDataType\r\n}\r\nlet SetUserAndRedirect = (userData: UserDataType): SetUserAndRedirectType => ({type: SET_AUTH_USER_DATA_AND_REDIRECT, userData})\r\n\r\n///////////// Thanks\r\n// types for thunks\r\ntype ThunkActions = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>\r\n//\r\nexport let AddNewUserThunk = (formData: AuthDataType): ThunkActions => async (dispatch) => {\r\n    \r\n    const userId: string = generatorId()\r\n    type UserDataType = {\r\n        isRegistered: boolean\r\n        name: string\r\n        avatar: string | null\r\n        phone: string | null\r\n        idUser: string\r\n    }\r\n    \r\n    let payload = new FormData()\r\n    let userData: UserDataType = {\r\n        isRegistered: true,\r\n        name: formData.name,\r\n        avatar: null,\r\n        phone: null,\r\n        idUser: userId\r\n    }\r\n\r\n    payload.append('name', formData.name)\r\n    if (formData.avatar) {\r\n        payload.append('avatar', formData.avatar[0])\r\n    }\r\n    if (formData.phone && formData.phone !== '') {\r\n        payload.append('phone', formData.phone)\r\n        userData.phone = formData.phone\r\n    }\r\n    payload.append('idUser', userId)\r\n    \r\n\r\n    let response: AxiosResponse<any> = await MainApi.AddNewUser(payload)\r\n\r\n    if (response.status === 201) {\r\n        userData.avatar = response.data.avatar\r\n        AddUserDataCookie(userData)\r\n        dispatch(SetUserAndRedirect(userData))\r\n    }\r\n    else {\r\n        console.log('AddNewUserThunk error.')\r\n    }\r\n}\r\n/////////////\r\n\r\nexport default AuthReducer","import styled from 'styled-components'\r\n\r\nexport let Container = styled.div`\r\nheight: ${(props: any) => {\r\n    return props.height + 'px'\r\n}};\r\nbackground: linear-gradient(90deg, #6D4BCE 0%, #4398B6 100%);\r\nmax-width: 586px;\r\nwidth: 100%;\r\ndisplay: inline-block;\r\n\r\n@media (min-width: 586px) {\r\ndisplay: none;\r\n}\r\n`\r\n\r\nexport let FullScreenBlock = styled.div`\r\nheight: ${(props: any) => {\r\n    return props.height + 'px'\r\n}};\r\nbackground: linear-gradient(90deg, #6D4BCE 0%, #4398B6 100%);\r\nwidth: 100%;\r\ndisplay: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\nh2 {\r\n\r\n}\r\n\r\n@media (max-width: 586px) {\r\ndisplay: none;\r\n}\r\n`\r\n\r\nexport let Page = styled.div`\r\n    display: flex;\r\n    height: 100%;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n        overflow-y: overlay;\r\n`\r\n\r\nexport let DefaultButtonStyles = `\r\nwidth: calc(100% - 83px);\r\nmin-width: 250px;\r\nheight: 66px;\r\nbackground: #000000;\r\nborder-radius: 49px;\r\ncolor: #FFFFFF;\r\nfont-weight: 800;\r\nfont-size: 20px;\r\ntext-transform: uppercase;\r\ncursor: pointer;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\noutline: none;\r\nborder: none;\r\n`\r\n\r\nexport let TextInputStyle = `\r\nbackground: none;\r\n    outline: none;\r\n    border: 3px solid rgba(0, 0, 0, 0.8);\r\n    border-radius: 49px;\r\n    height: 66px;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 84px);\r\n    min-width: 250px;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    font-style: normal;\r\nfont-weight: normal;\r\nfont-size: 20px;\r\nline-height: 52px;\r\ncolor: rgba(255, 255, 255, 0.7);\r\n    \r\n    ::placeholder {\r\nfont-style: normal;\r\nfont-weight: normal;\r\nfont-size: 20px;\r\nline-height: 52px;\r\ncolor: rgba(255, 255, 255, 0.7);\r\ntext-transform: uppercase;\r\ntransition: 0.25s;\r\n    }\r\n   \r\n:focus::placeholder {\r\ncolor: rgba(255, 255, 255, 0.0);\r\n}\r\n`","import React, {FC} from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\ntype PropsType = {\r\n    component: FC\r\n    auth: boolean | null\r\n}\r\nconst PrivateRoute: FC<PropsType> = ({ component: Component, auth}) => {\r\n\r\n    return <>\r\n        {auth\r\n            ? <Component />\r\n            : <Redirect to=\"/login\" />}\r\n    </>\r\n\r\n}\r\n\r\nexport default PrivateRoute","import styled from 'styled-components'\r\n\r\nexport let Categories = styled.div`\r\n    position: fixed;\r\n    width: 100%;\r\n    z-index: 10;\r\n    background: linear-gradient(90deg, #6D4BCE 0%, #4398B6 100%);\r\n    height:  ${props => props.active ? '0' : '118px'};\r\n    padding: ${props => props.active ? '0' : '8px 0'};\r\n    transition: 0.5s;\r\n`\r\n\r\nexport let CategoriesLine = styled.div`\r\n    height:  ${props => props.active ? '0' : '59px'};\r\n    opacity:  ${props => props.active ? '0' : '1'};\r\n    display: flex;\r\n    overflow-x: scroll;\r\n    overflow-y: hidden;\r\n    padding: 0 22px;\r\n    transition: 0.25s;\r\n    \r\n   ::-webkit-scrollbar {\r\n    height: 0px;\r\n    }\r\n\r\n`\r\n\r\nexport let MarginBlock = styled.p`\r\nwidth: 8px;\r\nheight: 8px;\r\np {\r\nwidth: 8px;\r\nheight: 8px;\r\n}\r\n`\r\n\r\nexport let DefaultButton = styled.div`\r\nheight: 43px;\r\nbackground: radial-gradient(97.57% 210.75% at 0.9% 2.98%, rgba(0, 0, 0, 0.4) 0%, rgba(0, 0, 0, 0.4) 99.99%);\r\nbox-shadow: 0px 0px 8px rgba(0, 0, 0, 0.2);\r\nborder-radius: 47px;\r\nfont-style: normal;\r\nfont-weight: 800;\r\nfont-size: 14px;\r\nline-height: 52px;\r\nletter-spacing: -0.32px;\r\ntext-transform: uppercase;\r\ncolor: white;\r\ncursor: pointer;\r\nwidth: min-content;\r\npadding: 0 14px;\r\ndisplay: flex;\r\nalign-items: center;\r\nmargin: 8px 14px 8px 0;\r\nuser-select:none;\r\ntransition: 0.25s;\r\n -webkit-tap-highlight-color: rgba(0,0,0,0); \r\n -webkit-tap-highlight-color: transparent;\r\n`\r\nexport let Button = styled(DefaultButton)`\r\ncolor: ${props => props.active ? 'rgba(0, 0, 0, 0.8)' : 'white'};\r\nbackground: ${props => props.active ? 'white' : 'radial-gradient(97.57% 210.75% at 0.9% 2.98%, rgba(0, 0, 0, 0.4) 0%, rgba(0, 0, 0, 0.4) 99.99%)'};\r\n`\r\n\r\nexport let YellowButton = styled(DefaultButton)`\r\nbackground: ${props => props.active ? '#BFB439' : 'radial-gradient(97.57% 210.75% at 0.9% 2.98%, rgba(0, 0, 0, 0.4) 0%, rgba(0, 0, 0, 0.4) 99.99%)'};\r\n`\r\n\r\nexport let GreenButton = styled(DefaultButton)`\r\nbackground: ${props => props.active ? '#36B782' : 'radial-gradient(97.57% 210.75% at 0.9% 2.98%, rgba(0, 0, 0, 0.4) 0%, rgba(0, 0, 0, 0.4) 99.99%)'};\r\n`\r\n\r\nexport let PurpleButton = styled(DefaultButton)`\r\nbackground: ${props => props.active ? '#8B3BBE' : 'radial-gradient(97.57% 210.75% at 0.9% 2.98%, rgba(0, 0, 0, 0.4) 0%, rgba(0, 0, 0, 0.4) 99.99%)'};\r\n`\r\n\r\nexport let RedButton = styled(DefaultButton)`\r\nbackground: ${props => props.active ? '#BF3339' : 'radial-gradient(97.57% 210.75% at 0.9% 2.98%, rgba(0, 0, 0, 0.4) 0%, rgba(0, 0, 0, 0.4) 99.99%)'};\r\n`","import React, {FC} from 'react'\r\nimport {\r\n    Button,\r\n    Categories,\r\n    CategoriesLine,\r\n    GreenButton,\r\n    MarginBlock,\r\n    PurpleButton,\r\n    RedButton,\r\n    YellowButton\r\n} from './style'\r\n\r\n///////////// types for props\r\ntype PropsType = {\r\n    SelectAllMainCategories: () => void\r\n    SelectAllSecondCategories: () => void\r\n    ChangeMainCategory: (categoryId: number) => void\r\n    ChangeSecondCategory: (categoryId: number) => void\r\n    \r\n    showCategories: boolean\r\n    mainCategoriesState: Array<boolean>\r\n    secondCategoriesState: Array<boolean>\r\n    local: Array<string>\r\n}\r\n\r\n\r\nlet ChooseCategory: FC<PropsType> = ({\r\n                                         showCategories,\r\n                                         mainCategoriesState,\r\n                                         secondCategoriesState,\r\n                                         SelectAllMainCategories,\r\n                                         ChangeMainCategory,\r\n                                         local,\r\n                                         SelectAllSecondCategories,\r\n                                         ChangeSecondCategory\r\n}) => {\r\n\r\n\r\n    {/*@ts-ignore*/}\r\n    return <Categories active={showCategories}>\r\n            {/*@ts-ignore*/}\r\n        <CategoriesLine active={showCategories}>\r\n            {/*@ts-ignore*/}\r\n            <Button onClick={()=>{SelectAllMainCategories()}} active={mainCategoriesState[0]}>{local[0]}</Button>\r\n            {/*@ts-ignore*/}\r\n            <YellowButton onClick={()=>{ChangeMainCategory(1)}} active={mainCategoriesState[1]}>{local[1]}</YellowButton>\r\n            {/*@ts-ignore*/}\r\n            <GreenButton onClick={()=>{ChangeMainCategory(2)}} active={mainCategoriesState[2]}>{local[2]}</GreenButton>\r\n            {/*@ts-ignore*/}\r\n            <PurpleButton onClick={()=>{ChangeMainCategory(3)}} active={mainCategoriesState[3]}>{local[3]}</PurpleButton>\r\n            {/*@ts-ignore*/}\r\n            <RedButton onClick={()=>{ChangeMainCategory(4)}} active={mainCategoriesState[4]}>{local[4]}</RedButton>\r\n            <MarginBlock><p/></MarginBlock>\r\n        </CategoriesLine>\r\n            {/*@ts-ignore*/}\r\n        <CategoriesLine active={showCategories}>\r\n            {/*@ts-ignore*/}\r\n            <Button onClick={()=>{SelectAllSecondCategories()}} active={secondCategoriesState[0]}>{local[0]}</Button>\r\n            {/*@ts-ignore*/}\r\n            <Button onClick={()=>{ChangeSecondCategory(1)}} active={secondCategoriesState[1]}>{local[5]}</Button>\r\n            {/*@ts-ignore*/}\r\n            <Button onClick={()=>{ChangeSecondCategory(2)}} active={secondCategoriesState[2]}>{local[6]}</Button>\r\n            {/*@ts-ignore*/}\r\n            <Button onClick={()=>{ChangeSecondCategory(3)}} active={secondCategoriesState[3]}>{local[7]}</Button>\r\n            {/*@ts-ignore*/}\r\n            <Button onClick={()=>{ChangeSecondCategory(4)}} active={secondCategoriesState[4]}>{local[8]}</Button>\r\n            <MarginBlock><p/></MarginBlock>\r\n        </CategoriesLine>\r\n    </Categories>\r\n}\r\n\r\n\r\nexport default ChooseCategory","///////////// Const for action creators\r\nconst SET_SHOW_CATEGORIES = 'SET_SHOW_CATEGORIES'\r\nconst SELECT_ALL_MAIN_CATEGORIES = 'SELECT_ALL_MAIN_CATEGORIES'\r\nconst SELECT_ALL_SECOND_CATEGORIES = 'SELECT_ALL_SECOND_CATEGORIES'\r\nconst CHANGE_MAIN_CATEGORY = 'CHANGE_MAIN_CATEGORY'\r\nconst CHANGE_SECOND_CATEGORY = 'CHANGE_SECOND_CATEGORY'\r\n\r\n///////////// Initial state\r\ntype CategoriesInitStateType = {\r\n    showCategories: boolean\r\n    mainCategoriesState: Array<boolean>\r\n    secondCategoriesState: Array<boolean>\r\n}\r\n\r\nlet initialState: CategoriesInitStateType = {\r\n    showCategories: true,\r\n    mainCategoriesState: [true, false, false, false, false],\r\n    secondCategoriesState: [true, false, false, false, false]\r\n}\r\n\r\n///////////// Reducer\r\nconst CategoriesReducer = (state = initialState, action: ActionsTypes): CategoriesInitStateType => {\r\n    switch (action.type) {\r\n        \r\n        case SET_SHOW_CATEGORIES: {\r\n            return {\r\n                ...state,\r\n                showCategories: action.value\r\n            }\r\n        }\r\n        case SELECT_ALL_MAIN_CATEGORIES : {\r\n            return {\r\n                ...state,\r\n                mainCategoriesState: [true, false, false, false, false]\r\n            }\r\n        }\r\n        case SELECT_ALL_SECOND_CATEGORIES : {\r\n            return {\r\n                ...state,\r\n                secondCategoriesState: [true, false, false, false, false]\r\n            }\r\n        }\r\n        case CHANGE_MAIN_CATEGORY: {\r\n            \r\n            ///// set category\r\n            let newCategories = [...state.mainCategoriesState]\r\n            newCategories[action.categoryId] = !newCategories[action.categoryId]\r\n            \r\n            ///// if category is true - set false \"all\" button\r\n            if (newCategories[action.categoryId]) {\r\n                newCategories[0] = false\r\n            }\r\n            \r\n            ///// if category not choose - set true \"all\" button\r\n            if (!newCategories.includes(true)) {\r\n                newCategories[0] = true\r\n            }\r\n            \r\n            return {\r\n                ...state,\r\n                mainCategoriesState: newCategories\r\n            }\r\n        }\r\n        case CHANGE_SECOND_CATEGORY: {\r\n\r\n            ///// set category\r\n            let newCategories = [...state.secondCategoriesState]\r\n            newCategories[action.categoryId] = !newCategories[action.categoryId]\r\n\r\n            ///// if category is true - set false \"all\" button\r\n            if (newCategories[action.categoryId]) {\r\n                newCategories[0] = false\r\n            }\r\n\r\n            ///// if category not choose - set true \"all\" button\r\n            if (!newCategories.includes(true)) {\r\n                newCategories[0] = true\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                secondCategoriesState: newCategories\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n}\r\n\r\n///////////// Action creators\r\ntype ActionsTypes =\r\n    SetShowCategoriesType |\r\n    SelectAllMainCategoriesType |\r\n    ChangeMainCategoryType |\r\n    SelectAllSecondCategoriesType |\r\n    ChangeSecondCategoryType\r\n\r\ntype SetShowCategoriesType = {\r\n    type: typeof SET_SHOW_CATEGORIES\r\n    value: boolean\r\n}\r\nexport let SetShowCategories = (value: boolean): SetShowCategoriesType => ({type: SET_SHOW_CATEGORIES, value})\r\n\r\n\r\ntype SelectAllMainCategoriesType = {\r\n    type: typeof SELECT_ALL_MAIN_CATEGORIES\r\n}\r\nexport let SelectAllMainCategories = (): SelectAllMainCategoriesType => ({type: SELECT_ALL_MAIN_CATEGORIES})\r\n\r\ntype SelectAllSecondCategoriesType = {\r\n    type: typeof SELECT_ALL_SECOND_CATEGORIES\r\n}\r\nexport let SelectAllSecondCategories = (): SelectAllSecondCategoriesType => ({type: SELECT_ALL_SECOND_CATEGORIES})\r\n\r\n\r\ntype ChangeMainCategoryType = {\r\n    type: typeof CHANGE_MAIN_CATEGORY\r\n    categoryId: number\r\n}\r\nexport let ChangeMainCategory = (categoryId: number): ChangeMainCategoryType => ({type: CHANGE_MAIN_CATEGORY, categoryId})\r\n\r\ntype ChangeSecondCategoryType = {\r\n    type: typeof CHANGE_SECOND_CATEGORY\r\n    categoryId: number\r\n}\r\nexport let ChangeSecondCategory = (categoryId: number): ChangeSecondCategoryType => ({type: CHANGE_SECOND_CATEGORY, categoryId})\r\n\r\n\r\n/////////////\r\n\r\nexport default CategoriesReducer","import React, {FC, useEffect} from 'react'\r\nimport {AppStateType} from '../../../store/store'\r\nimport {connect} from 'react-redux'\r\nimport ChooseCategory from './choose-category'\r\nimport {\r\n    ChangeMainCategory, ChangeSecondCategory,\r\n    SelectAllMainCategories,\r\n    SelectAllSecondCategories,\r\n    SetShowCategories\r\n} from '../../../store/categories-reducer'\r\nimport {ChangeCategoryState} from '../../../services/scroll_listener'\r\n\r\ntype PropsType = {\r\n    SetShowCategories: (value: boolean) => void\r\n    SelectAllMainCategories: () => void\r\n    SelectAllSecondCategories: () => void\r\n    ChangeMainCategory: (categoryId: number) => void\r\n    ChangeSecondCategory: (categoryId: number) => void\r\n\r\n    showCategories: boolean\r\n    mainCategoriesState: Array<boolean>\r\n    secondCategoriesState: Array<boolean>\r\n    local: Array<string>\r\n    upOrDownScroll: Array<boolean>\r\n}\r\n\r\nlet ChooseCategoryContainer: FC<PropsType> = ({\r\n                                                  showCategories,\r\n                                                  SetShowCategories,\r\n                                                  mainCategoriesState,\r\n                                                  SelectAllMainCategories,\r\n                                                  ChangeMainCategory,\r\n                                                  local,\r\n                                                  upOrDownScroll,\r\n                                                  SelectAllSecondCategories,\r\n                                                  ChangeSecondCategory,\r\n                                                  secondCategoriesState\r\n                                              }) => {\r\n    \r\n    ///// trigger when user scroll page\r\n    useEffect(()=>{\r\n        ChangeCategoryState(SetShowCategories, upOrDownScroll)\r\n    },[upOrDownScroll])\r\n\r\n    \r\n    let PropsCategories = {\r\n        showCategories,\r\n        mainCategoriesState,\r\n        SelectAllMainCategories,\r\n        ChangeMainCategory,\r\n        local,\r\n        SelectAllSecondCategories,\r\n        ChangeSecondCategory,\r\n        secondCategoriesState\r\n    }\r\n    \r\n        return <ChooseCategory {...PropsCategories} />\r\n    \r\n}\r\n\r\n///////////// create props for component\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        local: state.LocalizationReducer.langData.categories,\r\n        showCategories: state.CategoriesReducer.showCategories,\r\n        mainCategoriesState: state.CategoriesReducer.mainCategoriesState,\r\n        secondCategoriesState: state.CategoriesReducer.secondCategoriesState\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    SetShowCategories,\r\n    SelectAllMainCategories,\r\n    ChangeMainCategory,\r\n    SelectAllSecondCategories,\r\n    ChangeSecondCategory\r\n})(ChooseCategoryContainer)\r\n","export let IsScroll = (\r\n    e: any, \r\n    upOrDownScroll: Array<boolean>, \r\n    setScrollState: (value: Array<boolean>) => void, \r\n    scrollPosition: Array<number>,\r\n    setScrollPosition: (value: Array<number>) => void,\r\n) => {\r\n\r\n    if (!upOrDownScroll[0] && !upOrDownScroll[1]) {\r\n\r\n        ///// set state when user first time scroll to down\r\n        if (scrollPosition[1] < e.target.scrollTop) {\r\n            setScrollPosition([scrollPosition[1], e.target.scrollTop])\r\n            setScrollState([true, false])\r\n        }\r\n\r\n    } else if (upOrDownScroll[0]) {\r\n\r\n        ///// set state when user scroll to up\r\n        if (scrollPosition[1] > e.target.scrollTop) {\r\n            setScrollPosition([scrollPosition[1], e.target.scrollTop])\r\n            setScrollState([false, true])\r\n        } else {\r\n            setScrollPosition([scrollPosition[1], e.target.scrollTop])\r\n        }\r\n\r\n    } else if (upOrDownScroll[1]) {\r\n\r\n        ///// set state when user scroll to down\r\n        if (scrollPosition[1] < e.target.scrollTop) {\r\n            setScrollPosition([scrollPosition[1], e.target.scrollTop])\r\n            setScrollState([true, false])\r\n        } else {\r\n            setScrollPosition([scrollPosition[1], e.target.scrollTop])\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport let ChangeCategoryState = (func: (value: boolean) => void, state: boolean[]) => {\r\n    if (!state[0] && !state[1]) {\r\n        func(false)\r\n    } else if (state[1]) {\r\n        func(false)\r\n    } else if (state[0]) {\r\n        func(true)\r\n    }\r\n}","import styled from 'styled-components'\r\n\r\nexport let Container = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nheight: 100%;\r\noverflow-y: scroll;\r\n`\r\n\r\nexport let Ads = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\nmargin-top: 135px;\r\n`","export default __webpack_public_path__ + \"static/media/navigation.23024900.svg\";","import styled from 'styled-components'\r\nimport {NavLink} from 'react-router-dom'\r\nimport navBack from '../../../images/navigation.svg'\r\n\r\n\r\nexport let Container = styled.div`\r\n    position: fixed;\r\n    bottom: 39px;\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: center;\r\n`\r\nexport let NavContainer = styled.div`\r\n    width: 319px;\r\n    height: 100px;\r\n    background-image:  url(${navBack});\r\n    background-repeat: no-repeat;\r\n    filter: drop-shadow(0 0 20px rgba(0,0,0,0.25));\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n`\r\n\r\nexport let NavIcon = styled(NavLink)`\r\ndiv {\r\nwidth: 33px;\r\nmargin-top: 21px;\r\n}\r\n`\r\n\r\nexport let AddAdIcon = styled(NavLink)`\r\n\r\n`","import React, {FC} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {AppStateType} from '../../../store/store'\r\nimport {AddAdIcon, Container, NavContainer, NavIcon} from './style'\r\n\r\n///////////// types for props\r\ntype PropsType = {\r\n    local: string[]\r\n}\r\n\r\nlet Navigation: FC<PropsType> = ({local}) => {\r\n\r\n    return <Container>\r\n        <NavContainer>\r\n            <NavIcon to={'/'}>\r\n                <div>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"31\" height=\"30\" viewBox=\"0 0 31 30\" fill=\"none\">\r\n                <path d=\"M15.9189 0.174758C15.7996 0.0625991 15.6409 0 15.4757 0C15.3106 0 15.1519 0.0625991 15.0325 0.174758L0.277997 14.025C0.215336 14.0839 0.165486 14.1547 0.13146 14.2331C0.0974352 14.3114 0.0799426 14.3958 0.0800409 14.481L0.0776367 27.4799C0.0776367 28.1483 0.347836 28.7893 0.828795 29.2619C1.30975 29.7345 1.96207 30 2.64225 30H10.3441C10.6842 30 11.0104 29.8672 11.2508 29.6309C11.4913 29.3946 11.6264 29.0741 11.6264 28.74V18.0296C11.6264 17.8625 11.694 17.7022 11.8142 17.5841C11.9344 17.4659 12.0975 17.3996 12.2676 17.3996H18.6791C18.8492 17.3996 19.0122 17.4659 19.1325 17.5841C19.2527 17.7022 19.3203 17.8625 19.3203 18.0296V28.74C19.3203 29.0741 19.4554 29.3946 19.6958 29.6309C19.9363 29.8672 20.2625 30 20.6026 30H28.3012C28.9814 30 29.6337 29.7345 30.1147 29.2619C30.5956 28.7893 30.8658 28.1483 30.8658 27.4799V14.481C30.8659 14.3958 30.8484 14.3114 30.8144 14.2331C30.7804 14.1547 30.7305 14.0839 30.6679 14.025L15.9189 0.174758Z\" fill=\"white\"/>\r\n            </svg>\r\n                </div>\r\n            </NavIcon>\r\n            <NavIcon to={'/chats'}>\r\n                <div>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"33\" height=\"26\" viewBox=\"0 0 33 26\" fill=\"none\">\r\n                <path d=\"M28.4363 0H4.06233C2.98529 0.00116023 1.95269 0.432538 1.1911 1.19948C0.429517 1.96642 0.00115212 3.00629 0 4.09091V21.6234C0.00115212 22.708 0.429517 23.7479 1.1911 24.5148C1.95269 25.2817 2.98529 25.7131 4.06233 25.7143H28.4363C29.5134 25.7131 30.546 25.2817 31.3076 24.5148C32.0691 23.7479 32.4975 22.708 32.4987 21.6234V4.09091C32.4975 3.00629 32.0691 1.96642 31.3076 1.19948C30.546 0.432538 29.5134 0.00116023 28.4363 0ZM27.4077 6.7668L16.9617 14.9486C16.758 15.1081 16.5073 15.1947 16.2493 15.1947C15.9913 15.1947 15.7407 15.1081 15.537 14.9486L5.09097 6.7668C4.96824 6.67347 4.86515 6.5565 4.7877 6.4227C4.71025 6.28889 4.65997 6.14092 4.6398 5.98738C4.61963 5.83384 4.62995 5.6778 4.67018 5.52831C4.71041 5.37883 4.77974 5.23889 4.87415 5.11662C4.96855 4.99435 5.08614 4.89219 5.22008 4.81609C5.35403 4.73998 5.50166 4.69144 5.65439 4.67329C5.80713 4.65513 5.96192 4.66773 6.10978 4.71034C6.25764 4.75295 6.39562 4.82473 6.51569 4.92151L16.2493 12.5452L25.983 4.92151C26.2264 4.73641 26.5323 4.65523 26.8347 4.69552C27.137 4.73581 27.4115 4.89433 27.5987 5.13681C27.7859 5.37929 27.8708 5.68623 27.8351 5.99125C27.7993 6.29628 27.6458 6.57488 27.4077 6.7668Z\" fill=\"white\"/>\r\n            </svg>\r\n                </div>\r\n            </NavIcon>\r\n            <AddAdIcon to={'/add-ad'}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"61\" height=\"60\" viewBox=\"0 0 61 60\" fill=\"none\">\r\n                    <path d=\"M30.5 0C14.2309 0 0.994629 13.2659 0.994629 29.5714C0.994629 45.8769 14.2309 59.1429 30.5 59.1429C46.7691 59.1429 60.0053 45.8769 60.0053 29.5714C60.0053 13.2659 46.7691 0 30.5 0ZM41.8482 31.8462H32.7696V40.9451C32.7696 41.5484 32.5305 42.1269 32.1049 42.5535C31.6792 42.9801 31.1019 43.2198 30.5 43.2198C29.898 43.2198 29.3207 42.9801 28.8951 42.5535C28.4695 42.1269 28.2303 41.5484 28.2303 40.9451V31.8462H19.1518C18.5498 31.8462 17.9725 31.6065 17.5469 31.1799C17.1213 30.7533 16.8821 30.1747 16.8821 29.5714C16.8821 28.9681 17.1213 28.3896 17.5469 27.963C17.9725 27.5364 18.5498 27.2967 19.1518 27.2967H28.2303V18.1978C28.2303 17.5945 28.4695 17.0159 28.8951 16.5893C29.3207 16.1627 29.898 15.9231 30.5 15.9231C31.1019 15.9231 31.6792 16.1627 32.1049 16.5893C32.5305 17.0159 32.7696 17.5945 32.7696 18.1978V27.2967H41.8482C42.4501 27.2967 43.0274 27.5364 43.4531 27.963C43.8787 28.3896 44.1178 28.9681 44.1178 29.5714C44.1178 30.1747 43.8787 30.7533 43.4531 31.1799C43.0274 31.6065 42.4501 31.8462 41.8482 31.8462Z\" fill=\"white\"/>\r\n                </svg>\r\n            </AddAdIcon>\r\n            <NavIcon to={'/info'}>\r\n                <div>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"36\" viewBox=\"0 0 25 36\" fill=\"none\">\r\n                        <path d=\"M14.7457 32.8H9.95644C9.6389 32.8 9.33435 32.9234 9.10982 33.1431C8.88528 33.3628 8.75913 33.6607 8.75913 33.9714C8.75913 34.2821 8.88528 34.5801 9.10982 34.7997C9.33435 35.0194 9.6389 35.1429 9.95644 35.1429H14.7457C15.0632 35.1429 15.3678 35.0194 15.5923 34.7997C15.8168 34.5801 15.943 34.2821 15.943 33.9714C15.943 33.6607 15.8168 33.3628 15.5923 33.1431C15.3678 32.9234 15.0632 32.8 14.7457 32.8ZM15.943 29.2857H8.75913C8.44159 29.2857 8.13705 29.4091 7.91251 29.6288C7.68797 29.8485 7.56182 30.1465 7.56182 30.4571C7.56182 30.7678 7.68797 31.0658 7.91251 31.2855C8.13705 31.5052 8.44159 31.6286 8.75913 31.6286H15.943C16.2605 31.6286 16.5651 31.5052 16.7896 31.2855C17.0142 31.0658 17.1403 30.7678 17.1403 30.4571C17.1403 30.1465 17.0142 29.8485 16.7896 29.6288C16.5651 29.4091 16.2605 29.2857 15.943 29.2857ZM20.8385 3.4184C18.5883 1.21392 15.5741 3.31987e-05 12.3511 3.31987e-05C10.7777 -0.00363589 9.21906 0.296858 7.76472 0.884256C6.31039 1.47165 4.98899 2.33438 3.87644 3.42288C2.76389 4.51138 1.8821 5.80421 1.28172 7.22711C0.681347 8.65001 0.374213 10.1749 0.377964 11.7143C0.377964 15.1276 1.71521 18.3204 4.04472 20.4737L4.37099 20.7731C5.71871 22.006 7.56182 23.6951 7.56182 25.1857V26.9429C7.56182 27.2535 7.68797 27.5515 7.91251 27.7712C8.13705 27.9909 8.44159 28.1143 8.75913 28.1143H10.5551C10.7139 28.1143 10.8661 28.0526 10.9784 27.9427C11.0907 27.8329 11.1538 27.6839 11.1538 27.5286V18.9493C11.1538 18.8309 11.1171 18.7152 11.0486 18.6176C10.9801 18.5199 10.8829 18.4449 10.7699 18.4024C10.0785 18.1265 9.42168 17.774 8.81226 17.3518C8.67531 17.2662 8.5576 17.1543 8.46629 17.0228C8.37497 16.8913 8.31198 16.743 8.28113 16.5869C8.25028 16.4308 8.25222 16.2702 8.28685 16.1149C8.32147 15.9596 8.38805 15.8128 8.48252 15.6834C8.57699 15.5541 8.69739 15.4449 8.83637 15.3625C8.97536 15.2802 9.13002 15.2264 9.29095 15.2044C9.45187 15.1823 9.61569 15.1926 9.77243 15.2346C9.92917 15.2765 10.0755 15.3492 10.2026 15.4482C10.7564 15.8319 11.8227 16.4 12.3511 16.4C12.8794 16.4 13.9457 15.8304 14.501 15.4482C14.7595 15.2892 15.0704 15.2328 15.37 15.2907C15.6696 15.3485 15.9353 15.5162 16.1127 15.7594C16.2902 16.0025 16.3659 16.3029 16.3245 16.5989C16.283 16.8949 16.1276 17.1642 15.8899 17.3518C15.2803 17.7732 14.6235 18.125 13.9323 18.4002C13.8193 18.4427 13.7221 18.5177 13.6535 18.6154C13.585 18.713 13.5483 18.8287 13.5484 18.9471V27.5286C13.5484 27.6839 13.6114 27.8329 13.7237 27.9427C13.836 28.0526 13.9883 28.1143 14.147 28.1143H15.943C16.2605 28.1143 16.5651 27.9909 16.7896 27.7712C17.0142 27.5515 17.1403 27.2535 17.1403 26.9429V25.1857C17.1403 23.7302 18.9632 22.0426 20.2945 20.8097L20.6619 20.4685C23.058 18.2304 24.3242 15.2 24.3242 11.7143C24.3321 10.1748 24.0281 8.649 23.4298 7.22508C22.8316 5.80117 21.9508 4.50736 20.8385 3.4184Z\" fill=\"white\"/>\r\n                    </svg>\r\n                </div>\r\n            </NavIcon>\r\n            <NavIcon to={'/profile'}>\r\n                <div>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"29\" height=\"33\" viewBox=\"0 0 29 33\" fill=\"none\">\r\n                        <path d=\"M19.3106 2.36869C17.9904 0.841181 16.1465 0 14.1113 0C12.0652 0 10.2152 0.836092 8.90109 2.35414C7.57277 3.88892 6.92557 5.97479 7.07753 8.22715C7.37874 12.6708 10.534 16.2856 14.1113 16.2856C17.6885 16.2856 20.8383 12.6715 21.1443 8.2286C21.2983 5.9966 20.647 3.91509 19.3106 2.36869ZM26.0512 32.5712H2.17129C1.85872 32.5756 1.54918 32.5052 1.26519 32.3652C0.981189 32.2253 0.729881 32.0192 0.529545 31.762C0.0885809 31.1971 -0.0891617 30.4258 0.0424492 29.6456C0.615025 26.2417 2.40195 23.3822 5.21055 21.3749C7.70573 19.5929 10.8664 18.6121 14.1113 18.6121C17.3561 18.6121 20.5168 19.5936 23.0119 21.3749C25.8206 23.3815 27.6075 26.2409 28.1801 29.6449C28.3117 30.425 28.1339 31.1964 27.693 31.7613C27.4927 32.0186 27.2414 32.2248 26.9574 32.3649C26.6734 32.505 26.3638 32.5755 26.0512 32.5712Z\" fill=\"white\"/>\r\n                    </svg>\r\n                </div>\r\n            </NavIcon>\r\n        </NavContainer>\r\n    </Container>\r\n}\r\n\r\n///////////// create props for component\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        local: state.LocalizationReducer.langData.navigation\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {})(Navigation)","import styled from 'styled-components'\r\n\r\nexport let Card = styled.div`\r\nwidth: calc(100% - 44px);\r\nheight: 152px;\r\nbackground: radial-gradient(97.57% 210.75% at 0.9% 2.98%,rgba(0,0,0,0.4) 0%,rgba(0,0,0,0.4) 99.99%);\r\nborder-radius: 47px;\r\nalign-self: center;\r\nmargin-bottom: 14px;\r\nposition: relative;\r\ndisplay: flex;\r\nmin-width: 329px;\r\n`\r\nexport let Like = styled.img`\r\n    position: absolute;\r\n    right: 20px;\r\n    top: 20px;\r\n    cursor: pointer;\r\n     -webkit-tap-highlight-color: rgba(0,0,0,0); \r\n -webkit-tap-highlight-color: transparent;\r\n`\r\n\r\nexport let Image = styled.div`\r\nheight: 152px;\r\nwidth: 152px;\r\n\r\nimg {\r\nwidth: inherit;\r\nheight: inherit;\r\nborder-radius: 47px 0 0 47px;\r\nobject-fit: cover;\r\n}\r\n`\r\n\r\nexport let Info = styled.div`\r\nwidth: 100%;\r\n`\r\n\r\nexport let HeadlineContainer = styled.div`\r\nwidth: calc(100% - 80px);\r\nmin-width: 100px;\r\noverflow-y: hidden;\r\nheight: 36px;\r\nmargin-left: 15px;\r\nmargin-top: 19px;\r\ndisplay: flex;\r\nalign-items: flex-start;\r\n\r\np {\r\nfont-style: normal;\r\nfont-weight: 800;\r\nfont-size: 14px;\r\nline-height: 18px;\r\nletter-spacing: 0.68px;\r\ntext-transform: uppercase;\r\ncolor: #FFFFFF;\r\n    margin: 0;\r\n}\r\n`\r\n\r\nexport let Label = styled.div`\r\nmargin-left: 15px;\r\nmargin-top: 12px;\r\nbackground: ${props => props.color};\r\nbox-shadow: 0px 0px 40px 1px rgba(0, 0, 0, 0.21);\r\nborder-radius: 49px;\r\nwidth: 132px;\r\nheight: 26px;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\ncolor: white;\r\nfont-style: normal;\r\nfont-weight: 800;\r\nfont-size: 13px;\r\nletter-spacing: -0.32px;\r\ntext-transform: uppercase;\r\n`\r\n\r\nexport let TextInfo = styled.p`\r\nmargin: 13px 0 0 15px;\r\nfont-style: normal;\r\nfont-weight: normal;\r\nfont-size: 14px;\r\nline-height: 13px;\r\nletter-spacing: -0.32px;\r\ntext-transform: capitalize;\r\n\r\ncolor: rgba(255, 255, 255, 0.7);\r\n\r\nspan {\r\nmargin-left: 5px;\r\n}\r\n`\r\n\r\n","import plug1 from '../images/plugs/plug1.jpg'\r\nimport plug2 from '../images/plugs/plug2.jpg'\r\nimport plug3 from '../images/plugs/plug3.jpg'\r\nimport plug4 from '../images/plugs/plug4.jpg'\r\nimport plug5 from '../images/plugs/plug5.jpg'\r\nimport plug6 from '../images/plugs/plug6.jpg'\r\nimport plug7 from '../images/plugs/plug7.jpg'\r\n\r\nlet plugs = [\r\n    plug1,\r\n    plug2,\r\n    plug3,\r\n    plug4,\r\n    plug5,\r\n    plug6,\r\n    plug7\r\n]\r\n\r\nexport let PasteSmallPlug = () => {\r\n    return plugs[Math.floor(Math.random() * plugs.length)]\r\n}","export default __webpack_public_path__ + \"static/media/plug1.61df315d.jpg\";","export default __webpack_public_path__ + \"static/media/plug2.f35610fd.jpg\";","export default __webpack_public_path__ + \"static/media/plug3.8831e297.jpg\";","export default __webpack_public_path__ + \"static/media/plug4.5fdf9bf6.jpg\";","export default __webpack_public_path__ + \"static/media/plug5.f6790e4c.jpg\";","export default __webpack_public_path__ + \"static/media/plug6.971e3f36.jpg\";","export default __webpack_public_path__ + \"static/media/plug7.a2238561.jpg\";","export default __webpack_public_path__ + \"static/media/like.04652187.svg\";","import React, {FC, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {AppStateType} from '../../../store/store'\r\nimport {Card, HeadlineContainer, Image, Info, Label, Like, TextInfo} from './style'\r\nimport {PasteSmallPlug} from '../../../services/paste_small_plug'\r\nimport likeIcon from '../../../images/like.svg'\r\n\r\n\r\n\r\n///////////// types for props\r\ntype PropsType = {\r\n    local: string[],\r\n    ad: any\r\n}\r\n\r\n///// for mock\r\nfunction randomInteger(min: number, max: number) {\r\n    let rand = min - 0.5 + Math.random() * (max - min + 1)\r\n    return Math.round(rand)\r\n}\r\nlet colors = [undefined, '#BFB439', '#35B881', '#8B3BBE', '#BF3339']\r\n/////\r\n\r\n\r\n\r\nlet SmallAdCard: FC<PropsType> = ({\r\n                                      local,\r\n                                      ad\r\n    }) => {\r\n\r\n    let {\r\n        adId,\r\n        headline,\r\n        isLike,\r\n        image,\r\n        categoryId,\r\n        userName,\r\n        date,\r\n        time\r\n    } = ad\r\n    \r\n    ///// for save plug image\r\n    const [imageCard] = useState(PasteSmallPlug())\r\n    const [category] = useState(randomInteger(1, 4))\r\n    \r\n  \r\n    let imageAd = imageCard\r\n    if (image !== null) {\r\n        imageAd = image\r\n    }\r\n\r\n    return <Card>\r\n        <Image>\r\n            <img src={imageAd} alt={local[0]}/>\r\n        </Image>\r\n        <Info>\r\n            <HeadlineContainer>\r\n                <p>{headline}</p>\r\n            </HeadlineContainer>\r\n            <Label color={colors[category]}>{local[category]}</Label>\r\n            <TextInfo>{userName}<br/>{date}<span>{time}</span></TextInfo>\r\n        </Info>\r\n        {isLike\r\n        ? <Like src={likeIcon} />\r\n        : <Like src={likeIcon} />}\r\n        \r\n    </Card>\r\n}\r\n\r\n///////////// create props for component\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        local: state.LocalizationReducer.langData.small_ad_card\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {})(SmallAdCard)\r\n","export default __webpack_public_path__ + \"static/media/preloader.d8588b2b.svg\";","import React, {FC} from 'react'\r\nimport styled from 'styled-components'\r\nimport preloader from '../../../images/preloader.svg'\r\n\r\ntype PropsType = {\r\n    full: boolean\r\n    height?: number\r\n}\r\n\r\nlet Preloader: FC<PropsType> = ({full, height = '150' }) => {\r\n\r\nif (full) {\r\n    return <BackgroundPreloader>\r\n        {/*// @ts-ignore*/}\r\n        <PreloaderContainer height={height}>\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </PreloaderContainer>\r\n    </BackgroundPreloader>\r\n} else {\r\n    // @ts-ignore\r\n    return <PreloaderContainer height={height}>\r\n        <img src={preloader} alt=\"preloader\"/>\r\n    </PreloaderContainer>\r\n}}\r\n\r\nlet PreloaderContainer = styled.div`\r\n\r\nheight: ${(props: any) => {return props.height + 'px'}};\r\nimg {\r\nwidth: inherit;\r\nheight: inherit;\r\nborder-radius: 100%;\r\n}\r\n`\r\n\r\nlet BackgroundPreloader = styled.div`\r\nheight: 100%;\r\nwidth: 100%;\r\njustify-content: center;\r\nalign-items: center;\r\ndisplay: flex;\r\nbackground: linear-gradient(90deg, #6D4BCE 0%, #4398B6 100%);\r\n`\r\n\r\nexport default Preloader\r\n","import React, {FC, useEffect, useState} from 'react'\r\nimport ChooseCategoryContainer from '../common-components/choose-category/choose-category-container'\r\nimport {Ads, Container} from './style'\r\nimport {IsScroll} from '../../services/scroll_listener'\r\nimport Navigation from '../common-components/navigation/navigation'\r\nimport SmallAdCard from '../common-components/small-ad-card/small-ad-card'\r\nimport Preloader from '../common-components/preloader/preloader'\r\n\r\n\r\n///////////// types for props\r\ntype PropsType = {\r\n    ads: any[] | null\r\n}\r\n\r\nlet Main: FC<PropsType> = ({ads}) => {\r\n    \r\n    ///// state for listen scroll up or down\r\n    const [scrollPosition, setScrollPosition] = useState([0,0])\r\n    const [upOrDownScroll, setScrollState] = useState([false, false])\r\n    \r\n    \r\n    let adsArray\r\n    let snowPreloader = true\r\n    \r\n    if (ads !== null) {\r\n         adsArray = ads.map((i: any) => {\r\n            return <SmallAdCard ad={i} />\r\n        })\r\n        snowPreloader = false\r\n    } \r\n\r\n    return <Container onScroll={(e: any)=>{IsScroll(e, upOrDownScroll, setScrollState, scrollPosition, setScrollPosition)}}>\r\n    <ChooseCategoryContainer upOrDownScroll={upOrDownScroll} />\r\n    <Ads>\r\n        {snowPreloader\r\n        ? <Preloader full={false} height={80} />\r\n        : adsArray}\r\n    </Ads>\r\n        <Navigation />\r\n    </Container>\r\n}\r\n\r\n\r\nexport default Main","import {AxiosResponse} from 'axios'\r\nimport {ThunkAction} from 'redux-thunk'\r\nimport {AppStateType} from './store'\r\nimport MainApi from '../api/main-api'\r\n\r\n///////////// Const for actioncreators\r\nconst GET_ADS = 'GET_ADS'\r\nconst CLOSE_MAIN_PAGE = 'CLOSE_MAIN_PAGE'\r\n\r\ntype InitialStateMainPageDataType = {\r\n    ads: Array<any> | null\r\n}\r\n\r\n///////////// Initial state\r\nlet initialState: InitialStateMainPageDataType = {\r\n  ads: null\r\n}\r\n\r\n///////////// Reducer\r\nconst MainReducer = (state = initialState, action: ActionsTypes): InitialStateMainPageDataType => {\r\n    switch (action.type) {\r\n        case GET_ADS: {\r\n            return {\r\n                ...state,\r\n                ads: action.ads\r\n            }\r\n        }\r\n        case CLOSE_MAIN_PAGE: {\r\n            return {\r\n                ads: null\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n}\r\n\r\n///////////// Action creators\r\n// actions types\r\ntype ActionsTypes = \r\n    GetAdsType |\r\n    CloseMainPageType\r\n//\r\n    \r\n///////////// Thanks\r\n// types for thunks\r\ntype ThunkActions = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>\r\n//\r\n\r\ntype CloseMainPageType = {\r\n    type: typeof CLOSE_MAIN_PAGE\r\n}\r\nexport let CloseMainPage = (): CloseMainPageType => ({type: CLOSE_MAIN_PAGE})\r\n\r\ntype GetAdsType = {\r\n    type: typeof GET_ADS\r\n    ads: Array<any>\r\n}\r\nlet GetAds = (ads: Array<any>): GetAdsType => ({type: GET_ADS, ads})\r\n\r\n\r\nexport let  GetAdsThunk = (): ThunkActions => async (dispatch) => {\r\n\r\n    const response: AxiosResponse<any> = await MainApi.GetAds()\r\n    \r\n    if (response.status === 200) {\r\n        dispatch(GetAds(response.data))\r\n    }\r\n}\r\n/////////////\r\n\r\nexport default MainReducer","import React, {FC, useEffect} from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {AppStateType} from '../../store/store'\r\nimport {connect, ConnectedProps} from 'react-redux'\r\nimport Main from './main'\r\nimport {getCookie} from '../../services/cookies_functions'\r\nimport {CloseMainPage, GetAdsThunk} from '../../store/main-reducer'\r\n\r\ntype PropsType = ConnectedProps<typeof connector>\r\n\r\nlet MainContainer: FC<PropsType> = ({\r\n                                        GetAdsThunk,\r\n                                        ads,\r\n                                        CloseMainPage\r\n}) => {\r\n    \r\n    useEffect(()=>{\r\n        GetAdsThunk()\r\n        return () => {CloseMainPage()}\r\n    },[])\r\n    \r\n    let PropsMain = {\r\n        ads\r\n    }\r\n\r\n    if (getCookie('isReadInstruction') !== 'true') {\r\n        return <Main {...PropsMain}/>\r\n    } else {\r\n        return <Redirect to={'/instruction'} />\r\n    }\r\n    \r\n}\r\n\r\n///////////// create props for component\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        ads: state.MainReducer.ads\r\n    }\r\n}\r\n\r\nconst connector = connect(mapStateToProps, {\r\n    GetAdsThunk,\r\n    CloseMainPage\r\n})\r\nexport default connector(MainContainer)\r\n","import styled from 'styled-components'\r\nimport {DefaultButtonStyles, TextInputStyle} from '../../app-styled-components'\r\nimport {Field} from 'react-final-form'\r\n\r\nexport let FormBox = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n`\r\n\r\nexport let InputText = styled(Field)`\r\n${TextInputStyle}\r\nmargin-top: 30px;\r\n`\r\n\r\nexport let SubmitButton = styled.button`\r\n${DefaultButtonStyles}\r\nmargin-top: 60px;\r\nmargin-bottom: 60px;\r\n`\r\n\r\nexport let LoadButton = styled.div`\r\n${DefaultButtonStyles}\r\nmargin-top: 60px;\r\nmargin-bottom: 60px;\r\n`\r\n\r\nexport {}","// @ts-ignore\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\n// @ts-ignore\r\nconst InputField = ({input, meta, ...props}) => {\r\n\r\n    let hasError = meta.touched && meta.error\r\n\r\n    return <FieldContainer>\r\n        <input\r\n            {...input}\r\n            {...props}\r\n        />\r\n        {hasError && <ErrorSpan>{meta.error}</ErrorSpan>}\r\n    </FieldContainer>\r\n}\r\n\r\nexport default InputField\r\n\r\n\r\nlet FieldContainer = styled.div`\r\n    width: inherit;\r\n    height: inherit;\r\n    position: relative;\r\n   display: flex;\r\n    justify-content: center;\r\n`\r\n\r\nlet ErrorSpan = styled.span`\r\nposition: absolute;\r\n    color: red;\r\n    bottom: -20px;\r\n`","/*\r\nFile contains functions for validation fields in forms.\r\n */\r\n\r\nexport const required = (value: any) => (value ? undefined : \"Обов'язкове поле\")\r\nexport const numberQuantity = (number: any) => (value: any) => (\r\n    value.length === number ? undefined : `Не верный формат`\r\n)\r\n\r\n\r\nexport const minLength = (number: any) => (value: any) => {\r\n    if (value) {\r\n        return value.length >= number ? undefined : `Минимальное количество символов ${number}`\r\n    }\r\n}\r\n    \r\n\r\n\r\nexport const maxLength = (number: any) => (value: any) => {\r\n    if (value) {\r\n       return  value.length <= number ? undefined : `Максимальное количество символов ${number}`\r\n    }\r\n}\r\n\r\n\r\nexport const composeValidators = (...validators: any) => (value: any) =>\r\n    validators.reduce((error: any, validator: any) => error || validator(value), undefined)","export default __webpack_public_path__ + \"static/media/avatar.80455780.png\";","import {Field} from 'react-final-form'\r\nimport React, {FC, useRef, useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport avatarIcon from '../../../images/avatar.png'\r\nimport {DefaultButtonStyles} from '../../../app-styled-components'\r\nimport {AppStateType} from '../../../store/store'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\ntype PropsType = {\r\n    local: Array<string>\r\n}\r\n\r\nconst UploadAvatar: FC<PropsType> = ({local}) => {\r\n    \r\n    ///// uploads images\r\n    const [stateImg, setStateImg]: any = useState({\r\n        files: []\r\n    })\r\n\r\n    ///// ref for upload input\r\n    const fileInput: any = useRef(null)\r\n    ///// function make click to input when upload button clicked\r\n    const clickToUpload = () => {\r\n        fileInput.current.click()\r\n    }\r\n\r\n    return <ImgFieldContainer>\r\n        <ImgField>\r\n        <Field name='avatar'>\r\n            {({input: {value, onChange, ...input}}) => {\r\n                const handleChange = ({target}: React.ChangeEvent<HTMLInputElement>) => {\r\n                    onChange(target.files)\r\n                    let imgArray = []\r\n                    if (target.files !== null) {\r\n                        for (let i = 0; i < target.files.length; i++) {\r\n                            imgArray.push(URL.createObjectURL(target.files[i]))\r\n                        }\r\n                    }\r\n                    \r\n                    setStateImg({\r\n                        files: imgArray\r\n                    })\r\n                }\r\n                return <input {...input} type=\"file\" ref={fileInput} onChange={handleChange}/>\r\n            }}\r\n        </Field>\r\n        </ImgField>\r\n        <ImageContainer>\r\n            {stateImg.files.length === 0\r\n            ? <Photo src={avatarIcon} alt={local[0]} />\r\n            : <Photo src={stateImg.files?.[0]} alt={local[0]} />}\r\n            <DownloadPhotoButton onClick={()=> {clickToUpload()}}>{local[1]}</DownloadPhotoButton>\r\n        </ImageContainer>\r\n    </ImgFieldContainer>\r\n}\r\n\r\n\r\n///////////// create props for App component\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        local: state.LocalizationReducer.langData.auth_page,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(UploadAvatar)\r\n\r\n\r\nlet DownloadPhotoButton = styled.div`\r\n${DefaultButtonStyles}\r\nmargin-top: 67px;\r\n`\r\n\r\nlet Photo = styled.img`\r\nheight: 127px;\r\nwidth: 127px;\r\nbox-shadow: 0px 0px 40px 1px rgba(0, 0, 0, 0.21);\r\nborder-radius: 100%;\r\nmargin-top: 86px;\r\n`\r\n\r\nlet ImgFieldContainer = styled.div`\r\nwidth: 100%;\r\n`\r\n\r\nlet ImgField = styled.div`\r\ndisplay: none;\r\n`\r\n\r\nlet ImageContainer = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\n`","import React, {FC} from 'react'\r\nimport {Page} from '../../app-styled-components'\r\nimport {FormBox, InputText, LoadButton, SubmitButton} from './style'\r\nimport {Form} from 'react-final-form'\r\nimport InputField from '../common-components/fields/input-field'\r\nimport {composeValidators, required} from '../../services/validations'\r\nimport {AuthDataType} from '../../types/types'\r\nimport Preloader from '../common-components/preloader/preloader'\r\nimport UploadAvatar from '../common-components/fields/upload-avatar'\r\n\r\n///////////// types for props\r\ntype PropsType = {\r\n    onSubmit: (formData: AuthDataType) => void\r\n    \r\n    isLoadNewUser: boolean\r\n    local: Array<string>\r\n}\r\n\r\n\r\nlet Auth: FC<PropsType> = ({\r\n                               local,\r\n                               onSubmit, \r\n                               isLoadNewUser\r\n}) => {\r\n\r\n    return <Page>\r\n        <Form onSubmit={onSubmit}\r\n              render={({handleSubmit}) => (\r\n                  <FormBox onSubmit={handleSubmit}>\r\n                      <UploadAvatar/>\r\n                      <InputText\r\n                          validate={composeValidators(required)} \r\n                          name='name'\r\n                          component={InputField}\r\n                          placeholder={local[2]}\r\n                      />\r\n                      <InputText\r\n                          name='phone'\r\n                          component={InputField}\r\n                          placeholder={local[3]}\r\n                      />\r\n                      \r\n                      {isLoadNewUser\r\n                      ? <LoadButton><Preloader full={false} height={40}/></LoadButton>\r\n                      : <SubmitButton type='submit'>{local[4]}</SubmitButton>}\r\n                  </FormBox>\r\n              )}\r\n        />\r\n    </Page>\r\n}\r\n\r\n\r\nexport default Auth","import React, {FC, useEffect} from 'react'\r\nimport {AppStateType} from '../../store/store'\r\nimport {connect, ConnectedProps} from 'react-redux'\r\nimport Auth from './auth'\r\nimport {AddNewUserThunk, CleanState, ToggleLoadSubmit} from '../../store/auth-reducer'\r\nimport {AuthDataType} from '../../types/types'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n///////////// types for props\r\ntype PropsType = PropsFromRedux\r\n// types takes from connect() where added mapStateToProps and mapDispatchToProps\r\ntype PropsFromRedux = ConnectedProps<typeof connector>\r\n\r\n\r\nlet AuthContainer: FC<PropsType> = ({\r\n                                        local,\r\n                                        AddNewUserThunk, \r\n                                        ToggleLoadSubmit, \r\n                                        isLoadNewUser, \r\n                                        CleanState,\r\n                                        isRedirectToMainPage\r\n}) => {\r\n    \r\n    useEffect(()=>{\r\n        return ()=>{CleanState()}\r\n    },[])\r\n    \r\n    const onSubmit = (formData: AuthDataType) => {\r\n        AddNewUserThunk(formData)\r\n        ToggleLoadSubmit()\r\n    }\r\n    \r\n    let AuthProps = {\r\n        isLoadNewUser,\r\n        onSubmit,\r\n        local\r\n    }\r\n    \r\n    if (isRedirectToMainPage) {\r\n        return <Redirect to='/' />\r\n    } else {\r\n        return <Auth {...AuthProps}/>\r\n    }\r\n    \r\n}\r\n\r\n///////////// create props for App component\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        local: state.LocalizationReducer.langData.auth_page,\r\n        isLoadNewUser: state.AuthReducer.isLoadNewUser,\r\n        isRedirectToMainPage: state.AuthReducer.isRedirectToMainPage\r\n    }\r\n}\r\n\r\nconst connector = connect(mapStateToProps, { AddNewUserThunk, ToggleLoadSubmit, CleanState })\r\nexport default connector(AuthContainer)\r\n","// @ts-ignore\r\nexport let generatorId = (): string => ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,c=>(c^crypto.getRandomValues(new Uint8Array(1))[0]&15 >> c/4).toString(16))","import styled from 'styled-components'\r\n\r\nexport let Container = styled.div`\r\n\r\n`","import React, {FC} from 'react'\r\nimport {Container} from './style'\r\nimport Navigation from '../common-components/navigation/navigation'\r\n\r\n///////////// types for props\r\ntype PropsType = {\r\n\r\n}\r\n\r\nlet Chats: FC<PropsType> = ({}) => {\r\n\r\n    return <Container>\r\n        <h1>Chats</h1>\r\n        <Navigation />\r\n    </Container>\r\n}\r\n\r\n\r\nexport default Chats","import React, {FC} from 'react'\r\nimport {AppStateType} from '../../store/store'\r\nimport {connect, ConnectedProps} from 'react-redux'\r\nimport Chats from './chats'\r\n\r\ntype PropsType = ConnectedProps<typeof connector>\r\n\r\nlet ChatsContainer: FC<PropsType> = ({}) => {\r\n    return <Chats/>\r\n}\r\n\r\n///////////// create props for component\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst connector = connect(mapStateToProps, {})\r\nexport default connector(ChatsContainer)\r\n","import styled from 'styled-components'\r\n\r\nexport let Container = styled.div`\r\n\r\n`","import React, {FC} from 'react'\r\nimport {Container} from './style'\r\nimport Navigation from '../common-components/navigation/navigation'\r\n\r\n///////////// types for props\r\ntype PropsType = {\r\n\r\n}\r\n\r\nlet AddAd: FC<PropsType> = ({}) => {\r\n\r\n    return <Container>\r\n        <h1>Add ad</h1>\r\n        <Navigation />\r\n    </Container>\r\n}\r\n\r\n\r\nexport default AddAd","import React, {FC} from 'react'\r\nimport {AppStateType} from '../../store/store'\r\nimport {connect, ConnectedProps} from 'react-redux'\r\nimport AddAd from './add-ad'\r\n\r\ntype PropsType = ConnectedProps<typeof connector>\r\n\r\nlet AddAdContainer: FC<PropsType> = ({}) => {\r\n    return <AddAd/>\r\n}\r\n\r\n///////////// create props for component\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst connector = connect(mapStateToProps, {})\r\nexport default connector(AddAdContainer)\r\n","import styled from 'styled-components'\r\n\r\nexport let Container = styled.div`\r\n\r\n`","import React, {FC} from 'react'\r\nimport {Container} from './style'\r\nimport Navigation from '../common-components/navigation/navigation'\r\n\r\n///////////// types for props\r\ntype PropsType = {\r\n\r\n}\r\n\r\nlet Info: FC<PropsType> = ({}) => {\r\n\r\n    return <Container>\r\n        <h1>Info</h1>\r\n        <Navigation />\r\n    </Container>\r\n}\r\n\r\n\r\nexport default Info","import React, {FC} from 'react'\r\nimport {AppStateType} from '../../store/store'\r\nimport {connect, ConnectedProps} from 'react-redux'\r\nimport Info from './info'\r\n\r\ntype PropsType = ConnectedProps<typeof connector>\r\n\r\nlet InfoContainer: FC<PropsType> = ({}) => {\r\n    return <Info/>\r\n}\r\n\r\n///////////// create props for component\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst connector = connect(mapStateToProps, {})\r\nexport default connector(InfoContainer)\r\n","import styled from 'styled-components'\r\n\r\nexport let Container = styled.div`\r\n\r\n`","import React, {FC} from 'react'\r\nimport {Container} from './style'\r\nimport Navigation from '../common-components/navigation/navigation'\r\n\r\n///////////// types for props\r\ntype PropsType = {\r\n\r\n}\r\n\r\nlet Profile: FC<PropsType> = ({}) => {\r\n\r\n    return <Container>\r\n        <h1>Profile</h1>\r\n        <Navigation />\r\n    </Container>\r\n}\r\n\r\n\r\nexport default Profile","import React, {FC} from 'react'\r\nimport {AppStateType} from '../../store/store'\r\nimport {connect, ConnectedProps} from 'react-redux'\r\nimport Profile from './profile'\r\n\r\ntype PropsType = ConnectedProps<typeof connector>\r\n\r\nlet ProfileContainer: FC<PropsType> = ({}) => {\r\n    return <Profile/>\r\n}\r\n\r\n///////////// create props for component\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst connector = connect(mapStateToProps, {})\r\nexport default connector(ProfileContainer)\r\n","import React, {FC} from 'react'\r\n\r\n///////////// types for props\r\ntype PropsType = {\r\n}\r\n\r\n\r\nlet Instruction: FC<PropsType> = ({}) => {\r\n\r\n    return <>\r\n    <h1>Інструкція</h1>\r\n    </>\r\n}\r\n\r\n\r\nexport default Instruction","import React, {FC, useEffect, useState} from 'react'\nimport './app-styles.css'\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport {connect, ConnectedProps} from 'react-redux'\nimport {AppStateType} from './store/store'\n\nimport {developerFun} from './services/developer_functions'\nimport {getCookie} from './services/cookies_functions'\nimport {SetUser} from './store/auth-reducer'\nimport {Container, FullScreenBlock} from './app-styled-components'\nimport PrivateRoute from './HOC/private-route'\nimport MainContainer from './components/main-page/main-container'\nimport AuthContainer from './components/auth-page/auth-container'\nimport ChatsContainer from './components/chats-page/chats-container'\nimport AddAdContainer from './components/add-ad-page/add-ad-container'\nimport InfoContainer from './components/info-page/info-container'\nimport ProfileContainer from './components/profile-page/profile-container'\nimport Instruction from './components/instruction-page/instruction'\nimport Preloader from './components/common-components/preloader/preloader'\n\n\ntype PropsType = ConnectedProps<typeof connector>\n\nlet App: FC<PropsType> = ({ isRegistered, SetUser, local }) => {\n    \n    useEffect(()=>{\n        ///// cookies\n        if (getCookie('registered') === 'true' && isRegistered === null) {\n            let userData = {\n                isRegistered: true,\n                name: getCookie('user'),\n                idUser: getCookie('idUser'),\n                phone: getCookie('phone'),\n                avatar: getCookie('avatar')\n            }\n            SetUser(userData)\n        } else {\n            let userData = {\n                isRegistered: false,\n                name: null,\n                idUser: null,\n                phone: null,\n                avatar: null\n            }\n            SetUser(userData)\n        }\n    },[])\n    \n    ///// developer delete cookies button CTRL and ALT get state\n    developerFun()\n    \n    ///// for dynamic height\n    const [height, setHeight] = useState(window.innerHeight)\n    // @ts-ignore\n    useEffect(() => {\n        function handleResize() {\n            setHeight(window.innerHeight)\n        }\n\n        window.addEventListener('resize', handleResize)\n        return (_: any) => {\n            window.removeEventListener('resize', handleResize)\n        }\n    })\n\n    // @ts-ignore\n    return <BrowserRouter><Container height={height}>\n        {isRegistered === null\n        ? <Preloader full />\n        : <>\n                <Route path='/login' exact render={() =><AuthContainer />}/>\n                <Route path='/instruction' exact render={() =><Instruction />}/>\n                <Route path='/' exact render={()=> <PrivateRoute component={MainContainer} auth={isRegistered}/>}/>\n                <Route path='/chats' exact render={()=> <PrivateRoute component={ChatsContainer} auth={isRegistered}/>}/>\n                <Route path='/add-ad' exact render={()=> <PrivateRoute component={AddAdContainer} auth={isRegistered}/>}/>\n                <Route path='/info' exact render={()=> <PrivateRoute component={InfoContainer} auth={isRegistered}/>}/>\n                <Route path='/profile' exact render={()=> <PrivateRoute component={ProfileContainer} auth={isRegistered}/>}/>\n            </>} \n            \n    </Container>\n        {/*@ts-ignore*/}\n        <FullScreenBlock height={height}>\n            <h2>{local[0]}<br/>{local[1]}</h2>\n        </FullScreenBlock>\n    </BrowserRouter>\n}\n\n///////////// create props for App component\nlet mapStateToProps = (state: AppStateType) => {\n    return {\n        isRegistered: state.AuthReducer.isRegistered,\n        local: state.LocalizationReducer.langData.common\n    }\n}\n\nconst connector = connect(mapStateToProps, { SetUser })\nexport default connector(App)\n","import { deleteCookie } from './cookies_functions'\r\n\r\nexport let developerFun = (): void => {\r\n    document.addEventListener('keydown', function (event) {\r\n        if (event.ctrlKey) {\r\n          deleteCookie('registered')\r\n          deleteCookie('user')\r\n          deleteCookie('idUser')\r\n        }\r\n      })\r\n      document.addEventListener('keydown', function (event) {\r\n        if (event.altKey) {\r\n    // @ts-ignore\r\n            console.log(window.store.getState())\r\n        }\r\n      })\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","///// localization object\r\nexport const Localization = {\r\n    UA: {\r\n        langId: 1,\r\n        langData: {\r\n            common: [\r\n                \"Підтримка широких екранів відсутня.\",\r\n                \"Користуйтесь телефоном або звузьте вікно браузера.\"\r\n            ],\r\n            navigation: [\r\n                'головна',\r\n                'чати',\r\n                'додати оголошення',\r\n                'інформація',\r\n                'профіль'\r\n            ],\r\n            auth_page: [\r\n                \"аватар\",\r\n                \"завантажити фото\",\r\n                \"ім’я (обов’язково*)\",\r\n                \"телефон\",\r\n                \"погнали!\"\r\n            ],\r\n            categories: [\r\n                \"всі\",\r\n                \"об'ява\",\r\n                \"куплю\",\r\n                \"продам\",\r\n                \"обміняю\",\r\n                \"їжа\",\r\n                \"напої\",\r\n                \"квитки\",\r\n                \"інше\"\r\n            ],\r\n            small_ad_card: [\r\n                \"картинка оголошення\",\r\n                \"об'ява\",\r\n                \"куплю\",\r\n                \"продам\",\r\n                \"обміняю\",\r\n            ]\r\n        }\r\n    }\r\n}","import {Localization} from '../config'\r\n\r\n///////////// Const for action creators\r\n\r\n\r\n///////////// Initial state\r\ntype LocalizationInitStateType = {\r\n    currentLangId: typeof Localization.UA.langId,\r\n    langData: typeof Localization.UA.langData\r\n}\r\n\r\nlet initialState: LocalizationInitStateType = {\r\n    currentLangId: Localization.UA.langId,\r\n    langData: Localization.UA.langData\r\n}\r\n\r\n///////////// Reduser\r\nconst LocalizationReducer = (state = initialState, action: ActionsTypes): LocalizationInitStateType => {\r\n    switch (action.type) {\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n}\r\n\r\n///////////// Action creators\r\ntype ActionsTypes = any\r\n\r\n/////////////\r\n\r\nexport default LocalizationReducer","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport AuthReducer from './auth-reducer'\r\nimport LocalizationReducer from './localization-reducer'\r\nimport CategoriesReducer from './categories-reducer'\r\nimport MainReducer from './main-reducer'\r\n\r\nlet redusers = combineReducers(\r\n    {\r\n        LocalizationReducer,\r\n        AuthReducer,\r\n        CategoriesReducer,\r\n        MainReducer\r\n    })\r\n\r\ntype ReducersType = typeof redusers\r\nexport type AppStateType = ReturnType<ReducersType>\r\n\r\n///// create store and added middleware for thanks\r\nconst store = createStore(redusers, applyMiddleware(thunkMiddleware))\r\n\r\n// @ts-ignore // for view info in devtools\r\nwindow.store = store\r\n\r\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport {Provider} from 'react-redux'\nimport store from './store/store'\n\nReactDOM.render(<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}