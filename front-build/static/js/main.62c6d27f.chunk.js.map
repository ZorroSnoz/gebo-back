{"version":3,"sources":["app-styled-components.ts","services/cookies_functions.ts","api/main-api.ts","store/auth-reducer.ts","HOC/private-route.tsx","components/common-components/choose-category/style.js","components/common-components/choose-category/choose-category.tsx","store/categories-reducer.ts","components/common-components/choose-category/choose-category-container.tsx","components/main-page/style.js","components/main-page/main.tsx","components/main-page/main-container.tsx","components/auth-page/style.js","components/common-components/fields/input-field.tsx","services/validations.ts","images/preloader.svg","components/common-components/preloader/preloader.tsx","images/avatar.png","components/common-components/fields/upload-avatar.tsx","components/auth-page/auth.tsx","components/auth-page/auth-container.tsx","services/generator_id.ts","components/instruction-page/instruction.tsx","App.tsx","services/developer_functions.ts","reportWebVitals.js","config.ts","store/localization-reducer.ts","store/store.ts","index.tsx"],"names":["Container","styled","div","props","height","FullScreenBlock","Page","DefaultButtonStyles","getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","setCookie","value","options","path","expires","Date","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue","deleteCookie","AddUserDataCookie","userData","idUser","phone","avatar","console","log","isRegistered","instance","axios","create","baseURL","MainApi","AddNewUser","post","SET_AUTH_USER_DATA","SET_AUTH_USER_DATA_AND_REDIRECT","TOGGLE_LOADER_SUBMIT","CLEAN_STATE","initialState","isLoadNewUser","isRedirectToMainPage","SetUserAndRedirect","type","AuthReducer","state","action","newValue","PrivateRoute","Component","component","auth","to","Categories","active","CategoriesLine","MarginBlock","p","DefaultButton","Button","YellowButton","GreenButton","PurpleButton","RedButton","ChooseCategory","showSecondCategories","mainCategoriesState","SetShowSecondCategories","secondCategoriesState","SelectAllMainCategories","ChangeMainCategory","local","SelectAllSecondCategories","ChangeSecondCategory","onClick","SET_SHOW_SECOND_CATEGORIES","SELECT_ALL_MAIN_CATEGORIES","SELECT_ALL_SECOND_CATEGORIES","CHANGE_MAIN_CATEGORY","CHANGE_SECOND_CATEGORY","CategoriesReducer","newCategories","categoryId","includes","connect","LocalizationReducer","langData","categories","upOrDownScroll","useEffect","PropsCategories","Ads","Block","Main","useState","scrollPosition","setScrollPosition","setScrollState","onScroll","e","target","scrollTop","IsScroll","connector","FormBox","form","InputText","Field","SubmitButton","button","LoadButton","InputField","input","meta","hasError","touched","error","FieldContainer","ErrorSpan","span","required","undefined","composeValidators","validators","reduce","validator","PreloaderContainer","BackgroundPreloader","Preloader","full","src","preloader","alt","auth_page","files","stateImg","setStateImg","fileInput","useRef","ImgFieldContainer","ImgField","onChange","ref","imgArray","i","length","push","URL","createObjectURL","ImageContainer","Photo","avatarIcon","DownloadPhotoButton","current","click","img","Auth","onSubmit","render","handleSubmit","validate","placeholder","AddNewUserThunk","formData","dispatch","a","userId","c","crypto","getRandomValues","Uint8Array","toString","payload","FormData","append","response","status","data","ToggleLoadSubmit","CleanState","AuthProps","Instruction","common","SetUser","addEventListener","event","ctrlKey","altKey","window","store","getState","innerHeight","setHeight","handleResize","_","removeEventListener","exact","MainContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Localization","UA","langId","currentLangId","redusers","combineReducers","createStore","applyMiddleware","thunkMiddleware","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.62c6d27f.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport let Container = styled.div`\r\nheight: ${(props: any) => {\r\n    return props.height + 'px'\r\n}};\r\nbackground: linear-gradient(90deg, #6D4BCE 0%, #4398B6 100%);\r\nmax-width: 586px;\r\nwidth: 100%;\r\ndisplay: inline-block;\r\n\r\n@media (min-width: 586px) {\r\ndisplay: none;\r\n}\r\n`\r\n\r\nexport let FullScreenBlock = styled.div`\r\nheight: ${(props: any) => {\r\n    return props.height + 'px'\r\n}};\r\nbackground: linear-gradient(90deg, #6D4BCE 0%, #4398B6 100%);\r\nwidth: 100%;\r\ndisplay: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\nh2 {\r\n\r\n}\r\n\r\n@media (max-width: 586px) {\r\ndisplay: none;\r\n}\r\n`\r\n\r\nexport let Page = styled.div`\r\n    display: flex;\r\n    height: 100%;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n        overflow-y: overlay;\r\n`\r\n\r\nexport let DefaultButtonStyles = `\r\nwidth: calc(100% - 83px);\r\nmin-width: 250px;\r\nheight: 66px;\r\nbackground: #000000;\r\nborder-radius: 49px;\r\ncolor: #FFFFFF;\r\nfont-weight: 800;\r\nfont-size: 20px;\r\ntext-transform: uppercase;\r\ncursor: pointer;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\noutline: none;\r\nborder: none;\r\n`\r\n\r\nexport let TextInputStyle = `\r\nbackground: none;\r\n    outline: none;\r\n    border: 3px solid rgba(0, 0, 0, 0.8);\r\n    border-radius: 49px;\r\n    height: 66px;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 84px);\r\n    min-width: 250px;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    font-style: normal;\r\nfont-weight: normal;\r\nfont-size: 20px;\r\nline-height: 52px;\r\ncolor: rgba(255, 255, 255, 0.7);\r\n    \r\n    ::placeholder {\r\nfont-style: normal;\r\nfont-weight: normal;\r\nfont-size: 20px;\r\nline-height: 52px;\r\ncolor: rgba(255, 255, 255, 0.7);\r\ntext-transform: uppercase;\r\ntransition: 0.25s;\r\n    }\r\n   \r\n:focus::placeholder {\r\ncolor: rgba(255, 255, 255, 0.0);\r\n}\r\n`","export let getCookie = (name: string): string | null => {\r\n    let matches: any = document.cookie.match(new RegExp(\r\n        \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n    ))\r\n    return matches ? decodeURIComponent(matches[1]) : null\r\n}\r\n\r\nexport let setCookie = (name: string, value: string | boolean, options: any = {}): void => {\r\n\r\n    options = {\r\n        path: '/',\r\n        'max-age': 3600 * 24 * 365,\r\n        // secure: true,\r\n        // httpOnly: true,\r\n        ...options\r\n    }\r\n\r\n    if (options.expires instanceof Date) {\r\n        options.expires = options.expires.toUTCString()\r\n    }\r\n\r\n    let updatedCookie = encodeURIComponent(name) + \"=\" + encodeURIComponent(value)\r\n\r\n    for (let optionKey in options) {\r\n        updatedCookie += \"; \" + optionKey\r\n        let optionValue = options[optionKey]\r\n        if (optionValue !== true) {\r\n            updatedCookie += \"=\" + optionValue\r\n        }\r\n    }\r\n\r\n    document.cookie = updatedCookie\r\n}\r\n\r\nexport let deleteCookie = (name: string): void => {\r\n    setCookie(name, \"\", {\r\n      'max-age': -1\r\n    })\r\n  }\r\n\r\nexport let AddUserDataCookie = (userData: any) => {\r\n    if (userData.name != null && userData.idUser != null) {\r\n        \r\n        setCookie('user', userData.name)\r\n        setCookie('idUser', userData.idUser)\r\n        setCookie('phone', userData.phone)\r\n        setCookie('avatar', userData.avatar)\r\n    \r\n    }\r\n    else {\r\n        console.log('Error: Cookies not added.')\r\n    }\r\n    \r\n\r\n    if (userData.isRegistered) {\r\n        setCookie('registered', 'true')\r\n    }\r\n    else {\r\n        setCookie('registered', 'false')\r\n    }\r\n  }","import axios from 'axios'\r\n\r\nconst instance = axios.create({ baseURL: 'https://60abde1c5a4de40017ccb188.mockapi.io/' })\r\n// https://60abde1c5a4de40017ccb188.mockapi.io/\r\n// http://localhost:2000/\r\n// https://gebo-app.herokuapp.com/\r\n\r\nconst MainApi = {\r\n    // GetAds(userId: string) {\r\n    //     return instance.get(`get-ads/${userId}`)\r\n    // },\r\n    // GetMyAds(userId: string) {\r\n    //     return instance.get(`get-my-ads/${userId}`)\r\n    // },\r\n    // DeleteAd(adId: string) {\r\n    //     return instance.get(`delete-ad/${adId}`)\r\n    // },\r\n    AddNewUser(userData: FormData) {\r\n        return instance.post(`add-new-user`, userData )\r\n    },\r\n    // AddNewAd(adData: AdDataType) {\r\n    //     return instance.put(`add-new-ad`, { adData: adData })\r\n    // },\r\n    // EditAd(adData: AdDataType) {\r\n    //     return instance.put(`edit-ad`, { adData: adData })\r\n    // }\r\n}\r\n\r\nexport default MainApi","import {AxiosResponse} from 'axios'\r\nimport {ThunkAction} from 'redux-thunk'\r\nimport {AppStateType} from './store'\r\nimport MainApi from '../api/main-api'\r\nimport {AddUserDataCookie} from '../services/cookies_functions'\r\nimport {AuthDataType, InitialStateAndUserDataType} from '../types/types'\r\nimport {generatorId} from '../services/generator_id'\r\n\r\n///////////// Const for actioncreators\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA'\r\nconst SET_AUTH_USER_DATA_AND_REDIRECT = 'SET_AUTH_USER_DATA_AND_REDIRECT'\r\nconst TOGGLE_LOADER_SUBMIT = 'TOGGLE_LOADER_SUBMIT'\r\nconst CLEAN_STATE = 'CLEAN_STATE'\r\n\r\n///////////// Initial state\r\nlet initialState: InitialStateAndUserDataType = {\r\n    isRegistered: null,\r\n    name: null,\r\n    phone: null,\r\n    avatar: null,\r\n    idUser: null,\r\n    isLoadNewUser: false,\r\n    isRedirectToMainPage: false\r\n}\r\n\r\n///////////// Reducer\r\nconst AuthReducer = (state = initialState, action: ActionsTypes): InitialStateAndUserDataType => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                isRegistered: action.userData.isRegistered,\r\n                name: action.userData.name,\r\n                idUser: action.userData.idUser,\r\n                phone: action.userData.phone,\r\n                avatar: action.userData.avatar\r\n            }\r\n        }\r\n        case TOGGLE_LOADER_SUBMIT:{\r\n            \r\n            let newValue = true\r\n            if (state.isLoadNewUser) {\r\n                newValue = false\r\n            }\r\n            \r\n            return {\r\n                ...state,\r\n                isLoadNewUser: newValue\r\n            }\r\n        }\r\n        case SET_AUTH_USER_DATA_AND_REDIRECT: {\r\n            return {\r\n                ...state,\r\n                isRegistered: action.userData.isRegistered,\r\n                name: action.userData.name,\r\n                idUser: action.userData.idUser,\r\n                phone: action.userData.phone,\r\n                avatar: action.userData.avatar,\r\n                isLoadNewUser: false,\r\n                isRedirectToMainPage: true\r\n            }\r\n        }\r\n        case CLEAN_STATE: {\r\n            \r\n            return {\r\n                ...state,\r\n                isLoadNewUser: false,\r\n                isRedirectToMainPage: false\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n}\r\n\r\n///////////// Action creators\r\n// actions types\r\ntype ActionsTypes = \r\n    SetUserType |\r\n    ToggleLoadSubmitType |\r\n    SetUserAndRedirectType |\r\n    CleanStateType\r\n//\r\n\r\ntype CleanStateType = {\r\n    type: typeof CLEAN_STATE\r\n}\r\n\r\nexport let CleanState = ():CleanStateType => ({type: CLEAN_STATE})\r\n\r\ntype ToggleLoadSubmitType = {\r\n    type: typeof TOGGLE_LOADER_SUBMIT\r\n}\r\n\r\nexport let ToggleLoadSubmit = (): ToggleLoadSubmitType => ({type: TOGGLE_LOADER_SUBMIT})\r\n\r\n\r\ntype SetUserType = {\r\n    type: typeof SET_AUTH_USER_DATA\r\n    userData: UserDataType\r\n}\r\ntype UserDataType = {\r\n    isRegistered: boolean\r\n    name: string | null\r\n    idUser: string | null\r\n    phone: string | null\r\n    avatar: string | null\r\n}\r\nexport let SetUser = (userData: UserDataType): SetUserType => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    userData: userData\r\n})\r\n\r\ntype SetUserAndRedirectType = {\r\n    type: typeof SET_AUTH_USER_DATA_AND_REDIRECT\r\n    userData: UserDataType\r\n}\r\nlet SetUserAndRedirect = (userData: UserDataType): SetUserAndRedirectType => ({type: SET_AUTH_USER_DATA_AND_REDIRECT, userData})\r\n\r\n///////////// Thanks\r\n// types for thunks\r\ntype ThunkActions = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>\r\n//\r\nexport let AddNewUserThunk = (formData: AuthDataType): ThunkActions => async (dispatch) => {\r\n    \r\n    const userId: string = generatorId()\r\n    type UserDataType = {\r\n        isRegistered: boolean\r\n        name: string\r\n        avatar: string | null\r\n        phone: string | null\r\n        idUser: string\r\n    }\r\n    \r\n    let payload = new FormData()\r\n    let userData: UserDataType = {\r\n        isRegistered: true,\r\n        name: formData.name,\r\n        avatar: null,\r\n        phone: null,\r\n        idUser: userId\r\n    }\r\n\r\n    payload.append('name', formData.name)\r\n    if (formData.avatar) {\r\n        payload.append('avatar', formData.avatar[0])\r\n    }\r\n    if (formData.phone && formData.phone !== '') {\r\n        payload.append('phone', formData.phone)\r\n        userData.phone = formData.phone\r\n    }\r\n    payload.append('idUser', userId)\r\n    \r\n\r\n    let response: AxiosResponse<any> = await MainApi.AddNewUser(payload)\r\n\r\n    if (response.status === 201) {\r\n        userData.avatar = response.data.avatar\r\n        AddUserDataCookie(userData)\r\n        dispatch(SetUserAndRedirect(userData))\r\n    }\r\n    else {\r\n        console.log('AddNewUserThunk error.')\r\n    }\r\n}\r\n/////////////\r\n\r\nexport default AuthReducer","import React, {FC} from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\ntype PropsType = {\r\n    component: FC\r\n    auth: boolean | null\r\n}\r\nconst PrivateRoute: FC<PropsType> = ({ component: Component, auth}) => {\r\n\r\n    return <>\r\n        {auth\r\n            ? <Component />\r\n            : <Redirect to=\"/login\" />}\r\n    </>\r\n\r\n}\r\n\r\nexport default PrivateRoute","import styled from 'styled-components'\r\n\r\nexport let Categories = styled.div`\r\n    position: fixed;\r\n    width: 100%;\r\n    z-index: 10;\r\n    background: linear-gradient(90deg, #6D4BCE 0%, #4398B6 100%);\r\n    height:  ${props => props.active ? '0' : '118px'};\r\n    padding: ${props => props.active ? '0' : '8px 0'};\r\n    transition: 0.5s;\r\n`\r\n\r\nexport let CategoriesLine = styled.div`\r\n    height:  ${props => props.active ? '0' : '59px'};\r\n    opacity:  ${props => props.active ? '0' : '1'};\r\n    display: flex;\r\n    overflow-x: scroll;\r\n    overflow-y: hidden;\r\n    padding: 0 22px;\r\n    transition: 0.25s;\r\n    \r\n   ::-webkit-scrollbar {\r\n    height: 0px;\r\n    }\r\n\r\n`\r\n\r\nexport let MarginBlock = styled.p`\r\nwidth: 8px;\r\nheight: 8px;\r\np {\r\nwidth: 8px;\r\nheight: 8px;\r\n}\r\n`\r\n\r\nexport let DefaultButton = styled.div`\r\nheight: 43px;\r\nbackground: radial-gradient(97.57% 210.75% at 0.9% 2.98%, rgba(0, 0, 0, 0.4) 0%, rgba(0, 0, 0, 0.4) 99.99%);\r\nbox-shadow: 0px 0px 8px rgba(0, 0, 0, 0.2);\r\nborder-radius: 47px;\r\nfont-style: normal;\r\nfont-weight: 800;\r\nfont-size: 14px;\r\nline-height: 52px;\r\nletter-spacing: -0.32px;\r\ntext-transform: uppercase;\r\ncolor: white;\r\ncursor: pointer;\r\nwidth: min-content;\r\npadding: 0 14px;\r\ndisplay: flex;\r\nalign-items: center;\r\nmargin: 8px 14px 8px 0;\r\nuser-select:none;\r\ntransition: 0.25s;\r\n -webkit-tap-highlight-color: rgba(0,0,0,0); \r\n -webkit-tap-highlight-color: transparent;\r\n`\r\nexport let Button = styled(DefaultButton)`\r\ncolor: ${props => props.active ? 'rgba(0, 0, 0, 0.8)' : 'white'};\r\nbackground: ${props => props.active ? 'white' : 'radial-gradient(97.57% 210.75% at 0.9% 2.98%, rgba(0, 0, 0, 0.4) 0%, rgba(0, 0, 0, 0.4) 99.99%)'};\r\n`\r\n\r\nexport let YellowButton = styled(DefaultButton)`\r\nbackground: ${props => props.active ? '#BFB439' : 'radial-gradient(97.57% 210.75% at 0.9% 2.98%, rgba(0, 0, 0, 0.4) 0%, rgba(0, 0, 0, 0.4) 99.99%)'};\r\n`\r\n\r\nexport let GreenButton = styled(DefaultButton)`\r\nbackground: ${props => props.active ? '#36B782' : 'radial-gradient(97.57% 210.75% at 0.9% 2.98%, rgba(0, 0, 0, 0.4) 0%, rgba(0, 0, 0, 0.4) 99.99%)'};\r\n`\r\n\r\nexport let PurpleButton = styled(DefaultButton)`\r\nbackground: ${props => props.active ? '#8B3BBE' : 'radial-gradient(97.57% 210.75% at 0.9% 2.98%, rgba(0, 0, 0, 0.4) 0%, rgba(0, 0, 0, 0.4) 99.99%)'};\r\n`\r\n\r\nexport let RedButton = styled(DefaultButton)`\r\nbackground: ${props => props.active ? '#BF3339' : 'radial-gradient(97.57% 210.75% at 0.9% 2.98%, rgba(0, 0, 0, 0.4) 0%, rgba(0, 0, 0, 0.4) 99.99%)'};\r\n`","import React, {FC} from 'react'\r\nimport {\r\n    Button,\r\n    Categories,\r\n    CategoriesLine,\r\n    GreenButton,\r\n    MarginBlock,\r\n    PurpleButton,\r\n    RedButton,\r\n    YellowButton\r\n} from './style'\r\n\r\n///////////// types for props\r\ntype PropsType = {\r\n    SetShowSecondCategories: () => void\r\n    SelectAllMainCategories: () => void\r\n    SelectAllSecondCategories: () => void\r\n    ChangeMainCategory: (categoryId: number) => void\r\n    ChangeSecondCategory: (categoryId: number) => void\r\n    \r\n    showSecondCategories: boolean\r\n    mainCategoriesState: Array<boolean>\r\n    secondCategoriesState: Array<boolean>\r\n    local: Array<string>\r\n}\r\n\r\n\r\nlet ChooseCategory: FC<PropsType> = ({\r\n                                         showSecondCategories, \r\n                                         SetShowSecondCategories,\r\n                                         mainCategoriesState,\r\n                                         secondCategoriesState,\r\n                                         SelectAllMainCategories,\r\n                                         ChangeMainCategory,\r\n                                         local,\r\n                                         SelectAllSecondCategories,\r\n                                         ChangeSecondCategory\r\n}) => {\r\n\r\n\r\n    {/*@ts-ignore*/}\r\n    return <Categories active={showSecondCategories}>\r\n            {/*@ts-ignore*/}\r\n        <CategoriesLine active={showSecondCategories}>\r\n            {/*@ts-ignore*/}\r\n            <Button onClick={()=>{SelectAllMainCategories()}} active={mainCategoriesState[0]}>{local[0]}</Button>\r\n            {/*@ts-ignore*/}\r\n            <YellowButton onClick={()=>{ChangeMainCategory(1)}} active={mainCategoriesState[1]}>{local[1]}</YellowButton>\r\n            {/*@ts-ignore*/}\r\n            <GreenButton onClick={()=>{ChangeMainCategory(2)}} active={mainCategoriesState[2]}>{local[2]}</GreenButton>\r\n            {/*@ts-ignore*/}\r\n            <PurpleButton onClick={()=>{ChangeMainCategory(3)}} active={mainCategoriesState[3]}>{local[3]}</PurpleButton>\r\n            {/*@ts-ignore*/}\r\n            <RedButton onClick={()=>{ChangeMainCategory(4)}} active={mainCategoriesState[4]}>{local[4]}</RedButton>\r\n            <MarginBlock><p/></MarginBlock>\r\n        </CategoriesLine>\r\n            {/*@ts-ignore*/}\r\n        <CategoriesLine active={showSecondCategories}>\r\n            {/*@ts-ignore*/}\r\n            <Button onClick={()=>{SelectAllSecondCategories()}} active={secondCategoriesState[0]}>{local[0]}</Button>\r\n            {/*@ts-ignore*/}\r\n            <Button onClick={()=>{ChangeSecondCategory(1)}} active={secondCategoriesState[1]}>{local[5]}</Button>\r\n            {/*@ts-ignore*/}\r\n            <Button onClick={()=>{ChangeSecondCategory(2)}} active={secondCategoriesState[2]}>{local[6]}</Button>\r\n            {/*@ts-ignore*/}\r\n            <Button onClick={()=>{ChangeSecondCategory(3)}} active={secondCategoriesState[3]}>{local[7]}</Button>\r\n            {/*@ts-ignore*/}\r\n            <Button onClick={()=>{ChangeSecondCategory(4)}} active={secondCategoriesState[4]}>{local[8]}</Button>\r\n            <MarginBlock><p/></MarginBlock>\r\n        </CategoriesLine>\r\n    </Categories>\r\n}\r\n\r\n\r\nexport default ChooseCategory","///////////// Const for action creators\r\nconst SET_SHOW_SECOND_CATEGORIES = 'SET_SHOW_SECOND_CATEGORIES'\r\nconst SELECT_ALL_MAIN_CATEGORIES = 'SELECT_ALL_MAIN_CATEGORIES'\r\nconst SELECT_ALL_SECOND_CATEGORIES = 'SELECT_ALL_SECOND_CATEGORIES'\r\nconst CHANGE_MAIN_CATEGORY = 'CHANGE_MAIN_CATEGORY'\r\nconst CHANGE_SECOND_CATEGORY = 'CHANGE_SECOND_CATEGORY'\r\n\r\n///////////// Initial state\r\ntype CategoriesInitStateType = {\r\n    showSecondCategories: boolean\r\n    mainCategoriesState: Array<boolean>\r\n    secondCategoriesState: Array<boolean>\r\n}\r\n\r\nlet initialState: CategoriesInitStateType = {\r\n    showSecondCategories: true,\r\n    mainCategoriesState: [true, false, false, false, false],\r\n    secondCategoriesState: [true, false, false, false, false]\r\n}\r\n\r\n///////////// Reduser\r\nconst CategoriesReducer = (state = initialState, action: ActionsTypes): CategoriesInitStateType => {\r\n    switch (action.type) {\r\n        \r\n        case SET_SHOW_SECOND_CATEGORIES: {\r\n            return {\r\n                ...state,\r\n                showSecondCategories: !state.showSecondCategories\r\n            }\r\n        }\r\n        case SELECT_ALL_MAIN_CATEGORIES : {\r\n            return {\r\n                ...state,\r\n                mainCategoriesState: [true, false, false, false, false]\r\n            }\r\n        }\r\n        case SELECT_ALL_SECOND_CATEGORIES : {\r\n            return {\r\n                ...state,\r\n                secondCategoriesState: [true, false, false, false, false]\r\n            }\r\n        }\r\n        case CHANGE_MAIN_CATEGORY: {\r\n            \r\n            ///// set category\r\n            let newCategories = [...state.mainCategoriesState]\r\n            newCategories[action.categoryId] = !newCategories[action.categoryId]\r\n            \r\n            ///// if category is true - set false \"all\" button\r\n            if (newCategories[action.categoryId]) {\r\n                newCategories[0] = false\r\n            }\r\n            \r\n            ///// if category not choose - set true \"all\" button\r\n            if (!newCategories.includes(true)) {\r\n                newCategories[0] = true\r\n            }\r\n            \r\n            return {\r\n                ...state,\r\n                mainCategoriesState: newCategories\r\n            }\r\n        }\r\n        case CHANGE_SECOND_CATEGORY: {\r\n\r\n            ///// set category\r\n            let newCategories = [...state.secondCategoriesState]\r\n            newCategories[action.categoryId] = !newCategories[action.categoryId]\r\n\r\n            ///// if category is true - set false \"all\" button\r\n            if (newCategories[action.categoryId]) {\r\n                newCategories[0] = false\r\n            }\r\n\r\n            ///// if category not choose - set true \"all\" button\r\n            if (!newCategories.includes(true)) {\r\n                newCategories[0] = true\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                secondCategoriesState: newCategories\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n}\r\n\r\n///////////// Action creators\r\ntype ActionsTypes =\r\n    SetShowSecondCategoriesType |\r\n    SelectAllMainCategoriesType |\r\n    ChangeMainCategoryType |\r\n    SelectAllSecondCategoriesType |\r\n    ChangeSecondCategoryType\r\n\r\ntype SetShowSecondCategoriesType = {\r\n    type: typeof SET_SHOW_SECOND_CATEGORIES\r\n}\r\nexport let SetShowSecondCategories = (): SetShowSecondCategoriesType => ({type: SET_SHOW_SECOND_CATEGORIES})\r\n\r\n\r\ntype SelectAllMainCategoriesType = {\r\n    type: typeof SELECT_ALL_MAIN_CATEGORIES\r\n}\r\nexport let SelectAllMainCategories = (): SelectAllMainCategoriesType => ({type: SELECT_ALL_MAIN_CATEGORIES})\r\n\r\ntype SelectAllSecondCategoriesType = {\r\n    type: typeof SELECT_ALL_SECOND_CATEGORIES\r\n}\r\nexport let SelectAllSecondCategories = (): SelectAllSecondCategoriesType => ({type: SELECT_ALL_SECOND_CATEGORIES})\r\n\r\n\r\ntype ChangeMainCategoryType = {\r\n    type: typeof CHANGE_MAIN_CATEGORY\r\n    categoryId: number\r\n}\r\nexport let ChangeMainCategory = (categoryId: number): ChangeMainCategoryType => ({type: CHANGE_MAIN_CATEGORY, categoryId})\r\n\r\ntype ChangeSecondCategoryType = {\r\n    type: typeof CHANGE_SECOND_CATEGORY\r\n    categoryId: number\r\n}\r\nexport let ChangeSecondCategory = (categoryId: number): ChangeSecondCategoryType => ({type: CHANGE_SECOND_CATEGORY, categoryId})\r\n\r\n\r\n/////////////\r\n\r\nexport default CategoriesReducer","import React, {FC, useEffect} from 'react'\r\nimport {AppStateType} from '../../../store/store'\r\nimport {connect, ConnectedProps} from 'react-redux'\r\nimport ChooseCategory from './choose-category'\r\nimport {\r\n    ChangeMainCategory, ChangeSecondCategory,\r\n    SelectAllMainCategories,\r\n    SelectAllSecondCategories,\r\n    SetShowSecondCategories\r\n} from '../../../store/categories-reducer'\r\n\r\ntype PropsType = {\r\n    SetShowSecondCategories: () => void\r\n    SelectAllMainCategories: () => void\r\n    SelectAllSecondCategories: () => void\r\n    ChangeMainCategory: (categoryId: number) => void\r\n    ChangeSecondCategory: (categoryId: number) => void\r\n\r\n    showSecondCategories: boolean\r\n    mainCategoriesState: Array<boolean>\r\n    secondCategoriesState: Array<boolean>\r\n    local: Array<string>\r\n    upOrDownScroll: Array<boolean>\r\n}\r\n\r\nlet ChooseCategoryContainer: FC<PropsType> = ({\r\n                                                  showSecondCategories,\r\n                                                  SetShowSecondCategories,\r\n                                                  mainCategoriesState,\r\n                                                  SelectAllMainCategories,\r\n                                                  ChangeMainCategory,\r\n                                                  local,\r\n                                                  upOrDownScroll,\r\n                                                  SelectAllSecondCategories,\r\n                                                  ChangeSecondCategory,\r\n                                                  secondCategoriesState\r\n                                              }) => {\r\n    \r\n    useEffect(()=>{\r\n            SetShowSecondCategories()\r\n    },[upOrDownScroll])\r\n\r\n    \r\n    let PropsCategories = {\r\n        showSecondCategories,\r\n        SetShowSecondCategories,\r\n        mainCategoriesState,\r\n        SelectAllMainCategories,\r\n        ChangeMainCategory,\r\n        local,\r\n        SelectAllSecondCategories,\r\n        ChangeSecondCategory,\r\n        secondCategoriesState\r\n    }\r\n    \r\n        return <ChooseCategory {...PropsCategories} />\r\n    \r\n}\r\n\r\n///////////// create props for App component\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        local: state.LocalizationReducer.langData.categories,\r\n        showSecondCategories: state.CategoriesReducer.showSecondCategories,\r\n        mainCategoriesState: state.CategoriesReducer.mainCategoriesState,\r\n        secondCategoriesState: state.CategoriesReducer.secondCategoriesState\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    SetShowSecondCategories,\r\n    SelectAllMainCategories,\r\n    ChangeMainCategory,\r\n    SelectAllSecondCategories,\r\n    ChangeSecondCategory\r\n})(ChooseCategoryContainer)\r\n","import styled from 'styled-components'\r\n\r\nexport let Container = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nheight: 100%;\r\noverflow-y: scroll;\r\n`\r\n\r\nexport let Ads = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nmargin-top: 135px;\r\n`","import React, {FC, useEffect, useState} from 'react'\r\nimport ChooseCategoryContainer from '../common-components/choose-category/choose-category-container'\r\nimport {Ads, Container} from './style'\r\nimport styled from \"styled-components\";\r\n\r\n///////////// types for props\r\ntype PropsType = {\r\n}\r\n\r\n\r\nlet Block = styled.div`\r\nwidth: calc(100% - 44px);\r\nheight: 200px;\r\nbackground: black;\r\nopacity: 0.5;\r\nalign-self: center;\r\nmargin-bottom: 20px;\r\nborder-radius: 10px;\r\n`\r\n\r\n\r\n\r\nlet Main: FC<PropsType> = ({}) => {\r\n    \r\n    const [scrollPosition, setScrollPosition] = useState([0,0])\r\n    const [upOrDownScroll, setScrollState] = useState([false, false])\r\n    \r\n    let IsScroll = (e: any) => {\r\n        \r\n        if (!upOrDownScroll[0] && !upOrDownScroll[1]) {\r\n            \r\n            ///// set state when user first time scroll to down\r\n            if (scrollPosition[1] < e.target.scrollTop) {\r\n                setScrollPosition([scrollPosition[1], e.target.scrollTop])\r\n                setScrollState([true, false])\r\n            }\r\n            \r\n        } else if (upOrDownScroll[0]) {\r\n\r\n            ///// set state when user scroll to up\r\n            if (scrollPosition[1] > e.target.scrollTop) {\r\n                setScrollPosition([scrollPosition[1], e.target.scrollTop])\r\n                setScrollState([false, true])\r\n            } else {\r\n                setScrollPosition([scrollPosition[1], e.target.scrollTop])\r\n            }\r\n        \r\n        } else if (upOrDownScroll[1]) {\r\n\r\n            ///// set state when user scroll to down\r\n            if (scrollPosition[1] < e.target.scrollTop) {\r\n                setScrollPosition([scrollPosition[1], e.target.scrollTop])\r\n                setScrollState([true, false])\r\n            } else {\r\n                setScrollPosition([scrollPosition[1], e.target.scrollTop])\r\n            }\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    return <Container onScroll={(e: any)=>{IsScroll(e)}}>\r\n    <ChooseCategoryContainer upOrDownScroll={upOrDownScroll} />\r\n    <Ads>\r\n        <Block><p></p></Block>\r\n        <Block><p></p></Block>\r\n        <Block><p></p></Block>\r\n        <Block><p></p></Block>\r\n        <Block><p></p></Block>\r\n        <Block><p></p></Block>   \r\n    </Ads>\r\n    </Container>\r\n}\r\n\r\n\r\nexport default Main","import React, {FC} from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {AppStateType} from '../../store/store'\r\nimport {connect, ConnectedProps} from 'react-redux'\r\nimport Main from './main'\r\nimport {getCookie} from '../../services/cookies_functions'\r\n\r\ntype PropsType = ConnectedProps<typeof connector>\r\n\r\nlet MainContainer: FC<PropsType> = ({}) => {\r\n\r\n    if (getCookie('isReadInstruction') !== 'true') {\r\n        return <Main/>\r\n    } else {\r\n        return <Redirect to={'/instruction'} />\r\n    }\r\n    \r\n}\r\n\r\n///////////// create props for App component\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst connector = connect(mapStateToProps, {})\r\nexport default connector(MainContainer)\r\n","import styled from 'styled-components'\r\nimport {DefaultButtonStyles, TextInputStyle} from '../../app-styled-components'\r\nimport {Field} from 'react-final-form'\r\n\r\nexport let FormBox = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n`\r\n\r\nexport let InputText = styled(Field)`\r\n${TextInputStyle}\r\nmargin-top: 30px;\r\n`\r\n\r\nexport let SubmitButton = styled.button`\r\n${DefaultButtonStyles}\r\nmargin-top: 60px;\r\nmargin-bottom: 60px;\r\n`\r\n\r\nexport let LoadButton = styled.div`\r\n${DefaultButtonStyles}\r\nmargin-top: 60px;\r\nmargin-bottom: 60px;\r\n`\r\n\r\nexport {}","// @ts-ignore\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\n// @ts-ignore\r\nconst InputField = ({input, meta, ...props}) => {\r\n\r\n    let hasError = meta.touched && meta.error\r\n\r\n    return <FieldContainer>\r\n        <input\r\n            {...input}\r\n            {...props}\r\n        />\r\n        {hasError && <ErrorSpan>{meta.error}</ErrorSpan>}\r\n    </FieldContainer>\r\n}\r\n\r\nexport default InputField\r\n\r\n\r\nlet FieldContainer = styled.div`\r\n    width: inherit;\r\n    height: inherit;\r\n    position: relative;\r\n   display: flex;\r\n    justify-content: center;\r\n`\r\n\r\nlet ErrorSpan = styled.span`\r\nposition: absolute;\r\n    color: red;\r\n    bottom: -20px;\r\n`","/*\r\nFile contains functions for validation fields in forms.\r\n */\r\n\r\nexport const required = (value: any) => (value ? undefined : \"Обов'язкове поле\")\r\nexport const numberQuantity = (number: any) => (value: any) => (\r\n    value.length === number ? undefined : `Не верный формат`\r\n)\r\n\r\n\r\nexport const minLength = (number: any) => (value: any) => {\r\n    if (value) {\r\n        return value.length >= number ? undefined : `Минимальное количество символов ${number}`\r\n    }\r\n}\r\n    \r\n\r\n\r\nexport const maxLength = (number: any) => (value: any) => {\r\n    if (value) {\r\n       return  value.length <= number ? undefined : `Максимальное количество символов ${number}`\r\n    }\r\n}\r\n\r\n\r\nexport const composeValidators = (...validators: any) => (value: any) =>\r\n    validators.reduce((error: any, validator: any) => error || validator(value), undefined)","export default __webpack_public_path__ + \"static/media/preloader.d8588b2b.svg\";","import React, {FC} from 'react'\r\nimport styled from 'styled-components'\r\nimport preloader from '../../../images/preloader.svg'\r\n\r\ntype PropsType = {\r\n    full: boolean\r\n    height?: number\r\n}\r\n\r\nlet Preloader: FC<PropsType> = ({full, height = '150' }) => {\r\n\r\nif (full) {\r\n    return <BackgroundPreloader>\r\n        {/*// @ts-ignore*/}\r\n        <PreloaderContainer height={height}>\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </PreloaderContainer>\r\n    </BackgroundPreloader>\r\n} else {\r\n    // @ts-ignore\r\n    return <PreloaderContainer height={height}>\r\n        <img src={preloader} alt=\"preloader\"/>\r\n    </PreloaderContainer>\r\n}}\r\n\r\nlet PreloaderContainer = styled.div`\r\n\r\nheight: ${(props: any) => {return props.height + 'px'}};\r\nimg {\r\nwidth: inherit;\r\nheight: inherit;\r\nborder-radius: 100%;\r\n}\r\n`\r\n\r\nlet BackgroundPreloader = styled.div`\r\nheight: 100%;\r\nwidth: 100%;\r\njustify-content: center;\r\nalign-items: center;\r\ndisplay: flex;\r\nbackground: linear-gradient(90deg, #6D4BCE 0%, #4398B6 100%);\r\n`\r\n\r\nexport default Preloader\r\n","export default __webpack_public_path__ + \"static/media/avatar.80455780.png\";","import {Field} from 'react-final-form'\r\nimport React, {FC, useRef, useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport avatarIcon from '../../../images/avatar.png'\r\nimport {DefaultButtonStyles} from '../../../app-styled-components'\r\nimport {AppStateType} from '../../../store/store'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\ntype PropsType = {\r\n    local: Array<string>\r\n}\r\n\r\nconst UploadAvatar: FC<PropsType> = ({local}) => {\r\n    \r\n    ///// uploads images\r\n    const [stateImg, setStateImg]: any = useState({\r\n        files: []\r\n    })\r\n\r\n    ///// ref for upload input\r\n    const fileInput: any = useRef(null)\r\n    ///// function make click to input when upload button clicked\r\n    const clickToUpload = () => {\r\n        fileInput.current.click()\r\n    }\r\n\r\n    return <ImgFieldContainer>\r\n        <ImgField>\r\n        <Field name='avatar'>\r\n            {({input: {value, onChange, ...input}}) => {\r\n                const handleChange = ({target}: React.ChangeEvent<HTMLInputElement>) => {\r\n                    onChange(target.files)\r\n                    let imgArray = []\r\n                    if (target.files !== null) {\r\n                        for (let i = 0; i < target.files.length; i++) {\r\n                            imgArray.push(URL.createObjectURL(target.files[i]))\r\n                        }\r\n                    }\r\n                    \r\n                    setStateImg({\r\n                        files: imgArray\r\n                    })\r\n                }\r\n                return <input {...input} type=\"file\" ref={fileInput} onChange={handleChange}/>\r\n            }}\r\n        </Field>\r\n        </ImgField>\r\n        <ImageContainer>\r\n            {stateImg.files.length === 0\r\n            ? <Photo src={avatarIcon} alt={local[0]} />\r\n            : <Photo src={stateImg.files?.[0]} alt={local[0]} />}\r\n            <DownloadPhotoButton onClick={()=> {clickToUpload()}}>{local[1]}</DownloadPhotoButton>\r\n        </ImageContainer>\r\n    </ImgFieldContainer>\r\n}\r\n\r\n\r\n///////////// create props for App component\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        local: state.LocalizationReducer.langData.auth_page,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(UploadAvatar)\r\n\r\n\r\nlet DownloadPhotoButton = styled.div`\r\n${DefaultButtonStyles}\r\nmargin-top: 67px;\r\n`\r\n\r\nlet Photo = styled.img`\r\nheight: 127px;\r\nwidth: 127px;\r\nbox-shadow: 0px 0px 40px 1px rgba(0, 0, 0, 0.21);\r\nborder-radius: 100%;\r\nmargin-top: 86px;\r\n`\r\n\r\nlet ImgFieldContainer = styled.div`\r\nwidth: 100%;\r\n`\r\n\r\nlet ImgField = styled.div`\r\ndisplay: none;\r\n`\r\n\r\nlet ImageContainer = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\n`","import React, {FC} from 'react'\r\nimport {Page} from '../../app-styled-components'\r\nimport {FormBox, InputText, LoadButton, SubmitButton} from './style'\r\nimport {Form} from 'react-final-form'\r\nimport InputField from '../common-components/fields/input-field'\r\nimport {composeValidators, required} from '../../services/validations'\r\nimport {AuthDataType} from '../../types/types'\r\nimport Preloader from '../common-components/preloader/preloader'\r\nimport UploadAvatar from '../common-components/fields/upload-avatar'\r\n\r\n///////////// types for props\r\ntype PropsType = {\r\n    onSubmit: (formData: AuthDataType) => void\r\n    \r\n    isLoadNewUser: boolean\r\n    local: Array<string>\r\n}\r\n\r\n\r\nlet Auth: FC<PropsType> = ({\r\n                               local,\r\n                               onSubmit, \r\n                               isLoadNewUser\r\n}) => {\r\n\r\n    return <Page>\r\n        <Form onSubmit={onSubmit}\r\n              render={({handleSubmit}) => (\r\n                  <FormBox onSubmit={handleSubmit}>\r\n                      <UploadAvatar/>\r\n                      <InputText\r\n                          validate={composeValidators(required)} \r\n                          name='name'\r\n                          component={InputField}\r\n                          placeholder={local[2]}\r\n                      />\r\n                      <InputText\r\n                          name='phone'\r\n                          component={InputField}\r\n                          placeholder={local[3]}\r\n                      />\r\n                      \r\n                      {isLoadNewUser\r\n                      ? <LoadButton><Preloader full={false} height={40}/></LoadButton>\r\n                      : <SubmitButton type='submit'>{local[4]}</SubmitButton>}\r\n                  </FormBox>\r\n              )}\r\n        />\r\n    </Page>\r\n}\r\n\r\n\r\nexport default Auth","import React, {FC, useEffect} from 'react'\r\nimport {AppStateType} from '../../store/store'\r\nimport {connect, ConnectedProps} from 'react-redux'\r\nimport Auth from './auth'\r\nimport {AddNewUserThunk, CleanState, ToggleLoadSubmit} from '../../store/auth-reducer'\r\nimport {AuthDataType} from '../../types/types'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n///////////// types for props\r\ntype PropsType = PropsFromRedux\r\n// types takes from connect() where added mapStateToProps and mapDispatchToProps\r\ntype PropsFromRedux = ConnectedProps<typeof connector>\r\n\r\n\r\nlet AuthContainer: FC<PropsType> = ({\r\n                                        local,\r\n                                        AddNewUserThunk, \r\n                                        ToggleLoadSubmit, \r\n                                        isLoadNewUser, \r\n                                        CleanState,\r\n                                        isRedirectToMainPage\r\n}) => {\r\n    \r\n    useEffect(()=>{\r\n        return ()=>{CleanState()}\r\n    },[])\r\n    \r\n    const onSubmit = (formData: AuthDataType) => {\r\n        AddNewUserThunk(formData)\r\n        ToggleLoadSubmit()\r\n    }\r\n    \r\n    let AuthProps = {\r\n        isLoadNewUser,\r\n        onSubmit,\r\n        local\r\n    }\r\n    \r\n    if (isRedirectToMainPage) {\r\n        return <Redirect to='/' />\r\n    } else {\r\n        return <Auth {...AuthProps}/>\r\n    }\r\n    \r\n}\r\n\r\n///////////// create props for App component\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        local: state.LocalizationReducer.langData.auth_page,\r\n        isLoadNewUser: state.AuthReducer.isLoadNewUser,\r\n        isRedirectToMainPage: state.AuthReducer.isRedirectToMainPage\r\n    }\r\n}\r\n\r\nconst connector = connect(mapStateToProps, { AddNewUserThunk, ToggleLoadSubmit, CleanState })\r\nexport default connector(AuthContainer)\r\n","// @ts-ignore\r\nexport let generatorId = (): string => ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,c=>(c^crypto.getRandomValues(new Uint8Array(1))[0]&15 >> c/4).toString(16))","import React, {FC} from 'react'\r\n\r\n///////////// types for props\r\ntype PropsType = {\r\n}\r\n\r\n\r\nlet Instruction: FC<PropsType> = ({}) => {\r\n\r\n    return <>\r\n    <h1>Інструкція</h1>\r\n    </>\r\n}\r\n\r\n\r\nexport default Instruction","import './app-styles.css'\nimport {Container, FullScreenBlock} from './app-styled-components'\nimport React, {FC, useEffect, useState} from 'react'\nimport {developerFun} from './services/developer_functions'\nimport {getCookie} from './services/cookies_functions'\nimport {AppStateType} from './store/store'\nimport {connect, ConnectedProps} from 'react-redux'\nimport {SetUser} from './store/auth-reducer'\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport PrivateRoute from './HOC/private-route'\nimport MainContainer from './components/main-page/main-container'\nimport AuthContainer from './components/auth-page/auth-container'\nimport Instruction from './components/instruction-page/instruction'\nimport Preloader from './components/common-components/preloader/preloader'\n\ntype PropsType = ConnectedProps<typeof connector>\n\nlet App: FC<PropsType> = ({ isRegistered, SetUser, local }) => {\n    \n    useEffect(()=>{\n        ///// cookies\n        if (getCookie('registered') === 'true' && isRegistered === null) {\n            let userData = {\n                isRegistered: true,\n                name: getCookie('user'),\n                idUser: getCookie('idUser'),\n                phone: getCookie('phone'),\n                avatar: getCookie('avatar')\n            }\n            SetUser(userData)\n        } else {\n            let userData = {\n                isRegistered: false,\n                name: null,\n                idUser: null,\n                phone: null,\n                avatar: null\n            }\n            SetUser(userData)\n        }\n    },[])\n    \n    ///// developer delete cookies button CTRL and ALT get state\n    developerFun()\n    \n    ///// for dynamic height\n    const [height, setHeight] = useState(window.innerHeight)\n    // @ts-ignore\n    useEffect(() => {\n        function handleResize() {\n            setHeight(window.innerHeight)\n        }\n\n        window.addEventListener('resize', handleResize)\n        return (_: any) => {\n            window.removeEventListener('resize', handleResize)\n        }\n    })\n\n    // @ts-ignore\n    return <BrowserRouter><Container height={height}>\n        {isRegistered === null\n        ? <Preloader full />\n        : <>\n                <Route path='/login' exact render={() =><AuthContainer />}/>\n                <Route path='/instruction' exact render={() =><Instruction />}/>\n                <Route path='/' exact render={()=> <PrivateRoute component={MainContainer} auth={isRegistered}/>}/>\n            </>} \n            \n    </Container>\n        {/*@ts-ignore*/}\n        <FullScreenBlock height={height}>\n            <h2>{local[0]}<br/>{local[1]}</h2>\n        </FullScreenBlock>\n    </BrowserRouter>\n}\n\n///////////// create props for App component\nlet mapStateToProps = (state: AppStateType) => {\n    return {\n        isRegistered: state.AuthReducer.isRegistered,\n        local: state.LocalizationReducer.langData.common\n    }\n}\n\nconst connector = connect(mapStateToProps, { SetUser })\nexport default connector(App)\n","import { deleteCookie } from './cookies_functions'\r\n\r\nexport let developerFun = (): void => {\r\n    document.addEventListener('keydown', function (event) {\r\n        if (event.ctrlKey) {\r\n          deleteCookie('registered')\r\n          deleteCookie('user')\r\n          deleteCookie('idUser')\r\n        }\r\n      })\r\n      document.addEventListener('keydown', function (event) {\r\n        if (event.altKey) {\r\n    // @ts-ignore\r\n            console.log(window.store.getState())\r\n        }\r\n      })\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","///// localization object\r\nexport const Localization = {\r\n    UA: {\r\n        langId: 1,\r\n        langData: {\r\n            common: [\r\n                \"Підтримка широких екранів відсутня.\",\r\n                \"Користуйтесь телефоном або звузьте вікно браузера.\"\r\n            ],\r\n            auth_page: [\r\n                \"аватар\",\r\n                \"завантажити фото\",\r\n                \"ім’я (обов’язково*)\",\r\n                \"телефон\",\r\n                \"погнали!\"\r\n            ],\r\n            categories: [\r\n                \"всі\",\r\n                \"об'ява\",\r\n                \"куплю\",\r\n                \"продам\",\r\n                \"обміняю\",\r\n                \"їжа\",\r\n                \"напої\",\r\n                \"квитки\",\r\n                \"інше\"\r\n            ]\r\n        }\r\n    }\r\n}","import {Localization} from '../config'\r\n\r\n///////////// Const for action creators\r\n\r\n\r\n///////////// Initial state\r\ntype LocalizationInitStateType = {\r\n    currentLangId: typeof Localization.UA.langId,\r\n    langData: typeof Localization.UA.langData\r\n}\r\n\r\nlet initialState: LocalizationInitStateType = {\r\n    currentLangId: Localization.UA.langId,\r\n    langData: Localization.UA.langData\r\n}\r\n\r\n///////////// Reduser\r\nconst LocalizationReducer = (state = initialState, action: ActionsTypes): LocalizationInitStateType => {\r\n    switch (action.type) {\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n}\r\n\r\n///////////// Action creators\r\ntype ActionsTypes = any\r\n\r\n/////////////\r\n\r\nexport default LocalizationReducer","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport AuthReducer from './auth-reducer'\r\nimport LocalizationReducer from './localization-reducer'\r\nimport CategoriesReducer from './categories-reducer'\r\n\r\nlet redusers = combineReducers(\r\n    {\r\n        LocalizationReducer,\r\n        AuthReducer,\r\n        CategoriesReducer\r\n    })\r\n\r\ntype ReducersType = typeof redusers\r\nexport type AppStateType = ReturnType<ReducersType>\r\n\r\n///// create store and added middleware for thanks\r\nconst store = createStore(redusers, applyMiddleware(thunkMiddleware))\r\n\r\n// @ts-ignore // for view info in devtools\r\nwindow.store = store\r\n\r\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport {Provider} from 'react-redux'\nimport store from './store/store'\n\nReactDOM.render(<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}