{"version":3,"sources":["app-styled-components.ts","services/cookies_functions.ts","api/main-api.ts","store/auth-reducer.ts","HOC/private-route.tsx","components/main-page/main.tsx","components/main-page/main-container.tsx","components/auth-page/style.js","images/avatar.png","components/common-components/fields/input-field.tsx","services/validations.ts","images/preloader.svg","components/common-components/preloader/preloader.tsx","components/auth-page/auth.tsx","components/auth-page/auth-container.tsx","services/generator_id.ts","components/instruction-page/instruction.tsx","App.tsx","services/developer_functions.ts","reportWebVitals.js","store/store.ts","index.tsx"],"names":["Container","styled","div","props","height","FullScreenBlock","Page","DefaultButtonStyles","getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","setCookie","value","options","path","expires","Date","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue","deleteCookie","AddUserDataCookie","userData","idUser","phone","console","log","isRegistered","instance","axios","create","baseURL","MainApi","GetAds","userId","get","GetMyAds","DeleteAd","adId","AddNewUser","post","AddNewAd","adData","put","EditAd","SET_AUTH_USER_DATA","SET_AUTH_USER_DATA_AND_REDIRECT","TOGGLE_LOADER_SUBMIT","CLEAN_STATE","initialState","isLoadNewUser","isRedirectToMainPage","SetUserAndRedirect","type","AuthReduser","state","action","newState","newValue","PrivateRoute","Component","component","auth","to","Main","connect","Photo","img","DownloadPhotoButton","FormBox","form","InputText","Field","SubmitButton","button","LoadButton","InputField","input","meta","hasError","touched","error","FieldContainer","ErrorSpan","span","required","undefined","composeValidators","validators","reduce","validator","PreloaderContainer","BackgroundPreloader","Preloader","full","src","preloader","alt","Auth","onSubmit","render","handleSubmit","avatarIcon","validate","placeholder","connector","AddNewUserThunk","formData","dispatch","a","c","crypto","getRandomValues","Uint8Array","toString","data","ToggleLoadSubmit","CleanState","useEffect","Instruction","SetUser","addEventListener","event","ctrlKey","altKey","window","store","getState","useState","innerHeight","setHeight","handleResize","_","removeEventListener","exact","MainContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","redusers","combineReducers","createStore","applyMiddleware","thunkMiddleware","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.e64cb802.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport {Field} from 'react-final-form'\r\n\r\nexport let Container = styled.div`\r\nheight: ${(props: any) => {\r\n    return props.height + 'px'\r\n}};\r\nbackground: linear-gradient(90deg, #6D4BCE 0%, #4398B6 100%);\r\nmax-width: 586px;\r\nwidth: 100%;\r\ndisplay: inline-block;\r\n\r\n@media (min-width: 586px) {\r\ndisplay: none;\r\n}\r\n`\r\n\r\nexport let FullScreenBlock = styled.div`\r\nheight: ${(props: any) => {\r\n    return props.height + 'px'\r\n}};\r\nbackground: linear-gradient(90deg, #6D4BCE 0%, #4398B6 100%);\r\nwidth: 100%;\r\ndisplay: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\nh2 {\r\n\r\n}\r\n\r\n@media (max-width: 586px) {\r\ndisplay: none;\r\n}\r\n`\r\n\r\nexport let Page = styled.div`\r\n    display: flex;\r\n    height: 100%;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n        overflow-y: overlay;\r\n`\r\n\r\nexport let DefaultButtonStyles = `\r\nwidth: calc(100% - 83px);\r\nmin-width: 250px;\r\nheight: 66px;\r\nbackground: #000000;\r\nborder-radius: 49px;\r\ncolor: #FFFFFF;\r\nfont-weight: 800;\r\nfont-size: 20px;\r\ntext-transform: uppercase;\r\ncursor: pointer;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\noutline: none;\r\nborder: none;\r\n`\r\n\r\nexport let TextInputStyle = `\r\nbackground: none;\r\n    outline: none;\r\n    border: 3px solid rgba(0, 0, 0, 0.8);\r\n    border-radius: 49px;\r\n    height: 66px;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 84px);\r\n    min-width: 250px;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    font-style: normal;\r\nfont-weight: normal;\r\nfont-size: 20px;\r\nline-height: 52px;\r\ncolor: rgba(255, 255, 255, 0.7);\r\n    \r\n    ::placeholder {\r\nfont-style: normal;\r\nfont-weight: normal;\r\nfont-size: 20px;\r\nline-height: 52px;\r\ncolor: rgba(255, 255, 255, 0.7);\r\ntext-transform: uppercase;\r\ntransition: 0.25s;\r\n    }\r\n   \r\n:focus::placeholder {\r\ncolor: rgba(255, 255, 255, 0.0);\r\n}\r\n`","import {InitialStateAndUserDataType} from '../types/types'\r\n\r\nexport let getCookie = (name: string): string | null => {\r\n    let matches: any = document.cookie.match(new RegExp(\r\n        \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n    ))\r\n    return matches ? decodeURIComponent(matches[1]) : null\r\n}\r\n\r\nexport let setCookie = (name: string, value: string | boolean, options: any = {}): void => {\r\n\r\n    options = {\r\n        path: '/',\r\n        'max-age': 3600 * 24 * 365,\r\n        // secure: true,\r\n        // httpOnly: true,\r\n        ...options\r\n    }\r\n\r\n    if (options.expires instanceof Date) {\r\n        options.expires = options.expires.toUTCString()\r\n    }\r\n\r\n    let updatedCookie = encodeURIComponent(name) + \"=\" + encodeURIComponent(value)\r\n\r\n    for (let optionKey in options) {\r\n        updatedCookie += \"; \" + optionKey\r\n        let optionValue = options[optionKey]\r\n        if (optionValue !== true) {\r\n            updatedCookie += \"=\" + optionValue\r\n        }\r\n    }\r\n\r\n    document.cookie = updatedCookie\r\n}\r\n\r\nexport let deleteCookie = (name: string): void => {\r\n    setCookie(name, \"\", {\r\n      'max-age': -1\r\n    })\r\n  }\r\n\r\nexport let AddUserDataCookie = (userData: any) => {\r\n    if (userData.name != null && userData.idUser != null) {\r\n        \r\n        setCookie('user', userData.name)\r\n        setCookie('idUser', userData.idUser)\r\n        if (userData.phone) {\r\n            setCookie('phone', userData.phone)\r\n        }\r\n    \r\n    }\r\n    else {\r\n        console.log('Error: Cookies not added.')\r\n    }\r\n    \r\n\r\n    if (userData.isRegistered) {\r\n        setCookie('registered', 'true')\r\n    }\r\n    else {\r\n        setCookie('registered', 'false')\r\n    }\r\n  }","import axios from 'axios'\r\nimport {AdDataType, InitialStateAndUserDataType} from '../types/types'\r\nimport {generatorId} from \"../services/generator_id\";\r\n\r\nconst instance = axios.create({ baseURL: 'https://gebo-app.herokuapp.com/' })\r\n// http://localhost:2000/\r\n// https://gebo-app.herokuapp.com/\r\n\r\nconst MainApi = {\r\n    GetAds(userId: string) {\r\n        return instance.get(`get-ads/${userId}`)\r\n    },\r\n    GetMyAds(userId: string) {\r\n        return instance.get(`get-my-ads/${userId}`)\r\n    },\r\n    DeleteAd(adId: string) {\r\n        return instance.get(`delete-ad/${adId}`)\r\n    },\r\n    AddNewUser(userData: AddNewUserType) {\r\n        return instance.post(`add-new-user`, { userData: userData })\r\n    },\r\n    AddNewAd(adData: AdDataType) {\r\n        return instance.put(`add-new-ad`, { adData: adData })\r\n    },\r\n    EditAd(adData: AdDataType) {\r\n        return instance.put(`edit-ad`, { adData: adData })\r\n    }\r\n}\r\n\r\n\r\ntype AddNewUserType = {\r\n    isRegistered: boolean\r\n    name: string\r\n    idUser: string\r\n    phone?: string\r\n}\r\n\r\nexport default MainApi","import {AxiosResponse} from 'axios'\r\nimport {ThunkAction} from 'redux-thunk'\r\nimport {AppStateType} from './store'\r\nimport MainApi from '../api/main-api'\r\nimport {AddUserDataCookie, getCookie} from '../services/cookies_functions'\r\nimport {InitialStateAndUserDataType, LoginFormDataType} from '../types/types'\r\nimport {generatorId} from '../services/generator_id'\r\n\r\n///////////// Const for actioncreators\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA'\r\nconst SET_AUTH_USER_DATA_AND_REDIRECT = 'SET_AUTH_USER_DATA_AND_REDIRECT'\r\nconst TOGGLE_LOADER_SUBMIT = 'TOOGLE_LOADER_SUBMIT'\r\nconst CLEAN_STATE = 'CLEAN_STATE'\r\n\r\n///////////// Initial state\r\nlet initialState: InitialStateAndUserDataType = {\r\n    isRegistered: null,\r\n    name: null,\r\n    phone: null,\r\n    idUser: null,\r\n    isLoadNewUser: false,\r\n    isRedirectToMainPage: false\r\n}\r\n\r\n///////////// Reduser\r\nconst AuthReduser = (state = initialState, action: ActionsTypes): InitialStateAndUserDataType => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA: {\r\n            \r\n            let newState = {\r\n                ...state,\r\n                isRegistered: action.userData.isRegistered,\r\n                name: action.userData.name,\r\n                idUser: action.userData.idUser\r\n            } \r\n            \r\n            if (action.userData.phone) {\r\n                newState.phone = action.userData.phone\r\n            }\r\n            \r\n            return newState\r\n        }\r\n        case TOGGLE_LOADER_SUBMIT:{\r\n            \r\n            let newValue = true\r\n            if (state.isLoadNewUser) {\r\n                newValue = false\r\n            }\r\n            \r\n            return {\r\n                ...state,\r\n                isLoadNewUser: newValue\r\n            }\r\n        }\r\n        case SET_AUTH_USER_DATA_AND_REDIRECT: {\r\n            let newState = {\r\n                ...state,\r\n                isRegistered: action.userData.isRegistered,\r\n                name: action.userData.name,\r\n                idUser: action.userData.idUser,\r\n                isLoadNewUser: false,\r\n                isRedirectToMainPage: true\r\n            }\r\n\r\n            if (action.userData.phone) {\r\n                newState.phone = action.userData.phone\r\n            }\r\n\r\n            return newState\r\n        }\r\n        case CLEAN_STATE: {\r\n            \r\n            return {\r\n                ...state,\r\n                isLoadNewUser: false,\r\n                isRedirectToMainPage: false\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n}\r\n\r\n///////////// Actioncreators\r\n// actions types\r\ntype ActionsTypes = \r\n    SetUserType |\r\n    ToggleLoadSubmitType |\r\n    SetUserAndRedirectType |\r\n    CleanStateType\r\n//\r\n\r\ntype CleanStateType = {\r\n    type: typeof CLEAN_STATE\r\n}\r\n\r\nexport let CleanState = ():CleanStateType => ({type: CLEAN_STATE})\r\n\r\ntype ToggleLoadSubmitType = {\r\n    type: typeof TOGGLE_LOADER_SUBMIT\r\n}\r\n\r\nexport let ToggleLoadSubmit = (): ToggleLoadSubmitType => ({type: TOGGLE_LOADER_SUBMIT})\r\n\r\n\r\ntype SetUserType = {\r\n    type: typeof SET_AUTH_USER_DATA\r\n    userData: UserDataType\r\n}\r\ntype UserDataType = {\r\n    isRegistered: boolean\r\n    name: string | null\r\n    idUser: string | null\r\n    phone?: string | null\r\n}\r\nexport let SetUser = (userData: UserDataType): SetUserType => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    userData: userData\r\n})\r\n\r\ntype SetUserAndRedirectType = {\r\n    type: typeof SET_AUTH_USER_DATA_AND_REDIRECT\r\n    userData: UserDataType\r\n}\r\nlet SetUserAndRedirect = (userData: UserDataType): SetUserAndRedirectType => ({type: SET_AUTH_USER_DATA_AND_REDIRECT, userData})\r\n\r\n///////////// Thanks\r\n// types for thunks\r\ntype ThunkActions = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>\r\n//\r\nexport let AddNewUserThunk = (formData: LoginFormDataType): ThunkActions => async (dispatch) => {\r\n\r\n    let userData: any = { \r\n        isRegistered: true, \r\n        name: formData.name,\r\n        idUser: generatorId()\r\n    }\r\n    if (formData.phone && formData.phone !== '') {\r\n        userData.phone = formData.phone\r\n    }\r\n\r\n    let response: AxiosResponse<string> = await MainApi.AddNewUser(userData)\r\n\r\n    if (response.data == 'OK') {\r\n        AddUserDataCookie(userData)\r\n        dispatch(SetUserAndRedirect(userData))\r\n    }\r\n    else {\r\n        console.log('AddNewUserThunk error.')\r\n    }\r\n}\r\n/////////////\r\n\r\nexport default AuthReduser","import React, {FC} from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\ntype PropsType = {\r\n    component: FC\r\n    auth: boolean | null\r\n}\r\nconst PrivateRoute: FC<PropsType> = ({ component: Component, auth}) => {\r\n\r\n    return <>\r\n        {auth\r\n            ? <Component />\r\n            : <Redirect to=\"/login\" />}\r\n    </>\r\n\r\n}\r\n\r\nexport default PrivateRoute","import React, {FC} from 'react'\r\n\r\n///////////// types for props\r\ntype PropsType = {\r\n}\r\n\r\n\r\nlet Main: FC<PropsType> = ({}) => {\r\n\r\n    return <>\r\n    <h1>Головна</h1>\r\n    </>\r\n}\r\n\r\n\r\nexport default Main","import React, {FC} from 'react'\r\nimport {AppStateType} from '../../store/store'\r\nimport {connect} from 'react-redux'\r\nimport Main from './main'\r\n\r\n\r\n///////////// types for props\r\ntype PropsType = {\r\n}\r\n\r\n\r\nlet MainContainer: FC<PropsType> = ({}) => {\r\n\r\n    return <Main/>\r\n}\r\n\r\n///////////// create props for App component\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(MainContainer)\r\n","import styled from 'styled-components'\r\nimport {DefaultButtonStyles, TextInputStyle} from '../../app-styled-components'\r\nimport {Field} from 'react-final-form'\r\n\r\nexport let Photo = styled.img`\r\nheight: 127px;\r\nwidth: 127px;\r\nbox-shadow: 0px 0px 40px 1px rgba(0, 0, 0, 0.21);\r\nborder-radius: 100%;\r\nmargin-top: 86px;\r\n`\r\n\r\nexport let DownloadPhotoButton = styled.div`\r\n${DefaultButtonStyles}\r\nmargin-top: 67px;\r\n`\r\n\r\nexport let FormBox = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n`\r\n\r\nexport let InputText = styled(Field)`\r\n${TextInputStyle}\r\nmargin-top: 30px;\r\n`\r\n\r\nexport let SubmitButton = styled.button`\r\n${DefaultButtonStyles}\r\nmargin-top: 60px;\r\nmargin-bottom: 60px;\r\n`\r\n\r\nexport let LoadButton = styled.div`\r\n${DefaultButtonStyles}\r\nmargin-top: 60px;\r\nmargin-bottom: 60px;\r\n`\r\n\r\nexport {}","export default __webpack_public_path__ + \"static/media/avatar.80455780.png\";","// @ts-ignore\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\n// @ts-ignore\r\nconst InputField = ({input, meta, ...props}) => {\r\n\r\n    let hasError = meta.touched && meta.error\r\n\r\n    return <FieldContainer>\r\n        <input\r\n            {...input}\r\n            {...props}\r\n        />\r\n        {hasError && <ErrorSpan>{meta.error}</ErrorSpan>}\r\n    </FieldContainer>\r\n}\r\n\r\nexport default InputField\r\n\r\n\r\nlet FieldContainer = styled.div`\r\n    width: inherit;\r\n    height: inherit;\r\n    position: relative;\r\n   display: flex;\r\n    justify-content: center;\r\n`\r\n\r\nlet ErrorSpan = styled.span`\r\nposition: absolute;\r\n    color: red;\r\n    bottom: -20px;\r\n`","/*\r\nFile contains functions for validation fields in forms.\r\n */\r\n\r\nexport const required = (value: any) => (value ? undefined : \"Обов'язкове поле\")\r\nexport const numberQuantity = (number: any) => (value: any) => (\r\n    value.length === number ? undefined : `Не верный формат`\r\n)\r\n\r\n\r\nexport const minLength = (number: any) => (value: any) => {\r\n    if (value) {\r\n        return value.length >= number ? undefined : `Минимальное количество символов ${number}`\r\n    }\r\n}\r\n    \r\n\r\n\r\nexport const maxLength = (number: any) => (value: any) => {\r\n    if (value) {\r\n       return  value.length <= number ? undefined : `Максимальное количество символов ${number}`\r\n    }\r\n}\r\n\r\n\r\nexport const composeValidators = (...validators: any) => (value: any) =>\r\n    validators.reduce((error: any, validator: any) => error || validator(value), undefined)","export default __webpack_public_path__ + \"static/media/preloader.d8588b2b.svg\";","import React, {FC} from 'react'\r\nimport styled from 'styled-components'\r\nimport preloader from '../../../images/preloader.svg'\r\n\r\ntype PropsType = {\r\n    full: boolean\r\n    height?: number\r\n}\r\n\r\nlet Preloader: FC<PropsType> = ({full, height = '150' }) => {\r\n\r\nif (full) {\r\n    return <BackgroundPreloader>\r\n        {/*// @ts-ignore*/}\r\n        <PreloaderContainer height={height}>\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </PreloaderContainer>\r\n    </BackgroundPreloader>\r\n} else {\r\n    // @ts-ignore\r\n    return <PreloaderContainer height={height}>\r\n        <img src={preloader} alt=\"preloader\"/>\r\n    </PreloaderContainer>\r\n}}\r\n\r\nlet PreloaderContainer = styled.div`\r\n\r\nheight: ${(props: any) => {return props.height + 'px'}};\r\nimg {\r\nwidth: inherit;\r\nheight: inherit;\r\nborder-radius: 100%;\r\n}\r\n`\r\n\r\nlet BackgroundPreloader = styled.div`\r\nheight: 100%;\r\nwidth: 100%;\r\njustify-content: center;\r\nalign-items: center;\r\ndisplay: flex;\r\nbackground: linear-gradient(90deg, #6D4BCE 0%, #4398B6 100%);\r\n`\r\n\r\nexport default Preloader\r\n","import React, {FC, useState} from 'react'\r\nimport {Page} from '../../app-styled-components'\r\nimport {DownloadPhotoButton, FormBox, InputText, LoadButton, Photo, SubmitButton} from './style'\r\nimport avatarIcon from '../../images/avatar.png'\r\nimport {Form} from 'react-final-form'\r\nimport InputField from '../common-components/fields/input-field'\r\nimport {composeValidators, required} from '../../services/validations'\r\nimport {LoginFormDataType} from '../../types/types'\r\nimport Preloader from '../common-components/preloader/preloader'\r\n\r\n///////////// types for props\r\ntype PropsType = {\r\n    onSubmit: (formData: LoginFormDataType) => void\r\n\r\n    isLoadNewUser: boolean\r\n}\r\n\r\n\r\nlet Auth: FC<PropsType> = ({\r\n                               onSubmit, \r\n                               isLoadNewUser\r\n}) => {\r\n\r\n    return <Page>\r\n        <Form onSubmit={onSubmit}\r\n              render={({handleSubmit}) => (\r\n                  <FormBox onSubmit={handleSubmit}>\r\n                      <Photo src={avatarIcon} alt='avatar' />\r\n                      <DownloadPhotoButton>завантажити фото</DownloadPhotoButton>\r\n                      <InputText\r\n                          validate={composeValidators(required)} \r\n                          name='name'\r\n                          component={InputField}\r\n                          placeholder={'ім’я (обов’язково*)'}\r\n                      />\r\n                      <InputText\r\n                          name='phone'\r\n                          component={InputField}\r\n                          placeholder={'телефон'}\r\n                      />\r\n                      \r\n                      {isLoadNewUser\r\n                      ? <LoadButton><Preloader full={false} height={40}/></LoadButton>\r\n                      : <SubmitButton type='submit'>ПОГНАЛИ!</SubmitButton>}\r\n                  </FormBox>\r\n              )}\r\n        />\r\n    </Page>\r\n}\r\n\r\n\r\nexport default Auth","import React, {FC, useEffect} from 'react'\r\nimport {AppStateType} from '../../store/store'\r\nimport {connect, ConnectedProps} from 'react-redux'\r\nimport Auth from './auth'\r\nimport {AddNewUserThunk, CleanState, ToggleLoadSubmit} from '../../store/auth-reducer'\r\nimport {LoginFormDataType} from '../../types/types'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n///////////// types for props\r\ntype PropsType = PropsFromRedux\r\n// types takes from connect() where added mapStateToProps and mapDispatchToProps\r\ntype PropsFromRedux = ConnectedProps<typeof connector>\r\n\r\n\r\nlet AuthContainer: FC<PropsType> = ({\r\n                                        AddNewUserThunk, \r\n                                        ToggleLoadSubmit, \r\n                                        isLoadNewUser, \r\n                                        CleanState,\r\n                                        isRedirectToMainPage\r\n}) => {\r\n    \r\n    useEffect(()=>{\r\n        return ()=>{CleanState()}\r\n    },[])\r\n    \r\n    const onSubmit = (formData: LoginFormDataType) => {\r\n        AddNewUserThunk(formData)\r\n        ToggleLoadSubmit()\r\n    }\r\n    \r\n    if (isRedirectToMainPage) {\r\n        return <Redirect to='/' />\r\n    } else {\r\n        return <Auth isLoadNewUser={isLoadNewUser} onSubmit={onSubmit}/>\r\n    }\r\n    \r\n}\r\n\r\n///////////// create props for App component\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        isLoadNewUser: state.AuthReduser.isLoadNewUser,\r\n        isRedirectToMainPage: state.AuthReduser.isRedirectToMainPage\r\n    }\r\n}\r\n\r\nconst connector = connect(mapStateToProps, { AddNewUserThunk, ToggleLoadSubmit, CleanState })\r\nexport default connector(AuthContainer)\r\n","// @ts-ignore\r\nexport let generatorId = (): string => ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,c=>(c^crypto.getRandomValues(new Uint8Array(1))[0]&15 >> c/4).toString(16))","import React, {FC} from 'react'\r\n\r\n///////////// types for props\r\ntype PropsType = {\r\n}\r\n\r\n\r\nlet Instruction: FC<PropsType> = ({}) => {\r\n\r\n    return <>\r\n    <h1>Інструкція</h1>\r\n    </>\r\n}\r\n\r\n\r\nexport default Instruction","import './app-styles.css'\nimport {Container, FullScreenBlock} from './app-styled-components'\nimport React, {FC, useEffect, useState} from 'react'\nimport {developerFun} from './services/developer_functions'\nimport {getCookie} from './services/cookies_functions'\nimport {AppStateType} from './store/store'\nimport {connect, ConnectedProps} from 'react-redux'\nimport {SetUser} from './store/auth-reducer'\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport PrivateRoute from './HOC/private-route'\nimport MainContainer from './components/main-page/main-container'\nimport AuthContainer from './components/auth-page/auth-container'\nimport Instruction from './components/instruction-page/instruction'\nimport Preloader from \"./components/common-components/preloader/preloader\";\n\n///////////// types for props\ntype PropsType = PropsFromRedux\n// types takes from connect() where added mapStateToProps and mapDispatchToProps\ntype PropsFromRedux = ConnectedProps<typeof connector>\n\nlet App: FC<PropsType> = ({ isRegistered, SetUser }) => {\n    \n    useEffect(()=>{\n        ///// cookies\n        if (getCookie('registered') === 'true' && isRegistered === null) {\n            let userData = {\n                isRegistered: true,\n                name: getCookie('user'),\n                idUser: getCookie('idUser'),\n                phone: getCookie('phone'),\n            }\n            SetUser(userData)\n        } else {\n            let userData = {\n                isRegistered: false,\n                name: null,\n                idUser: null,\n                phone: null,\n            }\n            SetUser(userData)\n        }\n    },[])\n    \n    ///// developer delete cookies button CTRL and ALT get state\n    developerFun()\n    \n    ///// for dynamic height\n    const [height, setHeight] = useState(window.innerHeight)\n    // @ts-ignore\n    useEffect(() => {\n        function handleResize() {\n            setHeight(window.innerHeight)\n        }\n\n        window.addEventListener('resize', handleResize)\n        return (_: any) => {\n            window.removeEventListener('resize', handleResize)\n        }\n    })\n\n    // @ts-ignore\n    return <BrowserRouter><Container height={height}>\n        {isRegistered === null\n        ? <Preloader full />\n        : <>\n                <Route path='/login' exact render={() =><AuthContainer />}/>\n                <Route path='/instruction' exact render={() =><Instruction />}/>\n                <Route path='/' exact render={()=> <PrivateRoute component={MainContainer} auth={isRegistered}/>}/>\n            </>} \n            \n    </Container>\n        {/*@ts-ignore*/}\n        <FullScreenBlock height={height}>\n            <h2>Підтримка широких екранів відсутня. <br/> Користуйтесь телефоном або звузьте вікно браузера.</h2>\n        </FullScreenBlock>\n    </BrowserRouter>\n}\n\n///////////// create props for App component\nlet mapStateToProps = (state: AppStateType) => {\n    return {\n        isRegistered: state.AuthReduser.isRegistered,\n    }\n}\n\nconst connector = connect(mapStateToProps, { SetUser })\nexport default connector(App)\n","import { deleteCookie } from './cookies_functions'\r\n\r\nexport let developerFun = (): void => {\r\n    document.addEventListener('keydown', function (event) {\r\n        if (event.ctrlKey) {\r\n          deleteCookie('registered')\r\n          deleteCookie('user')\r\n          deleteCookie('idUser')\r\n        }\r\n      })\r\n      document.addEventListener('keydown', function (event) {\r\n        if (event.altKey) {\r\n    // @ts-ignore\r\n            console.log(window.store.getState())\r\n        }\r\n      })\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport AuthReduser from './auth-reducer'\r\n\r\nlet redusers = combineReducers(\r\n    {\r\n        AuthReduser\r\n    })\r\n\r\ntype ReducersType = typeof redusers\r\nexport type AppStateType = ReturnType<ReducersType>\r\n\r\n///// create store and added middleware for thanks\r\nconst store = createStore(redusers, applyMiddleware(thunkMiddleware))\r\n\r\n// @ts-ignore // for view info in devtools\r\nwindow.store = store\r\n\r\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport {Provider} from 'react-redux'\nimport store from './store/store'\n\nReactDOM.render(<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}